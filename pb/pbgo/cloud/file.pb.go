// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: cloud/file.proto

package pbcloud

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadSessionStatus int32

const (
	UploadSessionStatus_CREATED          UploadSessionStatus = 0
	UploadSessionStatus_INITIALIZED      UploadSessionStatus = 1
	UploadSessionStatus_UPLOADING_CHUNKS UploadSessionStatus = 2
	UploadSessionStatus_COMPLETED        UploadSessionStatus = 3
)

// Enum value maps for UploadSessionStatus.
var (
	UploadSessionStatus_name = map[int32]string{
		0: "CREATED",
		1: "INITIALIZED",
		2: "UPLOADING_CHUNKS",
		3: "COMPLETED",
	}
	UploadSessionStatus_value = map[string]int32{
		"CREATED":          0,
		"INITIALIZED":      1,
		"UPLOADING_CHUNKS": 2,
		"COMPLETED":        3,
	}
)

func (x UploadSessionStatus) Enum() *UploadSessionStatus {
	p := new(UploadSessionStatus)
	*p = x
	return p
}

func (x UploadSessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UploadSessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_file_proto_enumTypes[0].Descriptor()
}

func (UploadSessionStatus) Type() protoreflect.EnumType {
	return &file_cloud_file_proto_enumTypes[0]
}

func (x UploadSessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UploadSessionStatus.Descriptor instead.
func (UploadSessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_cloud_file_proto_rawDescGZIP(), []int{0}
}

type UploadSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status                 UploadSessionStatus    `protobuf:"varint,2,opt,name=status,proto3,enum=UploadSessionStatus" json:"status,omitempty"`
	UploadedSizeInBytes    uint64                 `protobuf:"varint,3,opt,name=uploadedSizeInBytes,proto3" json:"uploadedSizeInBytes,omitempty"`
	FileId                 uint64                 `protobuf:"varint,4,opt,name=fileId,proto3" json:"fileId,omitempty"`
	FileName               string                 `protobuf:"bytes,5,opt,name=fileName,proto3" json:"fileName,omitempty"`
	MimeType               string                 `protobuf:"bytes,6,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	TotalSizeInBytes       uint64                 `protobuf:"varint,7,opt,name=totalSizeInBytes,proto3" json:"totalSizeInBytes,omitempty"`
	TotalNumOfChunks       int32                  `protobuf:"varint,8,opt,name=totalNumOfChunks,proto3" json:"totalNumOfChunks,omitempty"`
	ChunkIDs               []uint64               `protobuf:"varint,9,rep,packed,name=chunkIDs,proto3" json:"chunkIDs,omitempty"`
	NextChunkIndexToUpload int32                  `protobuf:"varint,10,opt,name=nextChunkIndexToUpload,proto3" json:"nextChunkIndexToUpload,omitempty"`
	ActualContentHash      string                 `protobuf:"bytes,11,opt,name=actualContentHash,proto3" json:"actualContentHash,omitempty"`
	ExpectedContentHash    string                 `protobuf:"bytes,12,opt,name=expectedContentHash,proto3" json:"expectedContentHash,omitempty"`
	CreatedAt              *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt              *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updatedAt,proto3,oneof" json:"updatedAt,omitempty"`
}

func (x *UploadSession) Reset() {
	*x = UploadSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSession) ProtoMessage() {}

func (x *UploadSession) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSession.ProtoReflect.Descriptor instead.
func (*UploadSession) Descriptor() ([]byte, []int) {
	return file_cloud_file_proto_rawDescGZIP(), []int{0}
}

func (x *UploadSession) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UploadSession) GetStatus() UploadSessionStatus {
	if x != nil {
		return x.Status
	}
	return UploadSessionStatus_CREATED
}

func (x *UploadSession) GetUploadedSizeInBytes() uint64 {
	if x != nil {
		return x.UploadedSizeInBytes
	}
	return 0
}

func (x *UploadSession) GetFileId() uint64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *UploadSession) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadSession) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *UploadSession) GetTotalSizeInBytes() uint64 {
	if x != nil {
		return x.TotalSizeInBytes
	}
	return 0
}

func (x *UploadSession) GetTotalNumOfChunks() int32 {
	if x != nil {
		return x.TotalNumOfChunks
	}
	return 0
}

func (x *UploadSession) GetChunkIDs() []uint64 {
	if x != nil {
		return x.ChunkIDs
	}
	return nil
}

func (x *UploadSession) GetNextChunkIndexToUpload() int32 {
	if x != nil {
		return x.NextChunkIndexToUpload
	}
	return 0
}

func (x *UploadSession) GetActualContentHash() string {
	if x != nil {
		return x.ActualContentHash
	}
	return ""
}

func (x *UploadSession) GetExpectedContentHash() string {
	if x != nil {
		return x.ExpectedContentHash
	}
	return ""
}

func (x *UploadSession) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UploadSession) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type FindUploadSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadSessionId uint64 `protobuf:"varint,1,opt,name=uploadSessionId,proto3" json:"uploadSessionId,omitempty"`
}

func (x *FindUploadSessionRequest) Reset() {
	*x = FindUploadSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_file_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUploadSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUploadSessionRequest) ProtoMessage() {}

func (x *FindUploadSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_file_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUploadSessionRequest.ProtoReflect.Descriptor instead.
func (*FindUploadSessionRequest) Descriptor() ([]byte, []int) {
	return file_cloud_file_proto_rawDescGZIP(), []int{1}
}

func (x *FindUploadSessionRequest) GetUploadSessionId() uint64 {
	if x != nil {
		return x.UploadSessionId
	}
	return 0
}

type CreateUploadSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadSessionId uint64 `protobuf:"varint,1,opt,name=uploadSessionId,proto3" json:"uploadSessionId,omitempty"`
}

func (x *CreateUploadSessionResponse) Reset() {
	*x = CreateUploadSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_file_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUploadSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUploadSessionResponse) ProtoMessage() {}

func (x *CreateUploadSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_file_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUploadSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateUploadSessionResponse) Descriptor() ([]byte, []int) {
	return file_cloud_file_proto_rawDescGZIP(), []int{2}
}

func (x *CreateUploadSessionResponse) GetUploadSessionId() uint64 {
	if x != nil {
		return x.UploadSessionId
	}
	return 0
}

var File_cloud_file_proto protoreflect.FileDescriptor

var file_cloud_file_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe2, 0x04, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x30, 0x0a, 0x13, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65,
	0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x49,
	0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x4f, 0x66, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x4f, 0x66, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x49, 0x44, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x49, 0x44, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x30, 0x0a, 0x13,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x44, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x1b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x2a, 0x58, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x49, 0x54,
	0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x50, 0x4c,
	0x4f, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x48, 0x55, 0x4e, 0x4b, 0x53, 0x10, 0x02, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x32, 0x93,
	0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x2f, 0x70, 0x62, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_file_proto_rawDescOnce sync.Once
	file_cloud_file_proto_rawDescData = file_cloud_file_proto_rawDesc
)

func file_cloud_file_proto_rawDescGZIP() []byte {
	file_cloud_file_proto_rawDescOnce.Do(func() {
		file_cloud_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_file_proto_rawDescData)
	})
	return file_cloud_file_proto_rawDescData
}

var file_cloud_file_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cloud_file_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cloud_file_proto_goTypes = []interface{}{
	(UploadSessionStatus)(0),            // 0: UploadSessionStatus
	(*UploadSession)(nil),               // 1: UploadSession
	(*FindUploadSessionRequest)(nil),    // 2: FindUploadSessionRequest
	(*CreateUploadSessionResponse)(nil), // 3: CreateUploadSessionResponse
	(*timestamppb.Timestamp)(nil),       // 4: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),               // 5: google.protobuf.Empty
}
var file_cloud_file_proto_depIdxs = []int32{
	0, // 0: UploadSession.status:type_name -> UploadSessionStatus
	4, // 1: UploadSession.createdAt:type_name -> google.protobuf.Timestamp
	4, // 2: UploadSession.updatedAt:type_name -> google.protobuf.Timestamp
	2, // 3: File.FindUploadSession:input_type -> FindUploadSessionRequest
	5, // 4: File.CreateUploadSession:input_type -> google.protobuf.Empty
	1, // 5: File.FindUploadSession:output_type -> UploadSession
	3, // 6: File.CreateUploadSession:output_type -> CreateUploadSessionResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_cloud_file_proto_init() }
func file_cloud_file_proto_init() {
	if File_cloud_file_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloud_file_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_file_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUploadSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_file_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUploadSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cloud_file_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_file_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloud_file_proto_goTypes,
		DependencyIndexes: file_cloud_file_proto_depIdxs,
		EnumInfos:         file_cloud_file_proto_enumTypes,
		MessageInfos:      file_cloud_file_proto_msgTypes,
	}.Build()
	File_cloud_file_proto = out.File
	file_cloud_file_proto_rawDesc = nil
	file_cloud_file_proto_goTypes = nil
	file_cloud_file_proto_depIdxs = nil
}
