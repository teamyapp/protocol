// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v5.27.1
// source: teamy/phase_service.proto

package pbteamy

import (
	message "github.com/teamyapp/protocol/pb/pbgo/pbteamy/message"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPhaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhaseId uint64 `protobuf:"varint,1,opt,name=phaseId,proto3" json:"phaseId,omitempty"`
}

func (x *GetPhaseRequest) Reset() {
	*x = GetPhaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_phase_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhaseRequest) ProtoMessage() {}

func (x *GetPhaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_phase_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhaseRequest.ProtoReflect.Descriptor instead.
func (*GetPhaseRequest) Descriptor() ([]byte, []int) {
	return file_teamy_phase_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetPhaseRequest) GetPhaseId() uint64 {
	if x != nil {
		return x.PhaseId
	}
	return 0
}

type GetPhaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phase *message.Phase `protobuf:"bytes,1,opt,name=phase,proto3" json:"phase,omitempty"`
}

func (x *GetPhaseResponse) Reset() {
	*x = GetPhaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_phase_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhaseResponse) ProtoMessage() {}

func (x *GetPhaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_phase_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhaseResponse.ProtoReflect.Descriptor instead.
func (*GetPhaseResponse) Descriptor() ([]byte, []int) {
	return file_teamy_phase_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetPhaseResponse) GetPhase() *message.Phase {
	if x != nil {
		return x.Phase
	}
	return nil
}

type ListPhasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhaseIds []uint64 `protobuf:"varint,1,rep,packed,name=phaseIds,proto3" json:"phaseIds,omitempty"`
}

func (x *ListPhasesRequest) Reset() {
	*x = ListPhasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_phase_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPhasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPhasesRequest) ProtoMessage() {}

func (x *ListPhasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_phase_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPhasesRequest.ProtoReflect.Descriptor instead.
func (*ListPhasesRequest) Descriptor() ([]byte, []int) {
	return file_teamy_phase_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListPhasesRequest) GetPhaseIds() []uint64 {
	if x != nil {
		return x.PhaseIds
	}
	return nil
}

type ListPhasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phases []*message.Phase `protobuf:"bytes,1,rep,name=phases,proto3" json:"phases,omitempty"`
}

func (x *ListPhasesResponse) Reset() {
	*x = ListPhasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_phase_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPhasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPhasesResponse) ProtoMessage() {}

func (x *ListPhasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_phase_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPhasesResponse.ProtoReflect.Descriptor instead.
func (*ListPhasesResponse) Descriptor() ([]byte, []int) {
	return file_teamy_phase_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListPhasesResponse) GetPhases() []*message.Phase {
	if x != nil {
		return x.Phases
	}
	return nil
}

type CreatePhaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       uint64                 `protobuf:"varint,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExpectedStartAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expectedStartAt,proto3" json:"expectedStartAt,omitempty"`
	ExpectedEndAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expectedEndAt,proto3" json:"expectedEndAt,omitempty"`
}

func (x *CreatePhaseRequest) Reset() {
	*x = CreatePhaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_phase_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhaseRequest) ProtoMessage() {}

func (x *CreatePhaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_phase_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhaseRequest.ProtoReflect.Descriptor instead.
func (*CreatePhaseRequest) Descriptor() ([]byte, []int) {
	return file_teamy_phase_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePhaseRequest) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *CreatePhaseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePhaseRequest) GetExpectedStartAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpectedStartAt
	}
	return nil
}

func (x *CreatePhaseRequest) GetExpectedEndAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpectedEndAt
	}
	return nil
}

type CreatePhaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phase *message.Phase `protobuf:"bytes,1,opt,name=phase,proto3" json:"phase,omitempty"`
}

func (x *CreatePhaseResponse) Reset() {
	*x = CreatePhaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_phase_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhaseResponse) ProtoMessage() {}

func (x *CreatePhaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_phase_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhaseResponse.ProtoReflect.Descriptor instead.
func (*CreatePhaseResponse) Descriptor() ([]byte, []int) {
	return file_teamy_phase_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePhaseResponse) GetPhase() *message.Phase {
	if x != nil {
		return x.Phase
	}
	return nil
}

type UpdatePhaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhaseId         uint64                 `protobuf:"varint,1,opt,name=phaseId,proto3" json:"phaseId,omitempty"`
	Name            *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	ExpectedStartAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expectedStartAt,proto3,oneof" json:"expectedStartAt,omitempty"`
	ExpectedEndAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expectedEndAt,proto3,oneof" json:"expectedEndAt,omitempty"`
	ActualStartAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=actualStartAt,proto3,oneof" json:"actualStartAt,omitempty"`
	ActualEndAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=actualEndAt,proto3,oneof" json:"actualEndAt,omitempty"`
	Status          *message.PhaseStatus   `protobuf:"varint,7,opt,name=status,proto3,enum=PhaseStatus,oneof" json:"status,omitempty"`
}

func (x *UpdatePhaseRequest) Reset() {
	*x = UpdatePhaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_phase_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhaseRequest) ProtoMessage() {}

func (x *UpdatePhaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_phase_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhaseRequest.ProtoReflect.Descriptor instead.
func (*UpdatePhaseRequest) Descriptor() ([]byte, []int) {
	return file_teamy_phase_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePhaseRequest) GetPhaseId() uint64 {
	if x != nil {
		return x.PhaseId
	}
	return 0
}

func (x *UpdatePhaseRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdatePhaseRequest) GetExpectedStartAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpectedStartAt
	}
	return nil
}

func (x *UpdatePhaseRequest) GetExpectedEndAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpectedEndAt
	}
	return nil
}

func (x *UpdatePhaseRequest) GetActualStartAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ActualStartAt
	}
	return nil
}

func (x *UpdatePhaseRequest) GetActualEndAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ActualEndAt
	}
	return nil
}

func (x *UpdatePhaseRequest) GetStatus() message.PhaseStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return message.PhaseStatus(0)
}

type UpdatePhaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phase *message.Phase `protobuf:"bytes,1,opt,name=phase,proto3" json:"phase,omitempty"`
}

func (x *UpdatePhaseResponse) Reset() {
	*x = UpdatePhaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_phase_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhaseResponse) ProtoMessage() {}

func (x *UpdatePhaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_phase_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhaseResponse.ProtoReflect.Descriptor instead.
func (*UpdatePhaseResponse) Descriptor() ([]byte, []int) {
	return file_teamy_phase_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePhaseResponse) GetPhase() *message.Phase {
	if x != nil {
		return x.Phase
	}
	return nil
}

type DeletePhaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhaseId uint64 `protobuf:"varint,1,opt,name=phaseId,proto3" json:"phaseId,omitempty"`
}

func (x *DeletePhaseRequest) Reset() {
	*x = DeletePhaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_phase_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePhaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePhaseRequest) ProtoMessage() {}

func (x *DeletePhaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_phase_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePhaseRequest.ProtoReflect.Descriptor instead.
func (*DeletePhaseRequest) Descriptor() ([]byte, []int) {
	return file_teamy_phase_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeletePhaseRequest) GetPhaseId() uint64 {
	if x != nil {
		return x.PhaseId
	}
	return 0
}

type AddStoryToPhaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhaseId uint64 `protobuf:"varint,1,opt,name=phaseId,proto3" json:"phaseId,omitempty"`
	StoryId uint64 `protobuf:"varint,2,opt,name=storyId,proto3" json:"storyId,omitempty"`
}

func (x *AddStoryToPhaseRequest) Reset() {
	*x = AddStoryToPhaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_phase_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStoryToPhaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStoryToPhaseRequest) ProtoMessage() {}

func (x *AddStoryToPhaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_phase_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStoryToPhaseRequest.ProtoReflect.Descriptor instead.
func (*AddStoryToPhaseRequest) Descriptor() ([]byte, []int) {
	return file_teamy_phase_service_proto_rawDescGZIP(), []int{9}
}

func (x *AddStoryToPhaseRequest) GetPhaseId() uint64 {
	if x != nil {
		return x.PhaseId
	}
	return 0
}

func (x *AddStoryToPhaseRequest) GetStoryId() uint64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

type RemoveStoryFromPhaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhaseId uint64 `protobuf:"varint,1,opt,name=phaseId,proto3" json:"phaseId,omitempty"`
	StoryId uint64 `protobuf:"varint,2,opt,name=storyId,proto3" json:"storyId,omitempty"`
}

func (x *RemoveStoryFromPhaseRequest) Reset() {
	*x = RemoveStoryFromPhaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_phase_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStoryFromPhaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStoryFromPhaseRequest) ProtoMessage() {}

func (x *RemoveStoryFromPhaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_phase_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStoryFromPhaseRequest.ProtoReflect.Descriptor instead.
func (*RemoveStoryFromPhaseRequest) Descriptor() ([]byte, []int) {
	return file_teamy_phase_service_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveStoryFromPhaseRequest) GetPhaseId() uint64 {
	if x != nil {
		return x.PhaseId
	}
	return 0
}

func (x *RemoveStoryFromPhaseRequest) GetStoryId() uint64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

type AddStoriesToPhaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhaseId  uint64   `protobuf:"varint,1,opt,name=phaseId,proto3" json:"phaseId,omitempty"`
	StoryIds []uint64 `protobuf:"varint,2,rep,packed,name=storyIds,proto3" json:"storyIds,omitempty"`
}

func (x *AddStoriesToPhaseRequest) Reset() {
	*x = AddStoriesToPhaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_phase_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStoriesToPhaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStoriesToPhaseRequest) ProtoMessage() {}

func (x *AddStoriesToPhaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_phase_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStoriesToPhaseRequest.ProtoReflect.Descriptor instead.
func (*AddStoriesToPhaseRequest) Descriptor() ([]byte, []int) {
	return file_teamy_phase_service_proto_rawDescGZIP(), []int{11}
}

func (x *AddStoriesToPhaseRequest) GetPhaseId() uint64 {
	if x != nil {
		return x.PhaseId
	}
	return 0
}

func (x *AddStoriesToPhaseRequest) GetStoryIds() []uint64 {
	if x != nil {
		return x.StoryIds
	}
	return nil
}

type RemoveStoriesFromPhaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhaseId  uint64   `protobuf:"varint,1,opt,name=phaseId,proto3" json:"phaseId,omitempty"`
	StoryIds []uint64 `protobuf:"varint,2,rep,packed,name=storyIds,proto3" json:"storyIds,omitempty"`
}

func (x *RemoveStoriesFromPhaseRequest) Reset() {
	*x = RemoveStoriesFromPhaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_phase_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStoriesFromPhaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStoriesFromPhaseRequest) ProtoMessage() {}

func (x *RemoveStoriesFromPhaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_phase_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStoriesFromPhaseRequest.ProtoReflect.Descriptor instead.
func (*RemoveStoriesFromPhaseRequest) Descriptor() ([]byte, []int) {
	return file_teamy_phase_service_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveStoriesFromPhaseRequest) GetPhaseId() uint64 {
	if x != nil {
		return x.PhaseId
	}
	return 0
}

func (x *RemoveStoriesFromPhaseRequest) GetStoryIds() []uint64 {
	if x != nil {
		return x.StoryIds
	}
	return nil
}

var File_teamy_phase_service_proto protoreflect.FileDescriptor

var file_teamy_phase_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x2f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x74, 0x65, 0x61, 0x6d, 0x79,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x68, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x22, 0x30, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68,
	0x61, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x73, 0x22, 0x34, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x70, 0x68,
	0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x06, 0x70, 0x68, 0x61, 0x73, 0x65, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x65, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x22, 0x33, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x22, 0xea, 0x03, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x68, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x0f, 0x65, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x01, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0d,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x03, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x6e, 0x64,
	0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x04, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x6e,
	0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x48, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x41, 0x74,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x6e, 0x64,
	0x41, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x33, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61,
	0x73, 0x65, 0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x49, 0x64, 0x22, 0x4c, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x6f,
	0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x22, 0x51, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x46,
	0x72, 0x6f, 0x6d, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x70, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x54, 0x6f, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x70, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x68, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x32, 0xd2, 0x04, 0x0a,
	0x0c, 0x50, 0x68, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x68, 0x61, 0x73, 0x65, 0x12, 0x13, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x13,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x13, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x54, 0x6f, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x17, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x54, 0x6f, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x14, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x12, 0x1c, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x46,
	0x72, 0x6f, 0x6d, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x54, 0x6f, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x19, 0x2e, 0x41,
	0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x54, 0x6f, 0x50, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x50, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x46, 0x72, 0x6f, 0x6d, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x65, 0x61, 0x6d, 0x79, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x2f, 0x70, 0x62, 0x74, 0x65, 0x61, 0x6d,
	0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teamy_phase_service_proto_rawDescOnce sync.Once
	file_teamy_phase_service_proto_rawDescData = file_teamy_phase_service_proto_rawDesc
)

func file_teamy_phase_service_proto_rawDescGZIP() []byte {
	file_teamy_phase_service_proto_rawDescOnce.Do(func() {
		file_teamy_phase_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_teamy_phase_service_proto_rawDescData)
	})
	return file_teamy_phase_service_proto_rawDescData
}

var file_teamy_phase_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_teamy_phase_service_proto_goTypes = []interface{}{
	(*GetPhaseRequest)(nil),               // 0: GetPhaseRequest
	(*GetPhaseResponse)(nil),              // 1: GetPhaseResponse
	(*ListPhasesRequest)(nil),             // 2: ListPhasesRequest
	(*ListPhasesResponse)(nil),            // 3: ListPhasesResponse
	(*CreatePhaseRequest)(nil),            // 4: CreatePhaseRequest
	(*CreatePhaseResponse)(nil),           // 5: CreatePhaseResponse
	(*UpdatePhaseRequest)(nil),            // 6: UpdatePhaseRequest
	(*UpdatePhaseResponse)(nil),           // 7: UpdatePhaseResponse
	(*DeletePhaseRequest)(nil),            // 8: DeletePhaseRequest
	(*AddStoryToPhaseRequest)(nil),        // 9: AddStoryToPhaseRequest
	(*RemoveStoryFromPhaseRequest)(nil),   // 10: RemoveStoryFromPhaseRequest
	(*AddStoriesToPhaseRequest)(nil),      // 11: AddStoriesToPhaseRequest
	(*RemoveStoriesFromPhaseRequest)(nil), // 12: RemoveStoriesFromPhaseRequest
	(*message.Phase)(nil),                 // 13: Phase
	(*timestamppb.Timestamp)(nil),         // 14: google.protobuf.Timestamp
	(message.PhaseStatus)(0),              // 15: PhaseStatus
	(*emptypb.Empty)(nil),                 // 16: google.protobuf.Empty
}
var file_teamy_phase_service_proto_depIdxs = []int32{
	13, // 0: GetPhaseResponse.phase:type_name -> Phase
	13, // 1: ListPhasesResponse.phases:type_name -> Phase
	14, // 2: CreatePhaseRequest.expectedStartAt:type_name -> google.protobuf.Timestamp
	14, // 3: CreatePhaseRequest.expectedEndAt:type_name -> google.protobuf.Timestamp
	13, // 4: CreatePhaseResponse.phase:type_name -> Phase
	14, // 5: UpdatePhaseRequest.expectedStartAt:type_name -> google.protobuf.Timestamp
	14, // 6: UpdatePhaseRequest.expectedEndAt:type_name -> google.protobuf.Timestamp
	14, // 7: UpdatePhaseRequest.actualStartAt:type_name -> google.protobuf.Timestamp
	14, // 8: UpdatePhaseRequest.actualEndAt:type_name -> google.protobuf.Timestamp
	15, // 9: UpdatePhaseRequest.status:type_name -> PhaseStatus
	13, // 10: UpdatePhaseResponse.phase:type_name -> Phase
	0,  // 11: PhaseService.GetPhase:input_type -> GetPhaseRequest
	2,  // 12: PhaseService.ListPhases:input_type -> ListPhasesRequest
	4,  // 13: PhaseService.CreatePhase:input_type -> CreatePhaseRequest
	6,  // 14: PhaseService.UpdatePhase:input_type -> UpdatePhaseRequest
	8,  // 15: PhaseService.DeletePhase:input_type -> DeletePhaseRequest
	9,  // 16: PhaseService.AddStoryToPhase:input_type -> AddStoryToPhaseRequest
	10, // 17: PhaseService.RemoveStoryFromPhase:input_type -> RemoveStoryFromPhaseRequest
	11, // 18: PhaseService.AddStoriesToPhase:input_type -> AddStoriesToPhaseRequest
	12, // 19: PhaseService.RemoveStoriesFromPhase:input_type -> RemoveStoriesFromPhaseRequest
	1,  // 20: PhaseService.GetPhase:output_type -> GetPhaseResponse
	3,  // 21: PhaseService.ListPhases:output_type -> ListPhasesResponse
	5,  // 22: PhaseService.CreatePhase:output_type -> CreatePhaseResponse
	7,  // 23: PhaseService.UpdatePhase:output_type -> UpdatePhaseResponse
	16, // 24: PhaseService.DeletePhase:output_type -> google.protobuf.Empty
	16, // 25: PhaseService.AddStoryToPhase:output_type -> google.protobuf.Empty
	16, // 26: PhaseService.RemoveStoryFromPhase:output_type -> google.protobuf.Empty
	16, // 27: PhaseService.AddStoriesToPhase:output_type -> google.protobuf.Empty
	16, // 28: PhaseService.RemoveStoriesFromPhase:output_type -> google.protobuf.Empty
	20, // [20:29] is the sub-list for method output_type
	11, // [11:20] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_teamy_phase_service_proto_init() }
func file_teamy_phase_service_proto_init() {
	if File_teamy_phase_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teamy_phase_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_phase_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_phase_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPhasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_phase_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPhasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_phase_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_phase_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_phase_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_phase_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_phase_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePhaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_phase_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStoryToPhaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_phase_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStoryFromPhaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_phase_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStoriesToPhaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_phase_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStoriesFromPhaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_teamy_phase_service_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teamy_phase_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teamy_phase_service_proto_goTypes,
		DependencyIndexes: file_teamy_phase_service_proto_depIdxs,
		MessageInfos:      file_teamy_phase_service_proto_msgTypes,
	}.Build()
	File_teamy_phase_service_proto = out.File
	file_teamy_phase_service_proto_rawDesc = nil
	file_teamy_phase_service_proto_goTypes = nil
	file_teamy_phase_service_proto_depIdxs = nil
}
