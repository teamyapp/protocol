// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v5.27.1
// source: teamy/message/group.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GroupType int32

const (
	GroupType_STATIC GroupType = 0
	GroupType_FILTER GroupType = 1
)

// Enum value maps for GroupType.
var (
	GroupType_name = map[int32]string{
		0: "STATIC",
		1: "FILTER",
	}
	GroupType_value = map[string]int32{
		"STATIC": 0,
		"FILTER": 1,
	}
)

func (x GroupType) Enum() *GroupType {
	p := new(GroupType)
	*p = x
	return p
}

func (x GroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_teamy_message_group_proto_enumTypes[0].Descriptor()
}

func (GroupType) Type() protoreflect.EnumType {
	return &file_teamy_message_group_proto_enumTypes[0]
}

func (x GroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupType.Descriptor instead.
func (GroupType) EnumDescriptor() ([]byte, []int) {
	return file_teamy_message_group_proto_rawDescGZIP(), []int{0}
}

type GroupMemberType int32

const (
	GroupMemberType_USER GroupMemberType = 0
	GroupMemberType_TEAM GroupMemberType = 1
)

// Enum value maps for GroupMemberType.
var (
	GroupMemberType_name = map[int32]string{
		0: "USER",
		1: "TEAM",
	}
	GroupMemberType_value = map[string]int32{
		"USER": 0,
		"TEAM": 1,
	}
)

func (x GroupMemberType) Enum() *GroupMemberType {
	p := new(GroupMemberType)
	*p = x
	return p
}

func (x GroupMemberType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupMemberType) Descriptor() protoreflect.EnumDescriptor {
	return file_teamy_message_group_proto_enumTypes[1].Descriptor()
}

func (GroupMemberType) Type() protoreflect.EnumType {
	return &file_teamy_message_group_proto_enumTypes[1]
}

func (x GroupMemberType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupMemberType.Descriptor instead.
func (GroupMemberType) EnumDescriptor() ([]byte, []int) {
	return file_teamy_message_group_proto_rawDescGZIP(), []int{1}
}

type GroupBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    uint64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Locked                bool                    `protobuf:"varint,2,opt,name=locked,proto3" json:"locked,omitempty"`
	MaxRolloutIndex       int32                   `protobuf:"varint,3,opt,name=maxRolloutIndex,proto3" json:"maxRolloutIndex,omitempty"`
	Name                  string                  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Type                  GroupType               `protobuf:"varint,5,opt,name=type,proto3,enum=GroupType" json:"type,omitempty"`
	MemberType            GroupMemberType         `protobuf:"varint,6,opt,name=memberType,proto3,enum=GroupMemberType" json:"memberType,omitempty"`
	CreatedAt             *timestamppb.Timestamp  `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt             *timestamppb.Timestamp  `protobuf:"bytes,8,opt,name=updatedAt,proto3,oneof" json:"updatedAt,omitempty"`
	GroupRolloutRelations []*GroupRolloutRelation `protobuf:"bytes,9,rep,name=groupRolloutRelations,proto3" json:"groupRolloutRelations,omitempty"`
	AppIds                []uint64                `protobuf:"varint,10,rep,packed,name=appIds,proto3" json:"appIds,omitempty"`
}

func (x *GroupBase) Reset() {
	*x = GroupBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_message_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupBase) ProtoMessage() {}

func (x *GroupBase) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_message_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupBase.ProtoReflect.Descriptor instead.
func (*GroupBase) Descriptor() ([]byte, []int) {
	return file_teamy_message_group_proto_rawDescGZIP(), []int{0}
}

func (x *GroupBase) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupBase) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *GroupBase) GetMaxRolloutIndex() int32 {
	if x != nil {
		return x.MaxRolloutIndex
	}
	return 0
}

func (x *GroupBase) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupBase) GetType() GroupType {
	if x != nil {
		return x.Type
	}
	return GroupType_STATIC
}

func (x *GroupBase) GetMemberType() GroupMemberType {
	if x != nil {
		return x.MemberType
	}
	return GroupMemberType_USER
}

func (x *GroupBase) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GroupBase) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GroupBase) GetGroupRolloutRelations() []*GroupRolloutRelation {
	if x != nil {
		return x.GroupRolloutRelations
	}
	return nil
}

func (x *GroupBase) GetAppIds() []uint64 {
	if x != nil {
		return x.AppIds
	}
	return nil
}

type GroupRolloutRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId    uint64 `protobuf:"varint,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	RolloutId  uint64 `protobuf:"varint,2,opt,name=rolloutId,proto3" json:"rolloutId,omitempty"`
	OrderIndex int32  `protobuf:"varint,3,opt,name=orderIndex,proto3" json:"orderIndex,omitempty"`
}

func (x *GroupRolloutRelation) Reset() {
	*x = GroupRolloutRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_message_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRolloutRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRolloutRelation) ProtoMessage() {}

func (x *GroupRolloutRelation) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_message_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRolloutRelation.ProtoReflect.Descriptor instead.
func (*GroupRolloutRelation) Descriptor() ([]byte, []int) {
	return file_teamy_message_group_proto_rawDescGZIP(), []int{1}
}

func (x *GroupRolloutRelation) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GroupRolloutRelation) GetRolloutId() uint64 {
	if x != nil {
		return x.RolloutId
	}
	return 0
}

func (x *GroupRolloutRelation) GetOrderIndex() int32 {
	if x != nil {
		return x.OrderIndex
	}
	return 0
}

type UserStaticGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base    *GroupBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UserIds []uint64   `protobuf:"varint,2,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
}

func (x *UserStaticGroup) Reset() {
	*x = UserStaticGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_message_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStaticGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStaticGroup) ProtoMessage() {}

func (x *UserStaticGroup) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_message_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStaticGroup.ProtoReflect.Descriptor instead.
func (*UserStaticGroup) Descriptor() ([]byte, []int) {
	return file_teamy_message_group_proto_rawDescGZIP(), []int{2}
}

func (x *UserStaticGroup) GetBase() *GroupBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *UserStaticGroup) GetUserIds() []uint64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type TeamStaticGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base    *GroupBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	TeamIds []uint64   `protobuf:"varint,2,rep,packed,name=teamIds,proto3" json:"teamIds,omitempty"`
}

func (x *TeamStaticGroup) Reset() {
	*x = TeamStaticGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_message_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamStaticGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamStaticGroup) ProtoMessage() {}

func (x *TeamStaticGroup) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_message_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamStaticGroup.ProtoReflect.Descriptor instead.
func (*TeamStaticGroup) Descriptor() ([]byte, []int) {
	return file_teamy_message_group_proto_rawDescGZIP(), []int{3}
}

func (x *TeamStaticGroup) GetBase() *GroupBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *TeamStaticGroup) GetTeamIds() []uint64 {
	if x != nil {
		return x.TeamIds
	}
	return nil
}

type FilterGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *GroupBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Filter string     `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *FilterGroup) Reset() {
	*x = FilterGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_message_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterGroup) ProtoMessage() {}

func (x *FilterGroup) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_message_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterGroup.ProtoReflect.Descriptor instead.
func (*FilterGroup) Descriptor() ([]byte, []int) {
	return file_teamy_message_group_proto_rawDescGZIP(), []int{4}
}

func (x *FilterGroup) GetBase() *GroupBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *FilterGroup) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            GroupType        `protobuf:"varint,1,opt,name=type,proto3,enum=GroupType" json:"type,omitempty"`
	MemberType      GroupMemberType  `protobuf:"varint,2,opt,name=memberType,proto3,enum=GroupMemberType" json:"memberType,omitempty"`
	UserStaticGroup *UserStaticGroup `protobuf:"bytes,3,opt,name=userStaticGroup,proto3" json:"userStaticGroup,omitempty"`
	TeamStaticGroup *TeamStaticGroup `protobuf:"bytes,4,opt,name=teamStaticGroup,proto3" json:"teamStaticGroup,omitempty"`
	FilterGroup     *FilterGroup     `protobuf:"bytes,5,opt,name=filterGroup,proto3" json:"filterGroup,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_message_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_message_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_teamy_message_group_proto_rawDescGZIP(), []int{5}
}

func (x *Group) GetType() GroupType {
	if x != nil {
		return x.Type
	}
	return GroupType_STATIC
}

func (x *Group) GetMemberType() GroupMemberType {
	if x != nil {
		return x.MemberType
	}
	return GroupMemberType_USER
}

func (x *Group) GetUserStaticGroup() *UserStaticGroup {
	if x != nil {
		return x.UserStaticGroup
	}
	return nil
}

func (x *Group) GetTeamStaticGroup() *TeamStaticGroup {
	if x != nil {
		return x.TeamStaticGroup
	}
	return nil
}

func (x *Group) GetFilterGroup() *FilterGroup {
	if x != nil {
		return x.FilterGroup
	}
	return nil
}

var File_teamy_message_group_proto protoreflect.FileDescriptor

var file_teamy_message_group_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x03, 0x0a,
	0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x61, 0x78,
	0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x30, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x15, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x15, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x61, 0x70, 0x70, 0x49, 0x64, 0x73,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6e,
	0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x4b,
	0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x4b, 0x0a, 0x0f, 0x54,
	0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x07, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x45, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0x81, 0x02, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x75,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3a, 0x0a, 0x0f, 0x74, 0x65, 0x61, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x0f, 0x74, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x2e, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x2a, 0x23, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x10, 0x01, 0x2a, 0x25, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x55,
	0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x01, 0x42,
	0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65,
	0x61, 0x6d, 0x79, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x70, 0x62, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teamy_message_group_proto_rawDescOnce sync.Once
	file_teamy_message_group_proto_rawDescData = file_teamy_message_group_proto_rawDesc
)

func file_teamy_message_group_proto_rawDescGZIP() []byte {
	file_teamy_message_group_proto_rawDescOnce.Do(func() {
		file_teamy_message_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_teamy_message_group_proto_rawDescData)
	})
	return file_teamy_message_group_proto_rawDescData
}

var file_teamy_message_group_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_teamy_message_group_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_teamy_message_group_proto_goTypes = []interface{}{
	(GroupType)(0),                // 0: GroupType
	(GroupMemberType)(0),          // 1: GroupMemberType
	(*GroupBase)(nil),             // 2: GroupBase
	(*GroupRolloutRelation)(nil),  // 3: GroupRolloutRelation
	(*UserStaticGroup)(nil),       // 4: UserStaticGroup
	(*TeamStaticGroup)(nil),       // 5: TeamStaticGroup
	(*FilterGroup)(nil),           // 6: FilterGroup
	(*Group)(nil),                 // 7: Group
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_teamy_message_group_proto_depIdxs = []int32{
	0,  // 0: GroupBase.type:type_name -> GroupType
	1,  // 1: GroupBase.memberType:type_name -> GroupMemberType
	8,  // 2: GroupBase.createdAt:type_name -> google.protobuf.Timestamp
	8,  // 3: GroupBase.updatedAt:type_name -> google.protobuf.Timestamp
	3,  // 4: GroupBase.groupRolloutRelations:type_name -> GroupRolloutRelation
	2,  // 5: UserStaticGroup.base:type_name -> GroupBase
	2,  // 6: TeamStaticGroup.base:type_name -> GroupBase
	2,  // 7: FilterGroup.base:type_name -> GroupBase
	0,  // 8: Group.type:type_name -> GroupType
	1,  // 9: Group.memberType:type_name -> GroupMemberType
	4,  // 10: Group.userStaticGroup:type_name -> UserStaticGroup
	5,  // 11: Group.teamStaticGroup:type_name -> TeamStaticGroup
	6,  // 12: Group.filterGroup:type_name -> FilterGroup
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_teamy_message_group_proto_init() }
func file_teamy_message_group_proto_init() {
	if File_teamy_message_group_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teamy_message_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_message_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRolloutRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_message_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStaticGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_message_group_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamStaticGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_message_group_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_message_group_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_teamy_message_group_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teamy_message_group_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teamy_message_group_proto_goTypes,
		DependencyIndexes: file_teamy_message_group_proto_depIdxs,
		EnumInfos:         file_teamy_message_group_proto_enumTypes,
		MessageInfos:      file_teamy_message_group_proto_msgTypes,
	}.Build()
	File_teamy_message_group_proto = out.File
	file_teamy_message_group_proto_rawDesc = nil
	file_teamy_message_group_proto_goTypes = nil
	file_teamy_message_group_proto_depIdxs = nil
}
