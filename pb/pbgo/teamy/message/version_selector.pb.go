// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v5.27.1
// source: teamy/message/version_selector.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VersionSelectorType int32

const (
	VersionSelectorType_VERSION_SELECTOR_TYPE_STATIC     VersionSelectorType = 0
	VersionSelectorType_VERSION_SELECTOR_TYPE_EXPERIMENT VersionSelectorType = 1
)

// Enum value maps for VersionSelectorType.
var (
	VersionSelectorType_name = map[int32]string{
		0: "VERSION_SELECTOR_TYPE_STATIC",
		1: "VERSION_SELECTOR_TYPE_EXPERIMENT",
	}
	VersionSelectorType_value = map[string]int32{
		"VERSION_SELECTOR_TYPE_STATIC":     0,
		"VERSION_SELECTOR_TYPE_EXPERIMENT": 1,
	}
)

func (x VersionSelectorType) Enum() *VersionSelectorType {
	p := new(VersionSelectorType)
	*p = x
	return p
}

func (x VersionSelectorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VersionSelectorType) Descriptor() protoreflect.EnumDescriptor {
	return file_teamy_message_version_selector_proto_enumTypes[0].Descriptor()
}

func (VersionSelectorType) Type() protoreflect.EnumType {
	return &file_teamy_message_version_selector_proto_enumTypes[0]
}

func (x VersionSelectorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VersionSelectorType.Descriptor instead.
func (VersionSelectorType) EnumDescriptor() ([]byte, []int) {
	return file_teamy_message_version_selector_proto_rawDescGZIP(), []int{0}
}

type VersionSelectorBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      VersionSelectorType    `protobuf:"varint,2,opt,name=type,proto3,enum=VersionSelectorType" json:"type,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updatedAt,proto3,oneof" json:"updatedAt,omitempty"`
}

func (x *VersionSelectorBase) Reset() {
	*x = VersionSelectorBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_message_version_selector_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionSelectorBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionSelectorBase) ProtoMessage() {}

func (x *VersionSelectorBase) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_message_version_selector_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionSelectorBase.ProtoReflect.Descriptor instead.
func (*VersionSelectorBase) Descriptor() ([]byte, []int) {
	return file_teamy_message_version_selector_proto_rawDescGZIP(), []int{0}
}

func (x *VersionSelectorBase) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VersionSelectorBase) GetType() VersionSelectorType {
	if x != nil {
		return x.Type
	}
	return VersionSelectorType_VERSION_SELECTOR_TYPE_STATIC
}

func (x *VersionSelectorBase) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VersionSelectorBase) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type StaticVersionSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base          *VersionSelectorBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	VersionNumber int32                `protobuf:"varint,2,opt,name=versionNumber,proto3" json:"versionNumber,omitempty"`
}

func (x *StaticVersionSelector) Reset() {
	*x = StaticVersionSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_message_version_selector_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticVersionSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticVersionSelector) ProtoMessage() {}

func (x *StaticVersionSelector) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_message_version_selector_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticVersionSelector.ProtoReflect.Descriptor instead.
func (*StaticVersionSelector) Descriptor() ([]byte, []int) {
	return file_teamy_message_version_selector_proto_rawDescGZIP(), []int{1}
}

func (x *StaticVersionSelector) GetBase() *VersionSelectorBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *StaticVersionSelector) GetVersionNumber() int32 {
	if x != nil {
		return x.VersionNumber
	}
	return 0
}

type ExperimentVersionSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *VersionSelectorBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	VersionNumbers []int32              `protobuf:"varint,2,rep,packed,name=versionNumbers,proto3" json:"versionNumbers,omitempty"`
}

func (x *ExperimentVersionSelector) Reset() {
	*x = ExperimentVersionSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_message_version_selector_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExperimentVersionSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentVersionSelector) ProtoMessage() {}

func (x *ExperimentVersionSelector) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_message_version_selector_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentVersionSelector.ProtoReflect.Descriptor instead.
func (*ExperimentVersionSelector) Descriptor() ([]byte, []int) {
	return file_teamy_message_version_selector_proto_rawDescGZIP(), []int{2}
}

func (x *ExperimentVersionSelector) GetBase() *VersionSelectorBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ExperimentVersionSelector) GetVersionNumbers() []int32 {
	if x != nil {
		return x.VersionNumbers
	}
	return nil
}

type VersionSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Selector:
	//
	//	*VersionSelector_StaticSelector
	//	*VersionSelector_ExperimentSelector
	Selector isVersionSelector_Selector `protobuf_oneof:"selector"`
}

func (x *VersionSelector) Reset() {
	*x = VersionSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_message_version_selector_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionSelector) ProtoMessage() {}

func (x *VersionSelector) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_message_version_selector_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionSelector.ProtoReflect.Descriptor instead.
func (*VersionSelector) Descriptor() ([]byte, []int) {
	return file_teamy_message_version_selector_proto_rawDescGZIP(), []int{3}
}

func (m *VersionSelector) GetSelector() isVersionSelector_Selector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (x *VersionSelector) GetStaticSelector() *StaticVersionSelector {
	if x, ok := x.GetSelector().(*VersionSelector_StaticSelector); ok {
		return x.StaticSelector
	}
	return nil
}

func (x *VersionSelector) GetExperimentSelector() *ExperimentVersionSelector {
	if x, ok := x.GetSelector().(*VersionSelector_ExperimentSelector); ok {
		return x.ExperimentSelector
	}
	return nil
}

type isVersionSelector_Selector interface {
	isVersionSelector_Selector()
}

type VersionSelector_StaticSelector struct {
	StaticSelector *StaticVersionSelector `protobuf:"bytes,1,opt,name=staticSelector,proto3,oneof"`
}

type VersionSelector_ExperimentSelector struct {
	ExperimentSelector *ExperimentVersionSelector `protobuf:"bytes,2,opt,name=experimentSelector,proto3,oneof"`
}

func (*VersionSelector_StaticSelector) isVersionSelector_Selector() {}

func (*VersionSelector_ExperimentSelector) isVersionSelector_Selector() {}

var File_teamy_message_version_selector_proto protoreflect.FileDescriptor

var file_teamy_message_version_selector_proto_rawDesc = []byte{
	0x0a, 0x24, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x01, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x61, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x67, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6d, 0x0a, 0x19, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x0f, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x0e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x4c,
	0x0a, 0x12, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x12, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2a, 0x5d, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x1c, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43,
	0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x10,
	0x00, 0x12, 0x24, 0x0a, 0x20, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x4c,
	0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x45, 0x52,
	0x49, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x61, 0x70, 0x70, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x2f,
	0x70, 0x62, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teamy_message_version_selector_proto_rawDescOnce sync.Once
	file_teamy_message_version_selector_proto_rawDescData = file_teamy_message_version_selector_proto_rawDesc
)

func file_teamy_message_version_selector_proto_rawDescGZIP() []byte {
	file_teamy_message_version_selector_proto_rawDescOnce.Do(func() {
		file_teamy_message_version_selector_proto_rawDescData = protoimpl.X.CompressGZIP(file_teamy_message_version_selector_proto_rawDescData)
	})
	return file_teamy_message_version_selector_proto_rawDescData
}

var file_teamy_message_version_selector_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_teamy_message_version_selector_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_teamy_message_version_selector_proto_goTypes = []interface{}{
	(VersionSelectorType)(0),          // 0: VersionSelectorType
	(*VersionSelectorBase)(nil),       // 1: VersionSelectorBase
	(*StaticVersionSelector)(nil),     // 2: StaticVersionSelector
	(*ExperimentVersionSelector)(nil), // 3: ExperimentVersionSelector
	(*VersionSelector)(nil),           // 4: VersionSelector
	(*timestamppb.Timestamp)(nil),     // 5: google.protobuf.Timestamp
}
var file_teamy_message_version_selector_proto_depIdxs = []int32{
	0, // 0: VersionSelectorBase.type:type_name -> VersionSelectorType
	5, // 1: VersionSelectorBase.createdAt:type_name -> google.protobuf.Timestamp
	5, // 2: VersionSelectorBase.updatedAt:type_name -> google.protobuf.Timestamp
	1, // 3: StaticVersionSelector.base:type_name -> VersionSelectorBase
	1, // 4: ExperimentVersionSelector.base:type_name -> VersionSelectorBase
	2, // 5: VersionSelector.staticSelector:type_name -> StaticVersionSelector
	3, // 6: VersionSelector.experimentSelector:type_name -> ExperimentVersionSelector
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_teamy_message_version_selector_proto_init() }
func file_teamy_message_version_selector_proto_init() {
	if File_teamy_message_version_selector_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teamy_message_version_selector_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionSelectorBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_message_version_selector_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticVersionSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_message_version_selector_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExperimentVersionSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_message_version_selector_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_teamy_message_version_selector_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_teamy_message_version_selector_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*VersionSelector_StaticSelector)(nil),
		(*VersionSelector_ExperimentSelector)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teamy_message_version_selector_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teamy_message_version_selector_proto_goTypes,
		DependencyIndexes: file_teamy_message_version_selector_proto_depIdxs,
		EnumInfos:         file_teamy_message_version_selector_proto_enumTypes,
		MessageInfos:      file_teamy_message_version_selector_proto_msgTypes,
	}.Build()
	File_teamy_message_version_selector_proto = out.File
	file_teamy_message_version_selector_proto_rawDesc = nil
	file_teamy_message_version_selector_proto_goTypes = nil
	file_teamy_message_version_selector_proto_depIdxs = nil
}
