// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: teamy/task_service.proto

package teamy

import (
	message "github.com/teamyapp/protocol/pb/pbgo/teamy/message"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *GetTaskRequest) Reset() {
	*x = GetTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRequest) ProtoMessage() {}

func (x *GetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRequest.ProtoReflect.Descriptor instead.
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetTaskRequest) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type GetTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *message.Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *GetTaskResponse) Reset() {
	*x = GetTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse) ProtoMessage() {}

func (x *GetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse.ProtoReflect.Descriptor instead.
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetTaskResponse) GetTask() *message.Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type GetAwaitForTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwaitingTaskId uint64 `protobuf:"varint,1,opt,name=AwaitingTaskId,proto3" json:"AwaitingTaskId,omitempty"`
}

func (x *GetAwaitForTasksRequest) Reset() {
	*x = GetAwaitForTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAwaitForTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAwaitForTasksRequest) ProtoMessage() {}

func (x *GetAwaitForTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAwaitForTasksRequest.ProtoReflect.Descriptor instead.
func (*GetAwaitForTasksRequest) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetAwaitForTasksRequest) GetAwaitingTaskId() uint64 {
	if x != nil {
		return x.AwaitingTaskId
	}
	return 0
}

type GetAwaitForTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*message.Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *GetAwaitForTasksResponse) Reset() {
	*x = GetAwaitForTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAwaitForTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAwaitForTasksResponse) ProtoMessage() {}

func (x *GetAwaitForTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAwaitForTasksResponse.ProtoReflect.Descriptor instead.
func (*GetAwaitForTasksResponse) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetAwaitForTasksResponse) GetTasks() []*message.Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type ListTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskIds      []uint64            `protobuf:"varint,1,rep,packed,name=taskIds,proto3" json:"taskIds,omitempty"`
	OwnerId      *uint64             `protobuf:"varint,3,opt,name=ownerId,proto3,oneof" json:"ownerId,omitempty"`
	GoalContains *string             `protobuf:"bytes,4,opt,name=goalContains,proto3,oneof" json:"goalContains,omitempty"`
	Status       *message.TaskStatus `protobuf:"varint,5,opt,name=status,proto3,enum=TaskStatus,oneof" json:"status,omitempty"`
	IsScheduled  *uint64             `protobuf:"varint,6,opt,name=isScheduled,proto3,oneof" json:"isScheduled,omitempty"`
	IsPlanned    *uint64             `protobuf:"varint,7,opt,name=isPlanned,proto3,oneof" json:"isPlanned,omitempty"`
}

func (x *ListTasksRequest) Reset() {
	*x = ListTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRequest) ProtoMessage() {}

func (x *ListTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRequest.ProtoReflect.Descriptor instead.
func (*ListTasksRequest) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListTasksRequest) GetTaskIds() []uint64 {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

func (x *ListTasksRequest) GetOwnerId() uint64 {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return 0
}

func (x *ListTasksRequest) GetGoalContains() string {
	if x != nil && x.GoalContains != nil {
		return *x.GoalContains
	}
	return ""
}

func (x *ListTasksRequest) GetStatus() message.TaskStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return message.TaskStatus(0)
}

func (x *ListTasksRequest) GetIsScheduled() uint64 {
	if x != nil && x.IsScheduled != nil {
		return *x.IsScheduled
	}
	return 0
}

func (x *ListTasksRequest) GetIsPlanned() uint64 {
	if x != nil && x.IsPlanned != nil {
		return *x.IsPlanned
	}
	return 0
}

type ListTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*message.Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *ListTasksResponse) Reset() {
	*x = ListTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksResponse) ProtoMessage() {}

func (x *ListTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksResponse.ProtoReflect.Descriptor instead.
func (*ListTasksResponse) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListTasksResponse) GetTasks() []*message.Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type CreateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId      uint64                 `protobuf:"varint,1,opt,name=teamId,proto3" json:"teamId,omitempty"`
	Goal        string                 `protobuf:"bytes,2,opt,name=goal,proto3" json:"goal,omitempty"`
	Context     *string                `protobuf:"bytes,3,opt,name=context,proto3,oneof" json:"context,omitempty"`
	OwnerUserId *uint64                `protobuf:"varint,4,opt,name=ownerUserId,proto3,oneof" json:"ownerUserId,omitempty"`
	DueAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=dueAt,proto3,oneof" json:"dueAt,omitempty"`
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateTaskRequest) GetTeamId() uint64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *CreateTaskRequest) GetGoal() string {
	if x != nil {
		return x.Goal
	}
	return ""
}

func (x *CreateTaskRequest) GetContext() string {
	if x != nil && x.Context != nil {
		return *x.Context
	}
	return ""
}

func (x *CreateTaskRequest) GetOwnerUserId() uint64 {
	if x != nil && x.OwnerUserId != nil {
		return *x.OwnerUserId
	}
	return 0
}

func (x *CreateTaskRequest) GetDueAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DueAt
	}
	return nil
}

type CreateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *message.Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *CreateTaskResponse) Reset() {
	*x = CreateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResponse) ProtoMessage() {}

func (x *CreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateTaskResponse) GetTask() *message.Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type UpdateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId       uint64                 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Goal         *string                `protobuf:"bytes,2,opt,name=goal,proto3,oneof" json:"goal,omitempty"`
	Context      *string                `protobuf:"bytes,3,opt,name=context,proto3,oneof" json:"context,omitempty"`
	OwnerUserId  *uint64                `protobuf:"varint,4,opt,name=ownerUserId,proto3,oneof" json:"ownerUserId,omitempty"`
	OwningTeamId *uint64                `protobuf:"varint,5,opt,name=owningTeamId,proto3,oneof" json:"owningTeamId,omitempty"`
	Effort       *durationpb.Duration   `protobuf:"bytes,6,opt,name=effort,proto3,oneof" json:"effort,omitempty"`
	DueAt        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=dueAt,proto3,oneof" json:"dueAt,omitempty"`
	Priority     *message.Priority      `protobuf:"varint,8,opt,name=priority,proto3,enum=Priority,oneof" json:"priority,omitempty"`
}

func (x *UpdateTaskRequest) Reset() {
	*x = UpdateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskRequest) ProtoMessage() {}

func (x *UpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTaskRequest) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *UpdateTaskRequest) GetGoal() string {
	if x != nil && x.Goal != nil {
		return *x.Goal
	}
	return ""
}

func (x *UpdateTaskRequest) GetContext() string {
	if x != nil && x.Context != nil {
		return *x.Context
	}
	return ""
}

func (x *UpdateTaskRequest) GetOwnerUserId() uint64 {
	if x != nil && x.OwnerUserId != nil {
		return *x.OwnerUserId
	}
	return 0
}

func (x *UpdateTaskRequest) GetOwningTeamId() uint64 {
	if x != nil && x.OwningTeamId != nil {
		return *x.OwningTeamId
	}
	return 0
}

func (x *UpdateTaskRequest) GetEffort() *durationpb.Duration {
	if x != nil {
		return x.Effort
	}
	return nil
}

func (x *UpdateTaskRequest) GetDueAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DueAt
	}
	return nil
}

func (x *UpdateTaskRequest) GetPriority() message.Priority {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return message.Priority(0)
}

type UpdateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *message.Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *UpdateTaskResponse) Reset() {
	*x = UpdateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskResponse) ProtoMessage() {}

func (x *UpdateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskResponse) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTaskResponse) GetTask() *message.Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type DeleteTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *DeleteTaskRequest) Reset() {
	*x = DeleteTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRequest) ProtoMessage() {}

func (x *DeleteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteTaskRequest) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type MoveTaskToUpcomingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *MoveTaskToUpcomingRequest) Reset() {
	*x = MoveTaskToUpcomingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveTaskToUpcomingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveTaskToUpcomingRequest) ProtoMessage() {}

func (x *MoveTaskToUpcomingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveTaskToUpcomingRequest.ProtoReflect.Descriptor instead.
func (*MoveTaskToUpcomingRequest) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{11}
}

func (x *MoveTaskToUpcomingRequest) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type MoveTaskToInProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *MoveTaskToInProgressRequest) Reset() {
	*x = MoveTaskToInProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveTaskToInProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveTaskToInProgressRequest) ProtoMessage() {}

func (x *MoveTaskToInProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveTaskToInProgressRequest.ProtoReflect.Descriptor instead.
func (*MoveTaskToInProgressRequest) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{12}
}

func (x *MoveTaskToInProgressRequest) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type MoveTaskToDeliveredRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *MoveTaskToDeliveredRequest) Reset() {
	*x = MoveTaskToDeliveredRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveTaskToDeliveredRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveTaskToDeliveredRequest) ProtoMessage() {}

func (x *MoveTaskToDeliveredRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveTaskToDeliveredRequest.ProtoReflect.Descriptor instead.
func (*MoveTaskToDeliveredRequest) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{13}
}

func (x *MoveTaskToDeliveredRequest) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type MoveTaskToBlockedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *MoveTaskToBlockedRequest) Reset() {
	*x = MoveTaskToBlockedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveTaskToBlockedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveTaskToBlockedRequest) ProtoMessage() {}

func (x *MoveTaskToBlockedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveTaskToBlockedRequest.ProtoReflect.Descriptor instead.
func (*MoveTaskToBlockedRequest) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{14}
}

func (x *MoveTaskToBlockedRequest) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *MoveTaskToBlockedRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type AddAwaitForTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwaitingTaskId uint64 `protobuf:"varint,1,opt,name=awaitingTaskId,proto3" json:"awaitingTaskId,omitempty"`
	AwaitForTaskId uint64 `protobuf:"varint,2,opt,name=awaitForTaskId,proto3" json:"awaitForTaskId,omitempty"`
}

func (x *AddAwaitForTaskRequest) Reset() {
	*x = AddAwaitForTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAwaitForTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAwaitForTaskRequest) ProtoMessage() {}

func (x *AddAwaitForTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAwaitForTaskRequest.ProtoReflect.Descriptor instead.
func (*AddAwaitForTaskRequest) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{15}
}

func (x *AddAwaitForTaskRequest) GetAwaitingTaskId() uint64 {
	if x != nil {
		return x.AwaitingTaskId
	}
	return 0
}

func (x *AddAwaitForTaskRequest) GetAwaitForTaskId() uint64 {
	if x != nil {
		return x.AwaitForTaskId
	}
	return 0
}

type RemoveAwaitForTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwaitingTaskId uint64 `protobuf:"varint,1,opt,name=awaitingTaskId,proto3" json:"awaitingTaskId,omitempty"`
	AwaitForTaskId uint64 `protobuf:"varint,2,opt,name=awaitForTaskId,proto3" json:"awaitForTaskId,omitempty"`
}

func (x *RemoveAwaitForTaskRequest) Reset() {
	*x = RemoveAwaitForTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAwaitForTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAwaitForTaskRequest) ProtoMessage() {}

func (x *RemoveAwaitForTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAwaitForTaskRequest.ProtoReflect.Descriptor instead.
func (*RemoveAwaitForTaskRequest) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{16}
}

func (x *RemoveAwaitForTaskRequest) GetAwaitingTaskId() uint64 {
	if x != nil {
		return x.AwaitingTaskId
	}
	return 0
}

func (x *RemoveAwaitForTaskRequest) GetAwaitForTaskId() uint64 {
	if x != nil {
		return x.AwaitForTaskId
	}
	return 0
}

type StartDraggingTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   uint64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	ClientId uint64 `protobuf:"varint,2,opt,name=clientId,proto3" json:"clientId,omitempty"`
}

func (x *StartDraggingTaskRequest) Reset() {
	*x = StartDraggingTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartDraggingTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartDraggingTaskRequest) ProtoMessage() {}

func (x *StartDraggingTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartDraggingTaskRequest.ProtoReflect.Descriptor instead.
func (*StartDraggingTaskRequest) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{17}
}

func (x *StartDraggingTaskRequest) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StartDraggingTaskRequest) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

type StopDraggingTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   uint64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	ClientId uint64 `protobuf:"varint,2,opt,name=clientId,proto3" json:"clientId,omitempty"`
}

func (x *StopDraggingTaskRequest) Reset() {
	*x = StopDraggingTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_task_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopDraggingTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopDraggingTaskRequest) ProtoMessage() {}

func (x *StopDraggingTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_task_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopDraggingTaskRequest.ProtoReflect.Descriptor instead.
func (*StopDraggingTaskRequest) Descriptor() ([]byte, []int) {
	return file_teamy_task_service_proto_rawDescGZIP(), []int{18}
}

func (x *StopDraggingTaskRequest) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StopDraggingTaskRequest) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

var File_teamy_task_service_proto protoreflect.FileDescriptor

var file_teamy_task_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x41, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41,
	0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x41, 0x77, 0x61,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x41, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x22, 0xae, 0x02, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x67, 0x6f, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x67, 0x6f, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x02, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x69, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x48, 0x03, 0x52, 0x0b, 0x69, 0x73,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09,
	0x69, 0x73, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x04, 0x52, 0x09, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x67, 0x6f, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69, 0x73, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x50, 0x6c,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x22, 0x30, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0xe2, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52,
	0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x35, 0x0a, 0x05, 0x64, 0x75, 0x65, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x05, 0x64, 0x75,
	0x65, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x64, 0x75, 0x65, 0x41, 0x74, 0x22, 0x2f, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0xa6, 0x03,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x67,
	0x6f, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x67, 0x6f, 0x61,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x6f, 0x77,
	0x6e, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x03, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x04,
	0x52, 0x06, 0x65, 0x66, 0x66, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x05, 0x64,
	0x75, 0x65, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x05, 0x52, 0x05, 0x64, 0x75, 0x65, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x48,
	0x06, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x77, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x65, 0x66, 0x66, 0x6f, 0x72, 0x74, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x64, 0x75, 0x65, 0x41, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x2f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04,
	0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x2b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x19, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x6f, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x1b, 0x4d, 0x6f, 0x76,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x22, 0x34, 0x0a, 0x1a, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x18, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x41, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f,
	0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x61, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x77,
	0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x19,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x77, 0x61,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x61, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x77, 0x61, 0x69, 0x74,
	0x46, 0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x18, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x72, 0x61, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x17, 0x53, 0x74, 0x6f,
	0x70, 0x44, 0x72, 0x61, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32, 0xa8, 0x07, 0x0a, 0x0b, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x77, 0x61,
	0x69, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x18, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x77, 0x61, 0x69, 0x74, 0x46,
	0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x11, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x12, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x12, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x12, 0x4d,
	0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e,
	0x67, 0x12, 0x1a, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x55, 0x70,
	0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x14, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x6f, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x2e,
	0x4d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x13, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54,
	0x6f, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x1b, 0x2e, 0x4d, 0x6f, 0x76,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x46, 0x0a, 0x11, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x12, 0x19, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54,
	0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41, 0x77,
	0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x2e, 0x41, 0x64, 0x64,
	0x41, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x12, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x1a, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x77, 0x61, 0x69, 0x74, 0x46,
	0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x72,
	0x61, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x19, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x72, 0x61, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a,
	0x10, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x72, 0x61, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x18, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x72, 0x61, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x2f, 0x74, 0x65, 0x61, 0x6d,
	0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teamy_task_service_proto_rawDescOnce sync.Once
	file_teamy_task_service_proto_rawDescData = file_teamy_task_service_proto_rawDesc
)

func file_teamy_task_service_proto_rawDescGZIP() []byte {
	file_teamy_task_service_proto_rawDescOnce.Do(func() {
		file_teamy_task_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_teamy_task_service_proto_rawDescData)
	})
	return file_teamy_task_service_proto_rawDescData
}

var file_teamy_task_service_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_teamy_task_service_proto_goTypes = []any{
	(*GetTaskRequest)(nil),              // 0: GetTaskRequest
	(*GetTaskResponse)(nil),             // 1: GetTaskResponse
	(*GetAwaitForTasksRequest)(nil),     // 2: GetAwaitForTasksRequest
	(*GetAwaitForTasksResponse)(nil),    // 3: GetAwaitForTasksResponse
	(*ListTasksRequest)(nil),            // 4: ListTasksRequest
	(*ListTasksResponse)(nil),           // 5: ListTasksResponse
	(*CreateTaskRequest)(nil),           // 6: CreateTaskRequest
	(*CreateTaskResponse)(nil),          // 7: CreateTaskResponse
	(*UpdateTaskRequest)(nil),           // 8: UpdateTaskRequest
	(*UpdateTaskResponse)(nil),          // 9: UpdateTaskResponse
	(*DeleteTaskRequest)(nil),           // 10: DeleteTaskRequest
	(*MoveTaskToUpcomingRequest)(nil),   // 11: MoveTaskToUpcomingRequest
	(*MoveTaskToInProgressRequest)(nil), // 12: MoveTaskToInProgressRequest
	(*MoveTaskToDeliveredRequest)(nil),  // 13: MoveTaskToDeliveredRequest
	(*MoveTaskToBlockedRequest)(nil),    // 14: MoveTaskToBlockedRequest
	(*AddAwaitForTaskRequest)(nil),      // 15: AddAwaitForTaskRequest
	(*RemoveAwaitForTaskRequest)(nil),   // 16: RemoveAwaitForTaskRequest
	(*StartDraggingTaskRequest)(nil),    // 17: StartDraggingTaskRequest
	(*StopDraggingTaskRequest)(nil),     // 18: StopDraggingTaskRequest
	(*message.Task)(nil),                // 19: Task
	(message.TaskStatus)(0),             // 20: TaskStatus
	(*timestamppb.Timestamp)(nil),       // 21: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),         // 22: google.protobuf.Duration
	(message.Priority)(0),               // 23: Priority
	(*emptypb.Empty)(nil),               // 24: google.protobuf.Empty
}
var file_teamy_task_service_proto_depIdxs = []int32{
	19, // 0: GetTaskResponse.task:type_name -> Task
	19, // 1: GetAwaitForTasksResponse.tasks:type_name -> Task
	20, // 2: ListTasksRequest.status:type_name -> TaskStatus
	19, // 3: ListTasksResponse.tasks:type_name -> Task
	21, // 4: CreateTaskRequest.dueAt:type_name -> google.protobuf.Timestamp
	19, // 5: CreateTaskResponse.task:type_name -> Task
	22, // 6: UpdateTaskRequest.effort:type_name -> google.protobuf.Duration
	21, // 7: UpdateTaskRequest.dueAt:type_name -> google.protobuf.Timestamp
	23, // 8: UpdateTaskRequest.priority:type_name -> Priority
	19, // 9: UpdateTaskResponse.task:type_name -> Task
	0,  // 10: TaskService.GetTask:input_type -> GetTaskRequest
	2,  // 11: TaskService.GetAwaitForTasks:input_type -> GetAwaitForTasksRequest
	4,  // 12: TaskService.ListTasks:input_type -> ListTasksRequest
	6,  // 13: TaskService.CreateTask:input_type -> CreateTaskRequest
	8,  // 14: TaskService.UpdateTask:input_type -> UpdateTaskRequest
	10, // 15: TaskService.DeleteTask:input_type -> DeleteTaskRequest
	11, // 16: TaskService.MoveTaskToUpcoming:input_type -> MoveTaskToUpcomingRequest
	12, // 17: TaskService.MoveTaskToInProgress:input_type -> MoveTaskToInProgressRequest
	13, // 18: TaskService.MoveTaskToDelivered:input_type -> MoveTaskToDeliveredRequest
	14, // 19: TaskService.MoveTaskToBlocked:input_type -> MoveTaskToBlockedRequest
	15, // 20: TaskService.AddAwaitForTask:input_type -> AddAwaitForTaskRequest
	16, // 21: TaskService.RemoveAwaitForTask:input_type -> RemoveAwaitForTaskRequest
	17, // 22: TaskService.StartDraggingTask:input_type -> StartDraggingTaskRequest
	18, // 23: TaskService.StopDraggingTask:input_type -> StopDraggingTaskRequest
	1,  // 24: TaskService.GetTask:output_type -> GetTaskResponse
	3,  // 25: TaskService.GetAwaitForTasks:output_type -> GetAwaitForTasksResponse
	5,  // 26: TaskService.ListTasks:output_type -> ListTasksResponse
	7,  // 27: TaskService.CreateTask:output_type -> CreateTaskResponse
	9,  // 28: TaskService.UpdateTask:output_type -> UpdateTaskResponse
	24, // 29: TaskService.DeleteTask:output_type -> google.protobuf.Empty
	24, // 30: TaskService.MoveTaskToUpcoming:output_type -> google.protobuf.Empty
	24, // 31: TaskService.MoveTaskToInProgress:output_type -> google.protobuf.Empty
	24, // 32: TaskService.MoveTaskToDelivered:output_type -> google.protobuf.Empty
	24, // 33: TaskService.MoveTaskToBlocked:output_type -> google.protobuf.Empty
	24, // 34: TaskService.AddAwaitForTask:output_type -> google.protobuf.Empty
	24, // 35: TaskService.RemoveAwaitForTask:output_type -> google.protobuf.Empty
	24, // 36: TaskService.StartDraggingTask:output_type -> google.protobuf.Empty
	24, // 37: TaskService.StopDraggingTask:output_type -> google.protobuf.Empty
	24, // [24:38] is the sub-list for method output_type
	10, // [10:24] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_teamy_task_service_proto_init() }
func file_teamy_task_service_proto_init() {
	if File_teamy_task_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teamy_task_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetAwaitForTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetAwaitForTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*MoveTaskToUpcomingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*MoveTaskToInProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*MoveTaskToDeliveredRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*MoveTaskToBlockedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*AddAwaitForTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveAwaitForTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*StartDraggingTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_task_service_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*StopDraggingTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_teamy_task_service_proto_msgTypes[4].OneofWrappers = []any{}
	file_teamy_task_service_proto_msgTypes[6].OneofWrappers = []any{}
	file_teamy_task_service_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teamy_task_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teamy_task_service_proto_goTypes,
		DependencyIndexes: file_teamy_task_service_proto_depIdxs,
		MessageInfos:      file_teamy_task_service_proto_msgTypes,
	}.Build()
	File_teamy_task_service_proto = out.File
	file_teamy_task_service_proto_rawDesc = nil
	file_teamy_task_service_proto_goTypes = nil
	file_teamy_task_service_proto_depIdxs = nil
}
