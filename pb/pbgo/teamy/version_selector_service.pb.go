// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v5.27.1
// source: teamy/version_selector_service.proto

package pbteamy

import (
	message "github.com/teamyapp/protocol/pb/pbgo/pbteamy/message"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetVersionSelectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionSelectorId uint64 `protobuf:"varint,1,opt,name=versionSelectorId,proto3" json:"versionSelectorId,omitempty"`
}

func (x *GetVersionSelectorRequest) Reset() {
	*x = GetVersionSelectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_version_selector_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionSelectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionSelectorRequest) ProtoMessage() {}

func (x *GetVersionSelectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_version_selector_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionSelectorRequest.ProtoReflect.Descriptor instead.
func (*GetVersionSelectorRequest) Descriptor() ([]byte, []int) {
	return file_teamy_version_selector_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetVersionSelectorRequest) GetVersionSelectorId() uint64 {
	if x != nil {
		return x.VersionSelectorId
	}
	return 0
}

type GetVersionSelectorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionSelector *message.VersionSelector `protobuf:"bytes,1,opt,name=versionSelector,proto3" json:"versionSelector,omitempty"`
}

func (x *GetVersionSelectorResponse) Reset() {
	*x = GetVersionSelectorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_version_selector_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionSelectorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionSelectorResponse) ProtoMessage() {}

func (x *GetVersionSelectorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_version_selector_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionSelectorResponse.ProtoReflect.Descriptor instead.
func (*GetVersionSelectorResponse) Descriptor() ([]byte, []int) {
	return file_teamy_version_selector_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetVersionSelectorResponse) GetVersionSelector() *message.VersionSelector {
	if x != nil {
		return x.VersionSelector
	}
	return nil
}

type ListVersionSelectorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionSelectorIds []uint64 `protobuf:"varint,1,rep,packed,name=versionSelectorIds,proto3" json:"versionSelectorIds,omitempty"`
}

func (x *ListVersionSelectorsRequest) Reset() {
	*x = ListVersionSelectorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_version_selector_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVersionSelectorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVersionSelectorsRequest) ProtoMessage() {}

func (x *ListVersionSelectorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_version_selector_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVersionSelectorsRequest.ProtoReflect.Descriptor instead.
func (*ListVersionSelectorsRequest) Descriptor() ([]byte, []int) {
	return file_teamy_version_selector_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListVersionSelectorsRequest) GetVersionSelectorIds() []uint64 {
	if x != nil {
		return x.VersionSelectorIds
	}
	return nil
}

type ListVersionSelectorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionSelectors []*message.VersionSelector `protobuf:"bytes,1,rep,name=versionSelectors,proto3" json:"versionSelectors,omitempty"`
}

func (x *ListVersionSelectorsResponse) Reset() {
	*x = ListVersionSelectorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_version_selector_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVersionSelectorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVersionSelectorsResponse) ProtoMessage() {}

func (x *ListVersionSelectorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_version_selector_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVersionSelectorsResponse.ProtoReflect.Descriptor instead.
func (*ListVersionSelectorsResponse) Descriptor() ([]byte, []int) {
	return file_teamy_version_selector_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListVersionSelectorsResponse) GetVersionSelectors() []*message.VersionSelector {
	if x != nil {
		return x.VersionSelectors
	}
	return nil
}

type CreateStaticVersionSelectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId         uint64 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	VersionNumber uint32 `protobuf:"varint,2,opt,name=versionNumber,proto3" json:"versionNumber,omitempty"`
}

func (x *CreateStaticVersionSelectorRequest) Reset() {
	*x = CreateStaticVersionSelectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_version_selector_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStaticVersionSelectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStaticVersionSelectorRequest) ProtoMessage() {}

func (x *CreateStaticVersionSelectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_version_selector_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStaticVersionSelectorRequest.ProtoReflect.Descriptor instead.
func (*CreateStaticVersionSelectorRequest) Descriptor() ([]byte, []int) {
	return file_teamy_version_selector_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateStaticVersionSelectorRequest) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CreateStaticVersionSelectorRequest) GetVersionNumber() uint32 {
	if x != nil {
		return x.VersionNumber
	}
	return 0
}

type CreateStaticVersionSelectorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaticVersionSelector *message.StaticVersionSelector `protobuf:"bytes,1,opt,name=staticVersionSelector,proto3" json:"staticVersionSelector,omitempty"`
}

func (x *CreateStaticVersionSelectorResponse) Reset() {
	*x = CreateStaticVersionSelectorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_version_selector_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStaticVersionSelectorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStaticVersionSelectorResponse) ProtoMessage() {}

func (x *CreateStaticVersionSelectorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_version_selector_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStaticVersionSelectorResponse.ProtoReflect.Descriptor instead.
func (*CreateStaticVersionSelectorResponse) Descriptor() ([]byte, []int) {
	return file_teamy_version_selector_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateStaticVersionSelectorResponse) GetStaticVersionSelector() *message.StaticVersionSelector {
	if x != nil {
		return x.StaticVersionSelector
	}
	return nil
}

type CreateExperimentVersionSelectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId          uint64   `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	VersionNumbers []uint64 `protobuf:"varint,2,rep,packed,name=versionNumbers,proto3" json:"versionNumbers,omitempty"`
}

func (x *CreateExperimentVersionSelectorRequest) Reset() {
	*x = CreateExperimentVersionSelectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_version_selector_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExperimentVersionSelectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExperimentVersionSelectorRequest) ProtoMessage() {}

func (x *CreateExperimentVersionSelectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_version_selector_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExperimentVersionSelectorRequest.ProtoReflect.Descriptor instead.
func (*CreateExperimentVersionSelectorRequest) Descriptor() ([]byte, []int) {
	return file_teamy_version_selector_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateExperimentVersionSelectorRequest) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CreateExperimentVersionSelectorRequest) GetVersionNumbers() []uint64 {
	if x != nil {
		return x.VersionNumbers
	}
	return nil
}

type CreateExperimentVersionSelectorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExperimentVersionSelector *message.ExperimentVersionSelector `protobuf:"bytes,1,opt,name=experimentVersionSelector,proto3" json:"experimentVersionSelector,omitempty"`
}

func (x *CreateExperimentVersionSelectorResponse) Reset() {
	*x = CreateExperimentVersionSelectorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_version_selector_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExperimentVersionSelectorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExperimentVersionSelectorResponse) ProtoMessage() {}

func (x *CreateExperimentVersionSelectorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_version_selector_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExperimentVersionSelectorResponse.ProtoReflect.Descriptor instead.
func (*CreateExperimentVersionSelectorResponse) Descriptor() ([]byte, []int) {
	return file_teamy_version_selector_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateExperimentVersionSelectorResponse) GetExperimentVersionSelector() *message.ExperimentVersionSelector {
	if x != nil {
		return x.ExperimentVersionSelector
	}
	return nil
}

type UpdateVersionSelectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId             uint64                      `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	VersionSelectorId uint64                      `protobuf:"varint,2,opt,name=versionSelectorId,proto3" json:"versionSelectorId,omitempty"`
	Type              message.VersionSelectorType `protobuf:"varint,3,opt,name=type,proto3,enum=VersionSelectorType" json:"type,omitempty"`
	VersionNumber     *uint32                     `protobuf:"varint,4,opt,name=versionNumber,proto3,oneof" json:"versionNumber,omitempty"`
	VersionNumbers    []uint32                    `protobuf:"varint,5,rep,packed,name=versionNumbers,proto3" json:"versionNumbers,omitempty"`
}

func (x *UpdateVersionSelectorRequest) Reset() {
	*x = UpdateVersionSelectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_version_selector_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVersionSelectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVersionSelectorRequest) ProtoMessage() {}

func (x *UpdateVersionSelectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_version_selector_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVersionSelectorRequest.ProtoReflect.Descriptor instead.
func (*UpdateVersionSelectorRequest) Descriptor() ([]byte, []int) {
	return file_teamy_version_selector_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateVersionSelectorRequest) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *UpdateVersionSelectorRequest) GetVersionSelectorId() uint64 {
	if x != nil {
		return x.VersionSelectorId
	}
	return 0
}

func (x *UpdateVersionSelectorRequest) GetType() message.VersionSelectorType {
	if x != nil {
		return x.Type
	}
	return message.VersionSelectorType(0)
}

func (x *UpdateVersionSelectorRequest) GetVersionNumber() uint32 {
	if x != nil && x.VersionNumber != nil {
		return *x.VersionNumber
	}
	return 0
}

func (x *UpdateVersionSelectorRequest) GetVersionNumbers() []uint32 {
	if x != nil {
		return x.VersionNumbers
	}
	return nil
}

type UpdateVersionSelectorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionSelector *message.VersionSelector `protobuf:"bytes,1,opt,name=versionSelector,proto3" json:"versionSelector,omitempty"`
}

func (x *UpdateVersionSelectorResponse) Reset() {
	*x = UpdateVersionSelectorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_version_selector_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVersionSelectorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVersionSelectorResponse) ProtoMessage() {}

func (x *UpdateVersionSelectorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_version_selector_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVersionSelectorResponse.ProtoReflect.Descriptor instead.
func (*UpdateVersionSelectorResponse) Descriptor() ([]byte, []int) {
	return file_teamy_version_selector_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateVersionSelectorResponse) GetVersionSelector() *message.VersionSelector {
	if x != nil {
		return x.VersionSelector
	}
	return nil
}

type DeleteVersionSelectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionSelectorId uint64 `protobuf:"varint,1,opt,name=versionSelectorId,proto3" json:"versionSelectorId,omitempty"`
}

func (x *DeleteVersionSelectorRequest) Reset() {
	*x = DeleteVersionSelectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamy_version_selector_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVersionSelectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVersionSelectorRequest) ProtoMessage() {}

func (x *DeleteVersionSelectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamy_version_selector_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVersionSelectorRequest.ProtoReflect.Descriptor instead.
func (*DeleteVersionSelectorRequest) Descriptor() ([]byte, []int) {
	return file_teamy_version_selector_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteVersionSelectorRequest) GetVersionSelectorId() uint64 {
	if x != nil {
		return x.VersionSelectorId
	}
	return 0
}

var File_teamy_version_selector_service_proto protoreflect.FileDescriptor

var file_teamy_version_selector_service_proto_rawDesc = []byte{
	0x0a, 0x24, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x11, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x4d,
	0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x12, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x73, 0x22, 0x5c, 0x0a,
	0x1c, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x10, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x60, 0x0a, 0x22, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x73, 0x0a,
	0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x15, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x15, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x22, 0x66, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x27, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x19, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x19, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x22, 0xf1, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x11, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x29, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x5b, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x0f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x22, 0x4c, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x32,
	0xc4, 0x04, 0x0a, 0x16, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x12, 0x1c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x27, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x1d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x2f, 0x70,
	0x62, 0x74, 0x65, 0x61, 0x6d, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teamy_version_selector_service_proto_rawDescOnce sync.Once
	file_teamy_version_selector_service_proto_rawDescData = file_teamy_version_selector_service_proto_rawDesc
)

func file_teamy_version_selector_service_proto_rawDescGZIP() []byte {
	file_teamy_version_selector_service_proto_rawDescOnce.Do(func() {
		file_teamy_version_selector_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_teamy_version_selector_service_proto_rawDescData)
	})
	return file_teamy_version_selector_service_proto_rawDescData
}

var file_teamy_version_selector_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_teamy_version_selector_service_proto_goTypes = []interface{}{
	(*GetVersionSelectorRequest)(nil),               // 0: GetVersionSelectorRequest
	(*GetVersionSelectorResponse)(nil),              // 1: GetVersionSelectorResponse
	(*ListVersionSelectorsRequest)(nil),             // 2: ListVersionSelectorsRequest
	(*ListVersionSelectorsResponse)(nil),            // 3: ListVersionSelectorsResponse
	(*CreateStaticVersionSelectorRequest)(nil),      // 4: CreateStaticVersionSelectorRequest
	(*CreateStaticVersionSelectorResponse)(nil),     // 5: CreateStaticVersionSelectorResponse
	(*CreateExperimentVersionSelectorRequest)(nil),  // 6: CreateExperimentVersionSelectorRequest
	(*CreateExperimentVersionSelectorResponse)(nil), // 7: CreateExperimentVersionSelectorResponse
	(*UpdateVersionSelectorRequest)(nil),            // 8: UpdateVersionSelectorRequest
	(*UpdateVersionSelectorResponse)(nil),           // 9: UpdateVersionSelectorResponse
	(*DeleteVersionSelectorRequest)(nil),            // 10: DeleteVersionSelectorRequest
	(*message.VersionSelector)(nil),                 // 11: VersionSelector
	(*message.StaticVersionSelector)(nil),           // 12: StaticVersionSelector
	(*message.ExperimentVersionSelector)(nil),       // 13: ExperimentVersionSelector
	(message.VersionSelectorType)(0),                // 14: VersionSelectorType
	(*emptypb.Empty)(nil),                           // 15: google.protobuf.Empty
}
var file_teamy_version_selector_service_proto_depIdxs = []int32{
	11, // 0: GetVersionSelectorResponse.versionSelector:type_name -> VersionSelector
	11, // 1: ListVersionSelectorsResponse.versionSelectors:type_name -> VersionSelector
	12, // 2: CreateStaticVersionSelectorResponse.staticVersionSelector:type_name -> StaticVersionSelector
	13, // 3: CreateExperimentVersionSelectorResponse.experimentVersionSelector:type_name -> ExperimentVersionSelector
	14, // 4: UpdateVersionSelectorRequest.type:type_name -> VersionSelectorType
	11, // 5: UpdateVersionSelectorResponse.versionSelector:type_name -> VersionSelector
	0,  // 6: VersionSelectorService.GetVersionSelector:input_type -> GetVersionSelectorRequest
	2,  // 7: VersionSelectorService.ListVersionSelectors:input_type -> ListVersionSelectorsRequest
	4,  // 8: VersionSelectorService.CreateStaticVersionSelector:input_type -> CreateStaticVersionSelectorRequest
	6,  // 9: VersionSelectorService.CreateExperimentVersionSelector:input_type -> CreateExperimentVersionSelectorRequest
	8,  // 10: VersionSelectorService.UpdateVersionSelector:input_type -> UpdateVersionSelectorRequest
	10, // 11: VersionSelectorService.DeleteVersionSelector:input_type -> DeleteVersionSelectorRequest
	1,  // 12: VersionSelectorService.GetVersionSelector:output_type -> GetVersionSelectorResponse
	3,  // 13: VersionSelectorService.ListVersionSelectors:output_type -> ListVersionSelectorsResponse
	5,  // 14: VersionSelectorService.CreateStaticVersionSelector:output_type -> CreateStaticVersionSelectorResponse
	7,  // 15: VersionSelectorService.CreateExperimentVersionSelector:output_type -> CreateExperimentVersionSelectorResponse
	9,  // 16: VersionSelectorService.UpdateVersionSelector:output_type -> UpdateVersionSelectorResponse
	15, // 17: VersionSelectorService.DeleteVersionSelector:output_type -> google.protobuf.Empty
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_teamy_version_selector_service_proto_init() }
func file_teamy_version_selector_service_proto_init() {
	if File_teamy_version_selector_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teamy_version_selector_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionSelectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_version_selector_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionSelectorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_version_selector_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVersionSelectorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_version_selector_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVersionSelectorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_version_selector_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStaticVersionSelectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_version_selector_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStaticVersionSelectorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_version_selector_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExperimentVersionSelectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_version_selector_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExperimentVersionSelectorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_version_selector_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVersionSelectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_version_selector_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVersionSelectorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamy_version_selector_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVersionSelectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_teamy_version_selector_service_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teamy_version_selector_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teamy_version_selector_service_proto_goTypes,
		DependencyIndexes: file_teamy_version_selector_service_proto_depIdxs,
		MessageInfos:      file_teamy_version_selector_service_proto_msgTypes,
	}.Build()
	File_teamy_version_selector_service_proto = out.File
	file_teamy_version_selector_service_proto_rawDesc = nil
	file_teamy_version_selector_service_proto_goTypes = nil
	file_teamy_version_selector_service_proto_depIdxs = nil
}
