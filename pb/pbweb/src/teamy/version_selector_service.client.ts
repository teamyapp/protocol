// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "teamy/version_selector_service.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { VersionSelectorService } from "./version_selector_service";
import type { Empty } from "../google/protobuf/empty";
import type { DeleteVersionSelectorRequest } from "./version_selector_service";
import type { UpdateVersionSelectorResponse } from "./version_selector_service";
import type { UpdateVersionSelectorRequest } from "./version_selector_service";
import type { CreateExperimentVersionSelectorResponse } from "./version_selector_service";
import type { CreateExperimentVersionSelectorRequest } from "./version_selector_service";
import type { CreateStaticVersionSelectorResponse } from "./version_selector_service";
import type { CreateStaticVersionSelectorRequest } from "./version_selector_service";
import type { ListVersionSelectorsResponse } from "./version_selector_service";
import type { ListVersionSelectorsRequest } from "./version_selector_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetVersionSelectorResponse } from "./version_selector_service";
import type { GetVersionSelectorRequest } from "./version_selector_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service VersionSelectorService
 */
export interface IVersionSelectorServiceClient {
    /**
     * @generated from protobuf rpc: GetVersionSelector(GetVersionSelectorRequest) returns (GetVersionSelectorResponse);
     */
    getVersionSelector(input: GetVersionSelectorRequest, options?: RpcOptions): UnaryCall<GetVersionSelectorRequest, GetVersionSelectorResponse>;
    /**
     * @generated from protobuf rpc: ListVersionSelectors(ListVersionSelectorsRequest) returns (ListVersionSelectorsResponse);
     */
    listVersionSelectors(input: ListVersionSelectorsRequest, options?: RpcOptions): UnaryCall<ListVersionSelectorsRequest, ListVersionSelectorsResponse>;
    /**
     * @generated from protobuf rpc: CreateStaticVersionSelector(CreateStaticVersionSelectorRequest) returns (CreateStaticVersionSelectorResponse);
     */
    createStaticVersionSelector(input: CreateStaticVersionSelectorRequest, options?: RpcOptions): UnaryCall<CreateStaticVersionSelectorRequest, CreateStaticVersionSelectorResponse>;
    /**
     * @generated from protobuf rpc: CreateExperimentVersionSelector(CreateExperimentVersionSelectorRequest) returns (CreateExperimentVersionSelectorResponse);
     */
    createExperimentVersionSelector(input: CreateExperimentVersionSelectorRequest, options?: RpcOptions): UnaryCall<CreateExperimentVersionSelectorRequest, CreateExperimentVersionSelectorResponse>;
    /**
     * @generated from protobuf rpc: UpdateVersionSelector(UpdateVersionSelectorRequest) returns (UpdateVersionSelectorResponse);
     */
    updateVersionSelector(input: UpdateVersionSelectorRequest, options?: RpcOptions): UnaryCall<UpdateVersionSelectorRequest, UpdateVersionSelectorResponse>;
    /**
     * @generated from protobuf rpc: DeleteVersionSelector(DeleteVersionSelectorRequest) returns (google.protobuf.Empty);
     */
    deleteVersionSelector(input: DeleteVersionSelectorRequest, options?: RpcOptions): UnaryCall<DeleteVersionSelectorRequest, Empty>;
}
/**
 * @generated from protobuf service VersionSelectorService
 */
export class VersionSelectorServiceClient implements IVersionSelectorServiceClient, ServiceInfo {
    typeName = VersionSelectorService.typeName;
    methods = VersionSelectorService.methods;
    options = VersionSelectorService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetVersionSelector(GetVersionSelectorRequest) returns (GetVersionSelectorResponse);
     */
    getVersionSelector(input: GetVersionSelectorRequest, options?: RpcOptions): UnaryCall<GetVersionSelectorRequest, GetVersionSelectorResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetVersionSelectorRequest, GetVersionSelectorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListVersionSelectors(ListVersionSelectorsRequest) returns (ListVersionSelectorsResponse);
     */
    listVersionSelectors(input: ListVersionSelectorsRequest, options?: RpcOptions): UnaryCall<ListVersionSelectorsRequest, ListVersionSelectorsResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListVersionSelectorsRequest, ListVersionSelectorsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateStaticVersionSelector(CreateStaticVersionSelectorRequest) returns (CreateStaticVersionSelectorResponse);
     */
    createStaticVersionSelector(input: CreateStaticVersionSelectorRequest, options?: RpcOptions): UnaryCall<CreateStaticVersionSelectorRequest, CreateStaticVersionSelectorResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateStaticVersionSelectorRequest, CreateStaticVersionSelectorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateExperimentVersionSelector(CreateExperimentVersionSelectorRequest) returns (CreateExperimentVersionSelectorResponse);
     */
    createExperimentVersionSelector(input: CreateExperimentVersionSelectorRequest, options?: RpcOptions): UnaryCall<CreateExperimentVersionSelectorRequest, CreateExperimentVersionSelectorResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateExperimentVersionSelectorRequest, CreateExperimentVersionSelectorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateVersionSelector(UpdateVersionSelectorRequest) returns (UpdateVersionSelectorResponse);
     */
    updateVersionSelector(input: UpdateVersionSelectorRequest, options?: RpcOptions): UnaryCall<UpdateVersionSelectorRequest, UpdateVersionSelectorResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateVersionSelectorRequest, UpdateVersionSelectorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteVersionSelector(DeleteVersionSelectorRequest) returns (google.protobuf.Empty);
     */
    deleteVersionSelector(input: DeleteVersionSelectorRequest, options?: RpcOptions): UnaryCall<DeleteVersionSelectorRequest, Empty> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteVersionSelectorRequest, Empty>("unary", this._transport, method, opt, input);
    }
}
