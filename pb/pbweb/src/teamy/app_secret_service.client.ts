// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "teamy/app_secret_service.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { AppSecretService } from "./app_secret_service";
import type { Empty } from "../google/protobuf/empty";
import type { DeleteAppSecretRequest } from "./app_secret_service";
import type { ListAppSecretResponse } from "./app_secret_service";
import type { ListAppSecretRequest } from "./app_secret_service";
import type { GetAppSecretResponse } from "./app_secret_service";
import type { GetAppSecretRequest } from "./app_secret_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CreateAppSecretResponse } from "./app_secret_service";
import type { CreateAppSecretRequest } from "./app_secret_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service AppSecretService
 */
export interface IAppSecretServiceClient {
    /**
     * @generated from protobuf rpc: CreateAppSecret(CreateAppSecretRequest) returns (CreateAppSecretResponse);
     */
    createAppSecret(input: CreateAppSecretRequest, options?: RpcOptions): UnaryCall<CreateAppSecretRequest, CreateAppSecretResponse>;
    /**
     * @generated from protobuf rpc: GetAppSecret(GetAppSecretRequest) returns (GetAppSecretResponse);
     */
    getAppSecret(input: GetAppSecretRequest, options?: RpcOptions): UnaryCall<GetAppSecretRequest, GetAppSecretResponse>;
    /**
     * @generated from protobuf rpc: ListAppSecret(ListAppSecretRequest) returns (ListAppSecretResponse);
     */
    listAppSecret(input: ListAppSecretRequest, options?: RpcOptions): UnaryCall<ListAppSecretRequest, ListAppSecretResponse>;
    /**
     * @generated from protobuf rpc: DeleteAppSecret(DeleteAppSecretRequest) returns (google.protobuf.Empty);
     */
    deleteAppSecret(input: DeleteAppSecretRequest, options?: RpcOptions): UnaryCall<DeleteAppSecretRequest, Empty>;
}
/**
 * @generated from protobuf service AppSecretService
 */
export class AppSecretServiceClient implements IAppSecretServiceClient, ServiceInfo {
    typeName = AppSecretService.typeName;
    methods = AppSecretService.methods;
    options = AppSecretService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateAppSecret(CreateAppSecretRequest) returns (CreateAppSecretResponse);
     */
    createAppSecret(input: CreateAppSecretRequest, options?: RpcOptions): UnaryCall<CreateAppSecretRequest, CreateAppSecretResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateAppSecretRequest, CreateAppSecretResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetAppSecret(GetAppSecretRequest) returns (GetAppSecretResponse);
     */
    getAppSecret(input: GetAppSecretRequest, options?: RpcOptions): UnaryCall<GetAppSecretRequest, GetAppSecretResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetAppSecretRequest, GetAppSecretResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListAppSecret(ListAppSecretRequest) returns (ListAppSecretResponse);
     */
    listAppSecret(input: ListAppSecretRequest, options?: RpcOptions): UnaryCall<ListAppSecretRequest, ListAppSecretResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListAppSecretRequest, ListAppSecretResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteAppSecret(DeleteAppSecretRequest) returns (google.protobuf.Empty);
     */
    deleteAppSecret(input: DeleteAppSecretRequest, options?: RpcOptions): UnaryCall<DeleteAppSecretRequest, Empty> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteAppSecretRequest, Empty>("unary", this._transport, method, opt, input);
    }
}
