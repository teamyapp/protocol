// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "teamy/rollout_service.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { RolloutService } from "./rollout_service";
import type { Empty } from "../google/protobuf/empty";
import type { DeleteRolloutRequest } from "./rollout_service";
import type { UpdateRolloutResponse } from "./rollout_service";
import type { UpdateRolloutRequest } from "./rollout_service";
import type { CreateAppRolloutResponse } from "./rollout_service";
import type { CreateAppRolloutRequest } from "./rollout_service";
import type { ListRolloutsResponse } from "./rollout_service";
import type { ListRolloutsRequest } from "./rollout_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetRolloutResponse } from "./rollout_service";
import type { GetRolloutRequest } from "./rollout_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service RolloutService
 */
export interface IRolloutServiceClient {
    /**
     * @generated from protobuf rpc: GetRollout(GetRolloutRequest) returns (GetRolloutResponse);
     */
    getRollout(input: GetRolloutRequest, options?: RpcOptions): UnaryCall<GetRolloutRequest, GetRolloutResponse>;
    /**
     * @generated from protobuf rpc: ListRollouts(ListRolloutsRequest) returns (ListRolloutsResponse);
     */
    listRollouts(input: ListRolloutsRequest, options?: RpcOptions): UnaryCall<ListRolloutsRequest, ListRolloutsResponse>;
    /**
     * @generated from protobuf rpc: CreateAppRollout(CreateAppRolloutRequest) returns (CreateAppRolloutResponse);
     */
    createAppRollout(input: CreateAppRolloutRequest, options?: RpcOptions): UnaryCall<CreateAppRolloutRequest, CreateAppRolloutResponse>;
    /**
     * @generated from protobuf rpc: UpdateRollout(UpdateRolloutRequest) returns (UpdateRolloutResponse);
     */
    updateRollout(input: UpdateRolloutRequest, options?: RpcOptions): UnaryCall<UpdateRolloutRequest, UpdateRolloutResponse>;
    /**
     * @generated from protobuf rpc: DeleteRollout(DeleteRolloutRequest) returns (google.protobuf.Empty);
     */
    deleteRollout(input: DeleteRolloutRequest, options?: RpcOptions): UnaryCall<DeleteRolloutRequest, Empty>;
}
/**
 * @generated from protobuf service RolloutService
 */
export class RolloutServiceClient implements IRolloutServiceClient, ServiceInfo {
    typeName = RolloutService.typeName;
    methods = RolloutService.methods;
    options = RolloutService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetRollout(GetRolloutRequest) returns (GetRolloutResponse);
     */
    getRollout(input: GetRolloutRequest, options?: RpcOptions): UnaryCall<GetRolloutRequest, GetRolloutResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetRolloutRequest, GetRolloutResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListRollouts(ListRolloutsRequest) returns (ListRolloutsResponse);
     */
    listRollouts(input: ListRolloutsRequest, options?: RpcOptions): UnaryCall<ListRolloutsRequest, ListRolloutsResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListRolloutsRequest, ListRolloutsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateAppRollout(CreateAppRolloutRequest) returns (CreateAppRolloutResponse);
     */
    createAppRollout(input: CreateAppRolloutRequest, options?: RpcOptions): UnaryCall<CreateAppRolloutRequest, CreateAppRolloutResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateAppRolloutRequest, CreateAppRolloutResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateRollout(UpdateRolloutRequest) returns (UpdateRolloutResponse);
     */
    updateRollout(input: UpdateRolloutRequest, options?: RpcOptions): UnaryCall<UpdateRolloutRequest, UpdateRolloutResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateRolloutRequest, UpdateRolloutResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteRollout(DeleteRolloutRequest) returns (google.protobuf.Empty);
     */
    deleteRollout(input: DeleteRolloutRequest, options?: RpcOptions): UnaryCall<DeleteRolloutRequest, Empty> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteRolloutRequest, Empty>("unary", this._transport, method, opt, input);
    }
}
