// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "teamy/team_service.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TeamService } from "./team_service";
import type { FinishTeamIconUploadSessionRequest } from "./team_service";
import type { CreateTeamIconUploadSessionResponse } from "./team_service";
import type { CreateTeamIconUploadSessionRequest } from "./team_service";
import type { RemoveMemberFromTeamRequest } from "./team_service";
import type { AddMemberToTeamRequest } from "./team_service";
import type { ListTeamMembersResponse } from "./team_service";
import type { ListTeamMembersRequest } from "./team_service";
import type { UpdateTeamMemberRequest } from "./team_service";
import type { GetTeamMemberResponse } from "./team_service";
import type { GetTeamMemberRequest } from "./team_service";
import type { UpdateTeamActiveSprintRequest } from "./team_service";
import type { DeleteTeamRequest } from "./team_service";
import type { Empty } from "../google/protobuf/empty";
import type { UpdateTeamRequest } from "./team_service";
import type { CreateTeamResponse } from "./team_service";
import type { CreateTeamRequest } from "./team_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetTeamResponse } from "./team_service";
import type { GetTeamRequest } from "./team_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service TeamService
 */
export interface ITeamServiceClient {
    /**
     * @generated from protobuf rpc: GetTeam(GetTeamRequest) returns (GetTeamResponse);
     */
    getTeam(input: GetTeamRequest, options?: RpcOptions): UnaryCall<GetTeamRequest, GetTeamResponse>;
    /**
     * @generated from protobuf rpc: CreateTeam(CreateTeamRequest) returns (CreateTeamResponse);
     */
    createTeam(input: CreateTeamRequest, options?: RpcOptions): UnaryCall<CreateTeamRequest, CreateTeamResponse>;
    /**
     * @generated from protobuf rpc: UpdateTeam(UpdateTeamRequest) returns (google.protobuf.Empty);
     */
    updateTeam(input: UpdateTeamRequest, options?: RpcOptions): UnaryCall<UpdateTeamRequest, Empty>;
    /**
     * @generated from protobuf rpc: DeleteTeam(DeleteTeamRequest) returns (google.protobuf.Empty);
     */
    deleteTeam(input: DeleteTeamRequest, options?: RpcOptions): UnaryCall<DeleteTeamRequest, Empty>;
    /**
     * @generated from protobuf rpc: UpdateTeamActiveSprint(UpdateTeamActiveSprintRequest) returns (google.protobuf.Empty);
     */
    updateTeamActiveSprint(input: UpdateTeamActiveSprintRequest, options?: RpcOptions): UnaryCall<UpdateTeamActiveSprintRequest, Empty>;
    /**
     * @generated from protobuf rpc: GetTeamMember(GetTeamMemberRequest) returns (GetTeamMemberResponse);
     */
    getTeamMember(input: GetTeamMemberRequest, options?: RpcOptions): UnaryCall<GetTeamMemberRequest, GetTeamMemberResponse>;
    /**
     * @generated from protobuf rpc: UpdateTeamMember(UpdateTeamMemberRequest) returns (google.protobuf.Empty);
     */
    updateTeamMember(input: UpdateTeamMemberRequest, options?: RpcOptions): UnaryCall<UpdateTeamMemberRequest, Empty>;
    /**
     * @generated from protobuf rpc: ListTeamMembers(ListTeamMembersRequest) returns (ListTeamMembersResponse);
     */
    listTeamMembers(input: ListTeamMembersRequest, options?: RpcOptions): UnaryCall<ListTeamMembersRequest, ListTeamMembersResponse>;
    /**
     * @generated from protobuf rpc: AddMemberToTeam(AddMemberToTeamRequest) returns (google.protobuf.Empty);
     */
    addMemberToTeam(input: AddMemberToTeamRequest, options?: RpcOptions): UnaryCall<AddMemberToTeamRequest, Empty>;
    /**
     * @generated from protobuf rpc: RemoveMemberFromTeam(RemoveMemberFromTeamRequest) returns (google.protobuf.Empty);
     */
    removeMemberFromTeam(input: RemoveMemberFromTeamRequest, options?: RpcOptions): UnaryCall<RemoveMemberFromTeamRequest, Empty>;
    /**
     * @generated from protobuf rpc: CreateTeamIconUploadSession(CreateTeamIconUploadSessionRequest) returns (CreateTeamIconUploadSessionResponse);
     */
    createTeamIconUploadSession(input: CreateTeamIconUploadSessionRequest, options?: RpcOptions): UnaryCall<CreateTeamIconUploadSessionRequest, CreateTeamIconUploadSessionResponse>;
    /**
     * @generated from protobuf rpc: FinishTeamIconUploadSession(FinishTeamIconUploadSessionRequest) returns (google.protobuf.Empty);
     */
    finishTeamIconUploadSession(input: FinishTeamIconUploadSessionRequest, options?: RpcOptions): UnaryCall<FinishTeamIconUploadSessionRequest, Empty>;
}
/**
 * @generated from protobuf service TeamService
 */
export class TeamServiceClient implements ITeamServiceClient, ServiceInfo {
    typeName = TeamService.typeName;
    methods = TeamService.methods;
    options = TeamService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetTeam(GetTeamRequest) returns (GetTeamResponse);
     */
    getTeam(input: GetTeamRequest, options?: RpcOptions): UnaryCall<GetTeamRequest, GetTeamResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetTeamRequest, GetTeamResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateTeam(CreateTeamRequest) returns (CreateTeamResponse);
     */
    createTeam(input: CreateTeamRequest, options?: RpcOptions): UnaryCall<CreateTeamRequest, CreateTeamResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateTeamRequest, CreateTeamResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateTeam(UpdateTeamRequest) returns (google.protobuf.Empty);
     */
    updateTeam(input: UpdateTeamRequest, options?: RpcOptions): UnaryCall<UpdateTeamRequest, Empty> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateTeamRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteTeam(DeleteTeamRequest) returns (google.protobuf.Empty);
     */
    deleteTeam(input: DeleteTeamRequest, options?: RpcOptions): UnaryCall<DeleteTeamRequest, Empty> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteTeamRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateTeamActiveSprint(UpdateTeamActiveSprintRequest) returns (google.protobuf.Empty);
     */
    updateTeamActiveSprint(input: UpdateTeamActiveSprintRequest, options?: RpcOptions): UnaryCall<UpdateTeamActiveSprintRequest, Empty> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateTeamActiveSprintRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetTeamMember(GetTeamMemberRequest) returns (GetTeamMemberResponse);
     */
    getTeamMember(input: GetTeamMemberRequest, options?: RpcOptions): UnaryCall<GetTeamMemberRequest, GetTeamMemberResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetTeamMemberRequest, GetTeamMemberResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateTeamMember(UpdateTeamMemberRequest) returns (google.protobuf.Empty);
     */
    updateTeamMember(input: UpdateTeamMemberRequest, options?: RpcOptions): UnaryCall<UpdateTeamMemberRequest, Empty> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateTeamMemberRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListTeamMembers(ListTeamMembersRequest) returns (ListTeamMembersResponse);
     */
    listTeamMembers(input: ListTeamMembersRequest, options?: RpcOptions): UnaryCall<ListTeamMembersRequest, ListTeamMembersResponse> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListTeamMembersRequest, ListTeamMembersResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddMemberToTeam(AddMemberToTeamRequest) returns (google.protobuf.Empty);
     */
    addMemberToTeam(input: AddMemberToTeamRequest, options?: RpcOptions): UnaryCall<AddMemberToTeamRequest, Empty> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddMemberToTeamRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RemoveMemberFromTeam(RemoveMemberFromTeamRequest) returns (google.protobuf.Empty);
     */
    removeMemberFromTeam(input: RemoveMemberFromTeamRequest, options?: RpcOptions): UnaryCall<RemoveMemberFromTeamRequest, Empty> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveMemberFromTeamRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateTeamIconUploadSession(CreateTeamIconUploadSessionRequest) returns (CreateTeamIconUploadSessionResponse);
     */
    createTeamIconUploadSession(input: CreateTeamIconUploadSessionRequest, options?: RpcOptions): UnaryCall<CreateTeamIconUploadSessionRequest, CreateTeamIconUploadSessionResponse> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateTeamIconUploadSessionRequest, CreateTeamIconUploadSessionResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FinishTeamIconUploadSession(FinishTeamIconUploadSessionRequest) returns (google.protobuf.Empty);
     */
    finishTeamIconUploadSession(input: FinishTeamIconUploadSessionRequest, options?: RpcOptions): UnaryCall<FinishTeamIconUploadSessionRequest, Empty> {
        const method = this.methods[11], opt = this._transport.mergeOptions(options);
        return stackIntercept<FinishTeamIconUploadSessionRequest, Empty>("unary", this._transport, method, opt, input);
    }
}
