// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "teamy/message/phase.proto" (syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "../../google/protobuf/timestamp";
/**
 * @generated from protobuf message Phase
 */
export interface Phase {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: number;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: PhaseStatus status = 3;
     */
    status: PhaseStatus;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp expectedStartAt = 4;
     */
    expectedStartAt?: Timestamp;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp actualStartAt = 5;
     */
    actualStartAt?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp expectedEndAt = 6;
     */
    expectedEndAt?: Timestamp;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp actualEndAt = 7;
     */
    actualEndAt?: Timestamp;
    /**
     * @generated from protobuf field: uint64 creatorId = 8;
     */
    creatorId: number;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp createdAt = 9;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp updatedAt = 10;
     */
    updatedAt?: Timestamp;
    /**
     * @generated from protobuf field: repeated uint64 storyIds = 11;
     */
    storyIds: number[];
}
/**
 * @generated from protobuf enum PhaseStatus
 */
export enum PhaseStatus {
    /**
     * @generated from protobuf enum value: TODO = 0;
     */
    TODO = 0,
    /**
     * @generated from protobuf enum value: IN_PROGRESS = 1;
     */
    IN_PROGRESS = 1,
    /**
     * @generated from protobuf enum value: PAUSED = 2;
     */
    PAUSED = 2,
    /**
     * @generated from protobuf enum value: COMPLETED = 3;
     */
    COMPLETED = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class Phase$Type extends MessageType<Phase> {
    constructor() {
        super("Phase", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "status", kind: "enum", T: () => ["PhaseStatus", PhaseStatus] },
            { no: 4, name: "expectedStartAt", kind: "message", T: () => Timestamp },
            { no: 5, name: "actualStartAt", kind: "message", T: () => Timestamp },
            { no: 6, name: "expectedEndAt", kind: "message", T: () => Timestamp },
            { no: 7, name: "actualEndAt", kind: "message", T: () => Timestamp },
            { no: 8, name: "creatorId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 9, name: "createdAt", kind: "message", T: () => Timestamp },
            { no: 10, name: "updatedAt", kind: "message", T: () => Timestamp },
            { no: 11, name: "storyIds", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<Phase>): Phase {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = 0;
        message.name = "";
        message.status = 0;
        message.creatorId = 0;
        message.storyIds = [];
        if (value !== undefined)
            reflectionMergePartial<Phase>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Phase): Phase {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 id */ 1:
                    message.id = reader.uint64().toNumber();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* PhaseStatus status */ 3:
                    message.status = reader.int32();
                    break;
                case /* google.protobuf.Timestamp expectedStartAt */ 4:
                    message.expectedStartAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.expectedStartAt);
                    break;
                case /* optional google.protobuf.Timestamp actualStartAt */ 5:
                    message.actualStartAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.actualStartAt);
                    break;
                case /* google.protobuf.Timestamp expectedEndAt */ 6:
                    message.expectedEndAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.expectedEndAt);
                    break;
                case /* optional google.protobuf.Timestamp actualEndAt */ 7:
                    message.actualEndAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.actualEndAt);
                    break;
                case /* uint64 creatorId */ 8:
                    message.creatorId = reader.uint64().toNumber();
                    break;
                case /* google.protobuf.Timestamp createdAt */ 9:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* optional google.protobuf.Timestamp updatedAt */ 10:
                    message.updatedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.updatedAt);
                    break;
                case /* repeated uint64 storyIds */ 11:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.storyIds.push(reader.uint64().toNumber());
                    else
                        message.storyIds.push(reader.uint64().toNumber());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Phase, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).uint64(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* PhaseStatus status = 3; */
        if (message.status !== 0)
            writer.tag(3, WireType.Varint).int32(message.status);
        /* google.protobuf.Timestamp expectedStartAt = 4; */
        if (message.expectedStartAt)
            Timestamp.internalBinaryWrite(message.expectedStartAt, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Timestamp actualStartAt = 5; */
        if (message.actualStartAt)
            Timestamp.internalBinaryWrite(message.actualStartAt, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Timestamp expectedEndAt = 6; */
        if (message.expectedEndAt)
            Timestamp.internalBinaryWrite(message.expectedEndAt, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Timestamp actualEndAt = 7; */
        if (message.actualEndAt)
            Timestamp.internalBinaryWrite(message.actualEndAt, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* uint64 creatorId = 8; */
        if (message.creatorId !== 0)
            writer.tag(8, WireType.Varint).uint64(message.creatorId);
        /* google.protobuf.Timestamp createdAt = 9; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Timestamp updatedAt = 10; */
        if (message.updatedAt)
            Timestamp.internalBinaryWrite(message.updatedAt, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* repeated uint64 storyIds = 11; */
        if (message.storyIds.length) {
            writer.tag(11, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.storyIds.length; i++)
                writer.uint64(message.storyIds[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Phase
 */
export const Phase = new Phase$Type();
