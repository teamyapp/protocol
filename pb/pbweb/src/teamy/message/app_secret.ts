// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "teamy/message/app_secret.proto" (syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "../../google/protobuf/timestamp";
/**
 * @generated from protobuf message AppSecret
 */
export interface AppSecret {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: number;
    /**
     * @generated from protobuf field: uint64 appId = 2;
     */
    appId: number;
    /**
     * @generated from protobuf field: string name = 3;
     */
    name: string;
    /**
     * @generated from protobuf field: optional string token = 4;
     */
    token?: string;
    /**
     * @generated from protobuf field: uint64 addedById = 5;
     */
    addedById: number;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp addedAt = 6;
     */
    addedAt?: Timestamp;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp lastUsedAt = 7;
     */
    lastUsedAt?: Timestamp;
}
// @generated message type with reflection information, may provide speed optimized methods
class AppSecret$Type extends MessageType<AppSecret> {
    constructor() {
        super("AppSecret", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "appId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "token", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "addedById", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 6, name: "addedAt", kind: "message", T: () => Timestamp },
            { no: 7, name: "lastUsedAt", kind: "message", T: () => Timestamp }
        ]);
    }
    create(value?: PartialMessage<AppSecret>): AppSecret {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = 0;
        message.appId = 0;
        message.name = "";
        message.addedById = 0;
        if (value !== undefined)
            reflectionMergePartial<AppSecret>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AppSecret): AppSecret {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 id */ 1:
                    message.id = reader.uint64().toNumber();
                    break;
                case /* uint64 appId */ 2:
                    message.appId = reader.uint64().toNumber();
                    break;
                case /* string name */ 3:
                    message.name = reader.string();
                    break;
                case /* optional string token */ 4:
                    message.token = reader.string();
                    break;
                case /* uint64 addedById */ 5:
                    message.addedById = reader.uint64().toNumber();
                    break;
                case /* google.protobuf.Timestamp addedAt */ 6:
                    message.addedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.addedAt);
                    break;
                case /* optional google.protobuf.Timestamp lastUsedAt */ 7:
                    message.lastUsedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.lastUsedAt);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AppSecret, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).uint64(message.id);
        /* uint64 appId = 2; */
        if (message.appId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.appId);
        /* string name = 3; */
        if (message.name !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.name);
        /* optional string token = 4; */
        if (message.token !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.token);
        /* uint64 addedById = 5; */
        if (message.addedById !== 0)
            writer.tag(5, WireType.Varint).uint64(message.addedById);
        /* google.protobuf.Timestamp addedAt = 6; */
        if (message.addedAt)
            Timestamp.internalBinaryWrite(message.addedAt, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Timestamp lastUsedAt = 7; */
        if (message.lastUsedAt)
            Timestamp.internalBinaryWrite(message.lastUsedAt, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message AppSecret
 */
export const AppSecret = new AppSecret$Type();
