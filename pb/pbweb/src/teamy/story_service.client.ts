// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "teamy/story_service.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { StoryService } from "./story_service";
import type { RemoveTasksFromStoryRequest } from "./story_service";
import type { AddTasksToStoryRequest } from "./story_service";
import type { RemoveTaskFromStoryRequest } from "./story_service";
import type { AddTaskToStoryRequest } from "./story_service";
import type { Empty } from "../google/protobuf/empty";
import type { DeleteStoryRequest } from "./story_service";
import type { UpdateStoryResponse } from "./story_service";
import type { UpdateStoryRequest } from "./story_service";
import type { CreateStoryResponse } from "./story_service";
import type { CreateStoryRequest } from "./story_service";
import type { ListStoriesResponse } from "./story_service";
import type { ListStoriesRequest } from "./story_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetStoryResponse } from "./story_service";
import type { GetStoryRequest } from "./story_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service StoryService
 */
export interface IStoryServiceClient {
    /**
     * @generated from protobuf rpc: GetStory(GetStoryRequest) returns (GetStoryResponse);
     */
    getStory(input: GetStoryRequest, options?: RpcOptions): UnaryCall<GetStoryRequest, GetStoryResponse>;
    /**
     * @generated from protobuf rpc: ListStories(ListStoriesRequest) returns (ListStoriesResponse);
     */
    listStories(input: ListStoriesRequest, options?: RpcOptions): UnaryCall<ListStoriesRequest, ListStoriesResponse>;
    /**
     * @generated from protobuf rpc: CreateStory(CreateStoryRequest) returns (CreateStoryResponse);
     */
    createStory(input: CreateStoryRequest, options?: RpcOptions): UnaryCall<CreateStoryRequest, CreateStoryResponse>;
    /**
     * @generated from protobuf rpc: UpdateStory(UpdateStoryRequest) returns (UpdateStoryResponse);
     */
    updateStory(input: UpdateStoryRequest, options?: RpcOptions): UnaryCall<UpdateStoryRequest, UpdateStoryResponse>;
    /**
     * @generated from protobuf rpc: DeleteStory(DeleteStoryRequest) returns (google.protobuf.Empty);
     */
    deleteStory(input: DeleteStoryRequest, options?: RpcOptions): UnaryCall<DeleteStoryRequest, Empty>;
    /**
     * @generated from protobuf rpc: AddTaskToStory(AddTaskToStoryRequest) returns (google.protobuf.Empty);
     */
    addTaskToStory(input: AddTaskToStoryRequest, options?: RpcOptions): UnaryCall<AddTaskToStoryRequest, Empty>;
    /**
     * @generated from protobuf rpc: RemoveTaskFromStory(RemoveTaskFromStoryRequest) returns (google.protobuf.Empty);
     */
    removeTaskFromStory(input: RemoveTaskFromStoryRequest, options?: RpcOptions): UnaryCall<RemoveTaskFromStoryRequest, Empty>;
    /**
     * @generated from protobuf rpc: AddTasksToStory(AddTasksToStoryRequest) returns (google.protobuf.Empty);
     */
    addTasksToStory(input: AddTasksToStoryRequest, options?: RpcOptions): UnaryCall<AddTasksToStoryRequest, Empty>;
    /**
     * @generated from protobuf rpc: RemoveTasksFromStory(RemoveTasksFromStoryRequest) returns (google.protobuf.Empty);
     */
    removeTasksFromStory(input: RemoveTasksFromStoryRequest, options?: RpcOptions): UnaryCall<RemoveTasksFromStoryRequest, Empty>;
}
/**
 * @generated from protobuf service StoryService
 */
export class StoryServiceClient implements IStoryServiceClient, ServiceInfo {
    typeName = StoryService.typeName;
    methods = StoryService.methods;
    options = StoryService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetStory(GetStoryRequest) returns (GetStoryResponse);
     */
    getStory(input: GetStoryRequest, options?: RpcOptions): UnaryCall<GetStoryRequest, GetStoryResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetStoryRequest, GetStoryResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListStories(ListStoriesRequest) returns (ListStoriesResponse);
     */
    listStories(input: ListStoriesRequest, options?: RpcOptions): UnaryCall<ListStoriesRequest, ListStoriesResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListStoriesRequest, ListStoriesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateStory(CreateStoryRequest) returns (CreateStoryResponse);
     */
    createStory(input: CreateStoryRequest, options?: RpcOptions): UnaryCall<CreateStoryRequest, CreateStoryResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateStoryRequest, CreateStoryResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateStory(UpdateStoryRequest) returns (UpdateStoryResponse);
     */
    updateStory(input: UpdateStoryRequest, options?: RpcOptions): UnaryCall<UpdateStoryRequest, UpdateStoryResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateStoryRequest, UpdateStoryResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteStory(DeleteStoryRequest) returns (google.protobuf.Empty);
     */
    deleteStory(input: DeleteStoryRequest, options?: RpcOptions): UnaryCall<DeleteStoryRequest, Empty> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteStoryRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddTaskToStory(AddTaskToStoryRequest) returns (google.protobuf.Empty);
     */
    addTaskToStory(input: AddTaskToStoryRequest, options?: RpcOptions): UnaryCall<AddTaskToStoryRequest, Empty> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddTaskToStoryRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RemoveTaskFromStory(RemoveTaskFromStoryRequest) returns (google.protobuf.Empty);
     */
    removeTaskFromStory(input: RemoveTaskFromStoryRequest, options?: RpcOptions): UnaryCall<RemoveTaskFromStoryRequest, Empty> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveTaskFromStoryRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddTasksToStory(AddTasksToStoryRequest) returns (google.protobuf.Empty);
     */
    addTasksToStory(input: AddTasksToStoryRequest, options?: RpcOptions): UnaryCall<AddTasksToStoryRequest, Empty> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddTasksToStoryRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RemoveTasksFromStory(RemoveTasksFromStoryRequest) returns (google.protobuf.Empty);
     */
    removeTasksFromStory(input: RemoveTasksFromStoryRequest, options?: RpcOptions): UnaryCall<RemoveTasksFromStoryRequest, Empty> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveTasksFromStoryRequest, Empty>("unary", this._transport, method, opt, input);
    }
}
