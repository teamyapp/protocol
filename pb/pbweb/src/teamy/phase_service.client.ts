// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "teamy/phase_service.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { PhaseService } from "./phase_service";
import type { RemoveStoriesFromPhaseRequest } from "./phase_service";
import type { AddStoriesToPhaseRequest } from "./phase_service";
import type { RemoveStoryFromPhaseRequest } from "./phase_service";
import type { AddStoryToPhaseRequest } from "./phase_service";
import type { Empty } from "../google/protobuf/empty";
import type { DeletePhaseRequest } from "./phase_service";
import type { UpdatePhaseResponse } from "./phase_service";
import type { UpdatePhaseRequest } from "./phase_service";
import type { CreatePhaseResponse } from "./phase_service";
import type { CreatePhaseRequest } from "./phase_service";
import type { ListPhasesResponse } from "./phase_service";
import type { ListPhasesRequest } from "./phase_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetPhaseResponse } from "./phase_service";
import type { GetPhaseRequest } from "./phase_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service PhaseService
 */
export interface IPhaseServiceClient {
    /**
     * @generated from protobuf rpc: GetPhase(GetPhaseRequest) returns (GetPhaseResponse);
     */
    getPhase(input: GetPhaseRequest, options?: RpcOptions): UnaryCall<GetPhaseRequest, GetPhaseResponse>;
    /**
     * @generated from protobuf rpc: ListPhases(ListPhasesRequest) returns (ListPhasesResponse);
     */
    listPhases(input: ListPhasesRequest, options?: RpcOptions): UnaryCall<ListPhasesRequest, ListPhasesResponse>;
    /**
     * @generated from protobuf rpc: CreatePhase(CreatePhaseRequest) returns (CreatePhaseResponse);
     */
    createPhase(input: CreatePhaseRequest, options?: RpcOptions): UnaryCall<CreatePhaseRequest, CreatePhaseResponse>;
    /**
     * @generated from protobuf rpc: UpdatePhase(UpdatePhaseRequest) returns (UpdatePhaseResponse);
     */
    updatePhase(input: UpdatePhaseRequest, options?: RpcOptions): UnaryCall<UpdatePhaseRequest, UpdatePhaseResponse>;
    /**
     * @generated from protobuf rpc: DeletePhase(DeletePhaseRequest) returns (google.protobuf.Empty);
     */
    deletePhase(input: DeletePhaseRequest, options?: RpcOptions): UnaryCall<DeletePhaseRequest, Empty>;
    /**
     * @generated from protobuf rpc: AddStoryToPhase(AddStoryToPhaseRequest) returns (google.protobuf.Empty);
     */
    addStoryToPhase(input: AddStoryToPhaseRequest, options?: RpcOptions): UnaryCall<AddStoryToPhaseRequest, Empty>;
    /**
     * @generated from protobuf rpc: RemoveStoryFromPhase(RemoveStoryFromPhaseRequest) returns (google.protobuf.Empty);
     */
    removeStoryFromPhase(input: RemoveStoryFromPhaseRequest, options?: RpcOptions): UnaryCall<RemoveStoryFromPhaseRequest, Empty>;
    /**
     * @generated from protobuf rpc: AddStoriesToPhase(AddStoriesToPhaseRequest) returns (google.protobuf.Empty);
     */
    addStoriesToPhase(input: AddStoriesToPhaseRequest, options?: RpcOptions): UnaryCall<AddStoriesToPhaseRequest, Empty>;
    /**
     * @generated from protobuf rpc: RemoveStoriesFromPhase(RemoveStoriesFromPhaseRequest) returns (google.protobuf.Empty);
     */
    removeStoriesFromPhase(input: RemoveStoriesFromPhaseRequest, options?: RpcOptions): UnaryCall<RemoveStoriesFromPhaseRequest, Empty>;
}
/**
 * @generated from protobuf service PhaseService
 */
export class PhaseServiceClient implements IPhaseServiceClient, ServiceInfo {
    typeName = PhaseService.typeName;
    methods = PhaseService.methods;
    options = PhaseService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetPhase(GetPhaseRequest) returns (GetPhaseResponse);
     */
    getPhase(input: GetPhaseRequest, options?: RpcOptions): UnaryCall<GetPhaseRequest, GetPhaseResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetPhaseRequest, GetPhaseResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListPhases(ListPhasesRequest) returns (ListPhasesResponse);
     */
    listPhases(input: ListPhasesRequest, options?: RpcOptions): UnaryCall<ListPhasesRequest, ListPhasesResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListPhasesRequest, ListPhasesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreatePhase(CreatePhaseRequest) returns (CreatePhaseResponse);
     */
    createPhase(input: CreatePhaseRequest, options?: RpcOptions): UnaryCall<CreatePhaseRequest, CreatePhaseResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreatePhaseRequest, CreatePhaseResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdatePhase(UpdatePhaseRequest) returns (UpdatePhaseResponse);
     */
    updatePhase(input: UpdatePhaseRequest, options?: RpcOptions): UnaryCall<UpdatePhaseRequest, UpdatePhaseResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdatePhaseRequest, UpdatePhaseResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeletePhase(DeletePhaseRequest) returns (google.protobuf.Empty);
     */
    deletePhase(input: DeletePhaseRequest, options?: RpcOptions): UnaryCall<DeletePhaseRequest, Empty> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeletePhaseRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddStoryToPhase(AddStoryToPhaseRequest) returns (google.protobuf.Empty);
     */
    addStoryToPhase(input: AddStoryToPhaseRequest, options?: RpcOptions): UnaryCall<AddStoryToPhaseRequest, Empty> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddStoryToPhaseRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RemoveStoryFromPhase(RemoveStoryFromPhaseRequest) returns (google.protobuf.Empty);
     */
    removeStoryFromPhase(input: RemoveStoryFromPhaseRequest, options?: RpcOptions): UnaryCall<RemoveStoryFromPhaseRequest, Empty> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveStoryFromPhaseRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddStoriesToPhase(AddStoriesToPhaseRequest) returns (google.protobuf.Empty);
     */
    addStoriesToPhase(input: AddStoriesToPhaseRequest, options?: RpcOptions): UnaryCall<AddStoriesToPhaseRequest, Empty> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddStoriesToPhaseRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RemoveStoriesFromPhase(RemoveStoriesFromPhaseRequest) returns (google.protobuf.Empty);
     */
    removeStoriesFromPhase(input: RemoveStoriesFromPhaseRequest, options?: RpcOptions): UnaryCall<RemoveStoriesFromPhaseRequest, Empty> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveStoriesFromPhaseRequest, Empty>("unary", this._transport, method, opt, input);
    }
}
