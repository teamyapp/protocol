// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "teamy/activator_service.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ActivatorService } from "./activator_service";
import type { DeleteActivatorRequest } from "./activator_service";
import type { UpdateActivatorResponse } from "./activator_service";
import type { UpdateActivatorRequest } from "./activator_service";
import type { CreatePercentageActivatorResponse } from "./activator_service";
import type { CreatePercentageActivatorRequest } from "./activator_service";
import type { CreateMaxViewersActivatorResponse } from "./activator_service";
import type { CreateMaxViewersActivatorRequest } from "./activator_service";
import type { CreateTimeRangeActivatorResponse } from "./activator_service";
import type { CreateTimeRangeActivatorRequest } from "./activator_service";
import type { CreateStaticActivatorResponse } from "./activator_service";
import type { Empty } from "../google/protobuf/empty";
import type { ListActivatorsResponse } from "./activator_service";
import type { ListActivatorsRequest } from "./activator_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetActivatorResponse } from "./activator_service";
import type { GetActivatorRequest } from "./activator_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service ActivatorService
 */
export interface IActivatorServiceClient {
    /**
     * @generated from protobuf rpc: GetActivator(GetActivatorRequest) returns (GetActivatorResponse);
     */
    getActivator(input: GetActivatorRequest, options?: RpcOptions): UnaryCall<GetActivatorRequest, GetActivatorResponse>;
    /**
     * @generated from protobuf rpc: ListActivators(ListActivatorsRequest) returns (ListActivatorsResponse);
     */
    listActivators(input: ListActivatorsRequest, options?: RpcOptions): UnaryCall<ListActivatorsRequest, ListActivatorsResponse>;
    /**
     * @generated from protobuf rpc: CreateStaticActivator(google.protobuf.Empty) returns (CreateStaticActivatorResponse);
     */
    createStaticActivator(input: Empty, options?: RpcOptions): UnaryCall<Empty, CreateStaticActivatorResponse>;
    /**
     * @generated from protobuf rpc: CreateTimeRangeActivator(CreateTimeRangeActivatorRequest) returns (CreateTimeRangeActivatorResponse);
     */
    createTimeRangeActivator(input: CreateTimeRangeActivatorRequest, options?: RpcOptions): UnaryCall<CreateTimeRangeActivatorRequest, CreateTimeRangeActivatorResponse>;
    /**
     * @generated from protobuf rpc: CreateMaxViewersActivator(CreateMaxViewersActivatorRequest) returns (CreateMaxViewersActivatorResponse);
     */
    createMaxViewersActivator(input: CreateMaxViewersActivatorRequest, options?: RpcOptions): UnaryCall<CreateMaxViewersActivatorRequest, CreateMaxViewersActivatorResponse>;
    /**
     * @generated from protobuf rpc: CreatePercentageActivator(CreatePercentageActivatorRequest) returns (CreatePercentageActivatorResponse);
     */
    createPercentageActivator(input: CreatePercentageActivatorRequest, options?: RpcOptions): UnaryCall<CreatePercentageActivatorRequest, CreatePercentageActivatorResponse>;
    /**
     * @generated from protobuf rpc: UpdateActivator(UpdateActivatorRequest) returns (UpdateActivatorResponse);
     */
    updateActivator(input: UpdateActivatorRequest, options?: RpcOptions): UnaryCall<UpdateActivatorRequest, UpdateActivatorResponse>;
    /**
     * @generated from protobuf rpc: DeleteActivator(DeleteActivatorRequest) returns (google.protobuf.Empty);
     */
    deleteActivator(input: DeleteActivatorRequest, options?: RpcOptions): UnaryCall<DeleteActivatorRequest, Empty>;
}
/**
 * @generated from protobuf service ActivatorService
 */
export class ActivatorServiceClient implements IActivatorServiceClient, ServiceInfo {
    typeName = ActivatorService.typeName;
    methods = ActivatorService.methods;
    options = ActivatorService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetActivator(GetActivatorRequest) returns (GetActivatorResponse);
     */
    getActivator(input: GetActivatorRequest, options?: RpcOptions): UnaryCall<GetActivatorRequest, GetActivatorResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetActivatorRequest, GetActivatorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListActivators(ListActivatorsRequest) returns (ListActivatorsResponse);
     */
    listActivators(input: ListActivatorsRequest, options?: RpcOptions): UnaryCall<ListActivatorsRequest, ListActivatorsResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListActivatorsRequest, ListActivatorsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateStaticActivator(google.protobuf.Empty) returns (CreateStaticActivatorResponse);
     */
    createStaticActivator(input: Empty, options?: RpcOptions): UnaryCall<Empty, CreateStaticActivatorResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, CreateStaticActivatorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateTimeRangeActivator(CreateTimeRangeActivatorRequest) returns (CreateTimeRangeActivatorResponse);
     */
    createTimeRangeActivator(input: CreateTimeRangeActivatorRequest, options?: RpcOptions): UnaryCall<CreateTimeRangeActivatorRequest, CreateTimeRangeActivatorResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateTimeRangeActivatorRequest, CreateTimeRangeActivatorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateMaxViewersActivator(CreateMaxViewersActivatorRequest) returns (CreateMaxViewersActivatorResponse);
     */
    createMaxViewersActivator(input: CreateMaxViewersActivatorRequest, options?: RpcOptions): UnaryCall<CreateMaxViewersActivatorRequest, CreateMaxViewersActivatorResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateMaxViewersActivatorRequest, CreateMaxViewersActivatorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreatePercentageActivator(CreatePercentageActivatorRequest) returns (CreatePercentageActivatorResponse);
     */
    createPercentageActivator(input: CreatePercentageActivatorRequest, options?: RpcOptions): UnaryCall<CreatePercentageActivatorRequest, CreatePercentageActivatorResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreatePercentageActivatorRequest, CreatePercentageActivatorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateActivator(UpdateActivatorRequest) returns (UpdateActivatorResponse);
     */
    updateActivator(input: UpdateActivatorRequest, options?: RpcOptions): UnaryCall<UpdateActivatorRequest, UpdateActivatorResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateActivatorRequest, UpdateActivatorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteActivator(DeleteActivatorRequest) returns (google.protobuf.Empty);
     */
    deleteActivator(input: DeleteActivatorRequest, options?: RpcOptions): UnaryCall<DeleteActivatorRequest, Empty> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteActivatorRequest, Empty>("unary", this._transport, method, opt, input);
    }
}
