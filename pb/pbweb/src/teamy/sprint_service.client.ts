// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "teamy/sprint_service.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { SprintService } from "./sprint_service";
import type { CopyTasksToSprintRequest } from "./sprint_service";
import type { MoveTasksToSprintRequest } from "./sprint_service";
import type { RemoveTeamMemberFromSprintRequest } from "./sprint_service";
import type { AddTeamMemberToSprintRequest } from "./sprint_service";
import type { RemoveTaskToSprintRequest } from "./sprint_service";
import type { AddTaskToSprintRequest } from "./sprint_service";
import type { GetActiveSprintRequest } from "./sprint_service";
import type { Empty } from "../google/protobuf/empty";
import type { DeleteSprintRequest } from "./sprint_service";
import type { CreateSprintResponse } from "./sprint_service";
import type { CreateSprintRequest } from "./sprint_service";
import type { ListSprintsResponse } from "./sprint_service";
import type { ListSprintsRequest } from "./sprint_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetSprintResponse } from "./sprint_service";
import type { GetSprintRequest } from "./sprint_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service SprintService
 */
export interface ISprintServiceClient {
    /**
     * @generated from protobuf rpc: GetSprint(GetSprintRequest) returns (GetSprintResponse);
     */
    getSprint(input: GetSprintRequest, options?: RpcOptions): UnaryCall<GetSprintRequest, GetSprintResponse>;
    /**
     * @generated from protobuf rpc: ListSprints(ListSprintsRequest) returns (ListSprintsResponse);
     */
    listSprints(input: ListSprintsRequest, options?: RpcOptions): UnaryCall<ListSprintsRequest, ListSprintsResponse>;
    /**
     * @generated from protobuf rpc: CreateSprint(CreateSprintRequest) returns (CreateSprintResponse);
     */
    createSprint(input: CreateSprintRequest, options?: RpcOptions): UnaryCall<CreateSprintRequest, CreateSprintResponse>;
    /**
     * @generated from protobuf rpc: DeleteSprint(DeleteSprintRequest) returns (google.protobuf.Empty);
     */
    deleteSprint(input: DeleteSprintRequest, options?: RpcOptions): UnaryCall<DeleteSprintRequest, Empty>;
    /**
     * @generated from protobuf rpc: GetActiveSprint(GetActiveSprintRequest) returns (GetSprintResponse);
     */
    getActiveSprint(input: GetActiveSprintRequest, options?: RpcOptions): UnaryCall<GetActiveSprintRequest, GetSprintResponse>;
    /**
     * @generated from protobuf rpc: AddTaskToSprint(AddTaskToSprintRequest) returns (google.protobuf.Empty);
     */
    addTaskToSprint(input: AddTaskToSprintRequest, options?: RpcOptions): UnaryCall<AddTaskToSprintRequest, Empty>;
    /**
     * @generated from protobuf rpc: RemoveTaskFromSprint(RemoveTaskToSprintRequest) returns (google.protobuf.Empty);
     */
    removeTaskFromSprint(input: RemoveTaskToSprintRequest, options?: RpcOptions): UnaryCall<RemoveTaskToSprintRequest, Empty>;
    /**
     * @generated from protobuf rpc: AddTeamMemberToSprint(AddTeamMemberToSprintRequest) returns (google.protobuf.Empty);
     */
    addTeamMemberToSprint(input: AddTeamMemberToSprintRequest, options?: RpcOptions): UnaryCall<AddTeamMemberToSprintRequest, Empty>;
    /**
     * @generated from protobuf rpc: RemoveTeamMemberFromSprint(RemoveTeamMemberFromSprintRequest) returns (google.protobuf.Empty);
     */
    removeTeamMemberFromSprint(input: RemoveTeamMemberFromSprintRequest, options?: RpcOptions): UnaryCall<RemoveTeamMemberFromSprintRequest, Empty>;
    /**
     * @generated from protobuf rpc: MoveTasksToSprint(MoveTasksToSprintRequest) returns (google.protobuf.Empty);
     */
    moveTasksToSprint(input: MoveTasksToSprintRequest, options?: RpcOptions): UnaryCall<MoveTasksToSprintRequest, Empty>;
    /**
     * @generated from protobuf rpc: CopyTasksToSprint(CopyTasksToSprintRequest) returns (google.protobuf.Empty);
     */
    copyTasksToSprint(input: CopyTasksToSprintRequest, options?: RpcOptions): UnaryCall<CopyTasksToSprintRequest, Empty>;
}
/**
 * @generated from protobuf service SprintService
 */
export class SprintServiceClient implements ISprintServiceClient, ServiceInfo {
    typeName = SprintService.typeName;
    methods = SprintService.methods;
    options = SprintService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetSprint(GetSprintRequest) returns (GetSprintResponse);
     */
    getSprint(input: GetSprintRequest, options?: RpcOptions): UnaryCall<GetSprintRequest, GetSprintResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetSprintRequest, GetSprintResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListSprints(ListSprintsRequest) returns (ListSprintsResponse);
     */
    listSprints(input: ListSprintsRequest, options?: RpcOptions): UnaryCall<ListSprintsRequest, ListSprintsResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListSprintsRequest, ListSprintsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateSprint(CreateSprintRequest) returns (CreateSprintResponse);
     */
    createSprint(input: CreateSprintRequest, options?: RpcOptions): UnaryCall<CreateSprintRequest, CreateSprintResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateSprintRequest, CreateSprintResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteSprint(DeleteSprintRequest) returns (google.protobuf.Empty);
     */
    deleteSprint(input: DeleteSprintRequest, options?: RpcOptions): UnaryCall<DeleteSprintRequest, Empty> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteSprintRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetActiveSprint(GetActiveSprintRequest) returns (GetSprintResponse);
     */
    getActiveSprint(input: GetActiveSprintRequest, options?: RpcOptions): UnaryCall<GetActiveSprintRequest, GetSprintResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetActiveSprintRequest, GetSprintResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddTaskToSprint(AddTaskToSprintRequest) returns (google.protobuf.Empty);
     */
    addTaskToSprint(input: AddTaskToSprintRequest, options?: RpcOptions): UnaryCall<AddTaskToSprintRequest, Empty> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddTaskToSprintRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RemoveTaskFromSprint(RemoveTaskToSprintRequest) returns (google.protobuf.Empty);
     */
    removeTaskFromSprint(input: RemoveTaskToSprintRequest, options?: RpcOptions): UnaryCall<RemoveTaskToSprintRequest, Empty> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveTaskToSprintRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddTeamMemberToSprint(AddTeamMemberToSprintRequest) returns (google.protobuf.Empty);
     */
    addTeamMemberToSprint(input: AddTeamMemberToSprintRequest, options?: RpcOptions): UnaryCall<AddTeamMemberToSprintRequest, Empty> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddTeamMemberToSprintRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RemoveTeamMemberFromSprint(RemoveTeamMemberFromSprintRequest) returns (google.protobuf.Empty);
     */
    removeTeamMemberFromSprint(input: RemoveTeamMemberFromSprintRequest, options?: RpcOptions): UnaryCall<RemoveTeamMemberFromSprintRequest, Empty> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveTeamMemberFromSprintRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: MoveTasksToSprint(MoveTasksToSprintRequest) returns (google.protobuf.Empty);
     */
    moveTasksToSprint(input: MoveTasksToSprintRequest, options?: RpcOptions): UnaryCall<MoveTasksToSprintRequest, Empty> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<MoveTasksToSprintRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CopyTasksToSprint(CopyTasksToSprintRequest) returns (google.protobuf.Empty);
     */
    copyTasksToSprint(input: CopyTasksToSprintRequest, options?: RpcOptions): UnaryCall<CopyTasksToSprintRequest, Empty> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<CopyTasksToSprintRequest, Empty>("unary", this._transport, method, opt, input);
    }
}
