// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "cloud/gen.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Generator } from "./gen";
import type { GenerateUniqueStringResponse } from "./gen";
import type { GenerateUniqueStringRequest } from "./gen";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GenerateUniqueNumberResponse } from "./gen";
import type { GenerateUniqueNumberRequest } from "./gen";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service Generator
 */
export interface IGeneratorClient {
    /**
     * @generated from protobuf rpc: GenerateUniqueNumber(GenerateUniqueNumberRequest) returns (GenerateUniqueNumberResponse);
     */
    generateUniqueNumber(input: GenerateUniqueNumberRequest, options?: RpcOptions): UnaryCall<GenerateUniqueNumberRequest, GenerateUniqueNumberResponse>;
    /**
     * @generated from protobuf rpc: GenerateUniqueString(GenerateUniqueStringRequest) returns (GenerateUniqueStringResponse);
     */
    generateUniqueString(input: GenerateUniqueStringRequest, options?: RpcOptions): UnaryCall<GenerateUniqueStringRequest, GenerateUniqueStringResponse>;
}
/**
 * @generated from protobuf service Generator
 */
export class GeneratorClient implements IGeneratorClient, ServiceInfo {
    typeName = Generator.typeName;
    methods = Generator.methods;
    options = Generator.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GenerateUniqueNumber(GenerateUniqueNumberRequest) returns (GenerateUniqueNumberResponse);
     */
    generateUniqueNumber(input: GenerateUniqueNumberRequest, options?: RpcOptions): UnaryCall<GenerateUniqueNumberRequest, GenerateUniqueNumberResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GenerateUniqueNumberRequest, GenerateUniqueNumberResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GenerateUniqueString(GenerateUniqueStringRequest) returns (GenerateUniqueStringResponse);
     */
    generateUniqueString(input: GenerateUniqueStringRequest, options?: RpcOptions): UnaryCall<GenerateUniqueStringRequest, GenerateUniqueStringResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GenerateUniqueStringRequest, GenerateUniqueStringResponse>("unary", this._transport, method, opt, input);
    }
}
