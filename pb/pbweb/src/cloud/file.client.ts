// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "cloud/file.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { File } from "./file";
import type { CreateUploadSessionResponse } from "./file";
import type { Empty } from "../google/protobuf/empty";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { UploadSession } from "./file";
import type { FindUploadSessionRequest } from "./file";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service File
 */
export interface IFileClient {
    /**
     * @generated from protobuf rpc: FindUploadSession(FindUploadSessionRequest) returns (UploadSession);
     */
    findUploadSession(input: FindUploadSessionRequest, options?: RpcOptions): UnaryCall<FindUploadSessionRequest, UploadSession>;
    /**
     * @generated from protobuf rpc: CreateUploadSession(google.protobuf.Empty) returns (CreateUploadSessionResponse);
     */
    createUploadSession(input: Empty, options?: RpcOptions): UnaryCall<Empty, CreateUploadSessionResponse>;
}
/**
 * @generated from protobuf service File
 */
export class FileClient implements IFileClient, ServiceInfo {
    typeName = File.typeName;
    methods = File.methods;
    options = File.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: FindUploadSession(FindUploadSessionRequest) returns (UploadSession);
     */
    findUploadSession(input: FindUploadSessionRequest, options?: RpcOptions): UnaryCall<FindUploadSessionRequest, UploadSession> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<FindUploadSessionRequest, UploadSession>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateUploadSession(google.protobuf.Empty) returns (CreateUploadSessionResponse);
     */
    createUploadSession(input: Empty, options?: RpcOptions): UnaryCall<Empty, CreateUploadSessionResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, CreateUploadSessionResponse>("unary", this._transport, method, opt, input);
    }
}
