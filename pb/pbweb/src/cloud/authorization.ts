// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "cloud/authorization.proto" (syntax proto3)
// tslint:disable
import { Empty } from "../google/protobuf/empty";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "../google/protobuf/timestamp";
/**
 * HasPermission
 *
 * @generated from protobuf message HasPermissionRequest
 */
export interface HasPermissionRequest {
    /**
     * @generated from protobuf field: string resourceType = 1;
     */
    resourceType: string;
    /**
     * @generated from protobuf field: uint64 resourceId = 2;
     */
    resourceId: number;
    /**
     * @generated from protobuf field: string operation = 3;
     */
    operation: string;
    /**
     * @generated from protobuf field: uint64 userId = 4;
     */
    userId: number;
}
/**
 * @generated from protobuf message HasPermissionResponse
 */
export interface HasPermissionResponse {
    /**
     * @generated from protobuf field: bool hasPermission = 1;
     */
    hasPermission: boolean;
}
/**
 * ListResourceTypes
 *
 * @generated from protobuf message ListResourceTypesQuery
 */
export interface ListResourceTypesQuery {
    /**
     * @generated from protobuf field: optional string resourceType = 1;
     */
    resourceType?: string;
    /**
     * @generated from protobuf field: optional uint64 creatorUserId = 2;
     */
    creatorUserId?: number;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp startCreationTime = 3;
     */
    startCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp endCreationTime = 4;
     */
    endCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional uint64 limit = 5;
     */
    limit?: number;
}
/**
 * @generated from protobuf message ListResourceTypesResponse
 */
export interface ListResourceTypesResponse {
    /**
     * @generated from protobuf field: repeated ResourceType resourceTypes = 1;
     */
    resourceTypes: ResourceType[];
}
/**
 * @generated from protobuf message ResourceType
 */
export interface ResourceType {
    /**
     * @generated from protobuf field: string resourceType = 1;
     */
    resourceType: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp createdAt = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: uint64 creatorUserId = 3;
     */
    creatorUserId: number;
}
/**
 * RegisterResourceType
 *
 * @generated from protobuf message RegisterResourceTypeRequest
 */
export interface RegisterResourceTypeRequest {
    /**
     * @generated from protobuf field: string resourceType = 1;
     */
    resourceType: string;
}
/**
 * UnregisterResource
 *
 * @generated from protobuf message UnregisterResourceTypeRequest
 */
export interface UnregisterResourceTypeRequest {
    /**
     * @generated from protobuf field: string resourceType = 1;
     */
    resourceType: string;
}
/**
 * ListResources
 *
 * @generated from protobuf message ListResourcesQuery
 */
export interface ListResourcesQuery {
    /**
     * @generated from protobuf field: optional string resourceType = 1;
     */
    resourceType?: string;
    /**
     * @generated from protobuf field: optional uint64 resourceId = 2;
     */
    resourceId?: number;
    /**
     * @generated from protobuf field: optional uint64 creatorUserId = 3;
     */
    creatorUserId?: number;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp startCreationTime = 4;
     */
    startCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp endCreationTime = 5;
     */
    endCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional uint64 limit = 6;
     */
    limit?: number;
}
/**
 * @generated from protobuf message ListResourcesResponse
 */
export interface ListResourcesResponse {
    /**
     * @generated from protobuf field: repeated Resource resources = 1;
     */
    resources: Resource[];
}
/**
 * @generated from protobuf message Resource
 */
export interface Resource {
    /**
     * @generated from protobuf field: string resourceType = 1;
     */
    resourceType: string;
    /**
     * @generated from protobuf field: uint64 resourceId = 2;
     */
    resourceId: number;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp createdAt = 3;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: uint64 creatorUserId = 4;
     */
    creatorUserId: number;
}
/**
 * RegisterResource
 *
 * @generated from protobuf message RegisterResourceRequest
 */
export interface RegisterResourceRequest {
    /**
     * @generated from protobuf field: string resourceType = 1;
     */
    resourceType: string;
    /**
     * @generated from protobuf field: uint64 resourceId = 2;
     */
    resourceId: number;
}
/**
 * UnregisterResource
 *
 * @generated from protobuf message UnregisterResourceRequest
 */
export interface UnregisterResourceRequest {
    /**
     * @generated from protobuf field: string resourceType = 1;
     */
    resourceType: string;
    /**
     * @generated from protobuf field: uint64 resourceId = 2;
     */
    resourceId: number;
}
/**
 * ListResourceRelations
 *
 * @generated from protobuf message ListResourceRelationsQuery
 */
export interface ListResourceRelationsQuery {
    /**
     * @generated from protobuf field: optional string childResourceType = 1;
     */
    childResourceType?: string;
    /**
     * @generated from protobuf field: optional uint64 childResourceId = 2;
     */
    childResourceId?: number;
    /**
     * @generated from protobuf field: optional string parentResourceType = 3;
     */
    parentResourceType?: string;
    /**
     * @generated from protobuf field: optional uint64 parentResourceId = 4;
     */
    parentResourceId?: number;
    /**
     * @generated from protobuf field: optional uint64 creatorUserId = 5;
     */
    creatorUserId?: number;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp startCreationTime = 6;
     */
    startCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp endCreationTime = 7;
     */
    endCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional uint64 limit = 8;
     */
    limit?: number;
}
/**
 * @generated from protobuf message ListResourceRelationsResponse
 */
export interface ListResourceRelationsResponse {
    /**
     * @generated from protobuf field: repeated ResourceRelation resourceRelations = 1;
     */
    resourceRelations: ResourceRelation[];
}
/**
 * @generated from protobuf message ResourceRelation
 */
export interface ResourceRelation {
    /**
     * @generated from protobuf field: string childResourceType = 1;
     */
    childResourceType: string;
    /**
     * @generated from protobuf field: uint64 childResourceId = 2;
     */
    childResourceId: number;
    /**
     * @generated from protobuf field: string parentResourceType = 3;
     */
    parentResourceType: string;
    /**
     * @generated from protobuf field: uint64 parentResourceId = 4;
     */
    parentResourceId: number;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp createdAt = 5;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: uint64 creatorUserId = 6;
     */
    creatorUserId: number;
}
/**
 * AssignParentResource
 *
 * @generated from protobuf message AssignParentResourceRequest
 */
export interface AssignParentResourceRequest {
    /**
     * @generated from protobuf field: string childResourceType = 1;
     */
    childResourceType: string;
    /**
     * @generated from protobuf field: uint64 childResourceId = 2;
     */
    childResourceId: number;
    /**
     * @generated from protobuf field: string parentResourceType = 3;
     */
    parentResourceType: string;
    /**
     * @generated from protobuf field: uint64 parentResourceId = 4;
     */
    parentResourceId: number;
}
/**
 * UnassignParentResource
 *
 * @generated from protobuf message UnassignParentResourceRequest
 */
export interface UnassignParentResourceRequest {
    /**
     * @generated from protobuf field: string childResourceType = 1;
     */
    childResourceType: string;
    /**
     * @generated from protobuf field: uint64 childResourceId = 2;
     */
    childResourceId: number;
    /**
     * @generated from protobuf field: string parentResourceType = 3;
     */
    parentResourceType: string;
    /**
     * @generated from protobuf field: uint64 parentResourceId = 4;
     */
    parentResourceId: number;
}
/**
 * ListOperations
 *
 * @generated from protobuf message ListOperationsQuery
 */
export interface ListOperationsQuery {
    /**
     * @generated from protobuf field: optional string resourceType = 1;
     */
    resourceType?: string;
    /**
     * @generated from protobuf field: optional string operation = 2;
     */
    operation?: string;
    /**
     * @generated from protobuf field: optional uint64 creatorUserId = 3;
     */
    creatorUserId?: number;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp startCreationTime = 4;
     */
    startCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp endCreationTime = 5;
     */
    endCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional uint64 limit = 6;
     */
    limit?: number;
}
/**
 * @generated from protobuf message ListOperationsResponse
 */
export interface ListOperationsResponse {
    /**
     * @generated from protobuf field: repeated Operation operations = 1;
     */
    operations: Operation[];
}
/**
 * @generated from protobuf message Operation
 */
export interface Operation {
    /**
     * @generated from protobuf field: string resourceType = 1;
     */
    resourceType: string;
    /**
     * @generated from protobuf field: string operation = 2;
     */
    operation: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp createdAt = 3;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: uint64 creatorUserId = 4;
     */
    creatorUserId: number;
}
/**
 * RegisterOperation
 *
 * @generated from protobuf message RegisterOperationRequest
 */
export interface RegisterOperationRequest {
    /**
     * @generated from protobuf field: string resourceType = 1;
     */
    resourceType: string;
    /**
     * @generated from protobuf field: string operation = 2;
     */
    operation: string;
}
/**
 * UnregisterOperation
 *
 * @generated from protobuf message UnregisterOperationRequest
 */
export interface UnregisterOperationRequest {
    /**
     * @generated from protobuf field: string resourceType = 1;
     */
    resourceType: string;
    /**
     * @generated from protobuf field: string operation = 2;
     */
    operation: string;
}
/**
 * ListOperationRelations
 *
 * @generated from protobuf message ListOperationRelationsQuery
 */
export interface ListOperationRelationsQuery {
    /**
     * @generated from protobuf field: optional string childResourceType = 1;
     */
    childResourceType?: string;
    /**
     * @generated from protobuf field: optional string childOperation = 2;
     */
    childOperation?: string;
    /**
     * @generated from protobuf field: optional string parentResourceType = 3;
     */
    parentResourceType?: string;
    /**
     * @generated from protobuf field: optional string parentOperation = 4;
     */
    parentOperation?: string;
    /**
     * @generated from protobuf field: optional uint64 creatorUserId = 5;
     */
    creatorUserId?: number;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp startCreationTime = 6;
     */
    startCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp endCreationTime = 7;
     */
    endCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional uint64 limit = 8;
     */
    limit?: number;
}
/**
 * @generated from protobuf message ListOperationRelationsResponse
 */
export interface ListOperationRelationsResponse {
    /**
     * @generated from protobuf field: repeated OperationRelation operationRelations = 1;
     */
    operationRelations: OperationRelation[];
}
/**
 * @generated from protobuf message OperationRelation
 */
export interface OperationRelation {
    /**
     * @generated from protobuf field: string childResourceType = 1;
     */
    childResourceType: string;
    /**
     * @generated from protobuf field: string childOperation = 2;
     */
    childOperation: string;
    /**
     * @generated from protobuf field: string parentResourceType = 3;
     */
    parentResourceType: string;
    /**
     * @generated from protobuf field: string parentOperation = 4;
     */
    parentOperation: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp createdAt = 5;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: uint64 creatorUserId = 6;
     */
    creatorUserId: number;
}
/**
 * AssignParentOperation
 *
 * @generated from protobuf message AssignParentOperationRequest
 */
export interface AssignParentOperationRequest {
    /**
     * @generated from protobuf field: string childResourceType = 1;
     */
    childResourceType: string;
    /**
     * @generated from protobuf field: string childOperation = 2;
     */
    childOperation: string;
    /**
     * @generated from protobuf field: string parentResourceType = 3;
     */
    parentResourceType: string;
    /**
     * @generated from protobuf field: string parentOperation = 4;
     */
    parentOperation: string;
}
/**
 * UnassignParentOperation
 *
 * @generated from protobuf message UnassignParentOperationRequest
 */
export interface UnassignParentOperationRequest {
    /**
     * @generated from protobuf field: string childResourceType = 1;
     */
    childResourceType: string;
    /**
     * @generated from protobuf field: string childOperation = 2;
     */
    childOperation: string;
    /**
     * @generated from protobuf field: string parentResourceType = 3;
     */
    parentResourceType: string;
    /**
     * @generated from protobuf field: string parentOperation = 4;
     */
    parentOperation: string;
}
/**
 * ListUserGroups
 *
 * @generated from protobuf message ListUserGroupsQuery
 */
export interface ListUserGroupsQuery {
    /**
     * @generated from protobuf field: optional uint64 id = 1;
     */
    id?: number;
    /**
     * @generated from protobuf field: optional string nameContains = 2;
     */
    nameContains?: string;
    /**
     * @generated from protobuf field: optional string descriptionContains = 3;
     */
    descriptionContains?: string;
    /**
     * @generated from protobuf field: optional uint64 creatorUserId = 4;
     */
    creatorUserId?: number;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp startCreationTime = 5;
     */
    startCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp endCreationTime = 6;
     */
    endCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional uint64 limit = 7;
     */
    limit?: number;
}
/**
 * @generated from protobuf message ListUserGroupsResponse
 */
export interface ListUserGroupsResponse {
    /**
     * @generated from protobuf field: repeated UserGroup userGroups = 1;
     */
    userGroups: UserGroup[];
}
/**
 * @generated from protobuf message UserGroup
 */
export interface UserGroup {
    /**
     * @generated from protobuf field: uint64 groupId = 1;
     */
    groupId: number;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: optional string description = 3;
     */
    description?: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp createdAt = 4;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: uint64 creatorUserId = 5;
     */
    creatorUserId: number;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp updatedAt = 6;
     */
    updatedAt?: Timestamp;
}
/**
 * CreateUserGroup
 *
 * @generated from protobuf message CreateUserGroupRequest
 */
export interface CreateUserGroupRequest {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: optional string description = 2;
     */
    description?: string;
}
/**
 * @generated from protobuf message CreateUserGroupResponse
 */
export interface CreateUserGroupResponse {
    /**
     * @generated from protobuf field: UserGroup userGroup = 1;
     */
    userGroup?: UserGroup;
}
/**
 * UpdateUserGroup
 *
 * @generated from protobuf message UpdateUserGroupRequest
 */
export interface UpdateUserGroupRequest {
    /**
     * @generated from protobuf field: uint64 groupId = 1;
     */
    groupId: number;
    /**
     * @generated from protobuf field: optional string name = 2;
     */
    name?: string;
    /**
     * @generated from protobuf field: optional string description = 3;
     */
    description?: string;
}
/**
 * DeleteUserGroup
 *
 * @generated from protobuf message DeleteUserGroupRequest
 */
export interface DeleteUserGroupRequest {
    /**
     * @generated from protobuf field: uint64 groupId = 1;
     */
    groupId: number;
}
/**
 * ListUserGroupMembers
 *
 * @generated from protobuf message ListUserGroupMembersQuery
 */
export interface ListUserGroupMembersQuery {
    /**
     * @generated from protobuf field: optional uint64 groupId = 1;
     */
    groupId?: number;
    /**
     * @generated from protobuf field: optional uint64 userId = 2;
     */
    userId?: number;
    /**
     * @generated from protobuf field: optional uint64 creatorUserId = 3;
     */
    creatorUserId?: number;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp startCreationTime = 4;
     */
    startCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp endCreationTime = 5;
     */
    endCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional uint64 limit = 6;
     */
    limit?: number;
}
/**
 * @generated from protobuf message ListUserGroupMembersResponse
 */
export interface ListUserGroupMembersResponse {
    /**
     * @generated from protobuf field: repeated UserGroupMember userGroupMembers = 1;
     */
    userGroupMembers: UserGroupMember[];
}
/**
 * @generated from protobuf message UserGroupMember
 */
export interface UserGroupMember {
    /**
     * @generated from protobuf field: uint64 groupId = 1;
     */
    groupId: number;
    /**
     * @generated from protobuf field: uint64 userId = 2;
     */
    userId: number;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp createdAt = 3;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: uint64 creatorUserId = 4;
     */
    creatorUserId: number;
}
/**
 * AddUserGroupMember
 *
 * @generated from protobuf message AddUserGroupMemberRequest
 */
export interface AddUserGroupMemberRequest {
    /**
     * @generated from protobuf field: uint64 groupId = 1;
     */
    groupId: number;
    /**
     * @generated from protobuf field: uint64 userId = 2;
     */
    userId: number;
}
/**
 * RemoveUserGroupMember
 *
 * @generated from protobuf message RemoveUserGroupMemberRequest
 */
export interface RemoveUserGroupMemberRequest {
    /**
     * @generated from protobuf field: uint64 groupId = 1;
     */
    groupId: number;
    /**
     * @generated from protobuf field: uint64 userId = 2;
     */
    userId: number;
}
/**
 * ListPermissions
 *
 * @generated from protobuf message ListPermissionsQuery
 */
export interface ListPermissionsQuery {
    /**
     * @generated from protobuf field: optional string resourceType = 1;
     */
    resourceType?: string;
    /**
     * @generated from protobuf field: optional uint64 resourceId = 2;
     */
    resourceId?: number;
    /**
     * @generated from protobuf field: optional string operation = 3;
     */
    operation?: string;
    /**
     * @generated from protobuf field: optional uint64 groupId = 4;
     */
    groupId?: number;
    /**
     * @generated from protobuf field: optional uint64 creatorUserId = 5;
     */
    creatorUserId?: number;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp startCreationTime = 6;
     */
    startCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp endCreationTime = 7;
     */
    endCreationTime?: Timestamp;
    /**
     * @generated from protobuf field: optional uint64 limit = 8;
     */
    limit?: number;
}
/**
 * @generated from protobuf message ListPermissionsResponse
 */
export interface ListPermissionsResponse {
    /**
     * @generated from protobuf field: repeated Permission permissions = 1;
     */
    permissions: Permission[];
}
/**
 * @generated from protobuf message Permission
 */
export interface Permission {
    /**
     * @generated from protobuf field: string resourceType = 1;
     */
    resourceType: string;
    /**
     * @generated from protobuf field: uint64 resourceId = 2;
     */
    resourceId: number;
    /**
     * @generated from protobuf field: string operation = 3;
     */
    operation: string;
    /**
     * @generated from protobuf field: uint64 groupId = 4;
     */
    groupId: number;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp createdAt = 5;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: uint64 creatorUserId = 6;
     */
    creatorUserId: number;
}
/**
 * AddPermission
 *
 * @generated from protobuf message AddPermissionRequest
 */
export interface AddPermissionRequest {
    /**
     * @generated from protobuf field: string resourceType = 1;
     */
    resourceType: string;
    /**
     * @generated from protobuf field: uint64 resourceId = 2;
     */
    resourceId: number;
    /**
     * @generated from protobuf field: string operation = 3;
     */
    operation: string;
    /**
     * @generated from protobuf field: uint64 groupId = 4;
     */
    groupId: number;
}
/**
 * RemovePermission
 *
 * @generated from protobuf message RemovePermissionRequest
 */
export interface RemovePermissionRequest {
    /**
     * @generated from protobuf field: string resourceType = 1;
     */
    resourceType: string;
    /**
     * @generated from protobuf field: uint64 resourceId = 2;
     */
    resourceId: number;
    /**
     * @generated from protobuf field: string operation = 3;
     */
    operation: string;
    /**
     * @generated from protobuf field: uint64 groupId = 4;
     */
    groupId: number;
}
/**
 * @generated from protobuf message ApplyAuthorizationConfigRequest
 */
export interface ApplyAuthorizationConfigRequest {
    /**
     * @generated from protobuf field: string configContent = 1;
     */
    configContent: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class HasPermissionRequest$Type extends MessageType<HasPermissionRequest> {
    constructor() {
        super("HasPermissionRequest", [
            { no: 1, name: "resourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "resourceId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "operation", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "userId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<HasPermissionRequest>): HasPermissionRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceType = "";
        message.resourceId = 0;
        message.operation = "";
        message.userId = 0;
        if (value !== undefined)
            reflectionMergePartial<HasPermissionRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HasPermissionRequest): HasPermissionRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* uint64 resourceId */ 2:
                    message.resourceId = reader.uint64().toNumber();
                    break;
                case /* string operation */ 3:
                    message.operation = reader.string();
                    break;
                case /* uint64 userId */ 4:
                    message.userId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HasPermissionRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resourceType = 1; */
        if (message.resourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* uint64 resourceId = 2; */
        if (message.resourceId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.resourceId);
        /* string operation = 3; */
        if (message.operation !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.operation);
        /* uint64 userId = 4; */
        if (message.userId !== 0)
            writer.tag(4, WireType.Varint).uint64(message.userId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message HasPermissionRequest
 */
export const HasPermissionRequest = new HasPermissionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HasPermissionResponse$Type extends MessageType<HasPermissionResponse> {
    constructor() {
        super("HasPermissionResponse", [
            { no: 1, name: "hasPermission", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<HasPermissionResponse>): HasPermissionResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.hasPermission = false;
        if (value !== undefined)
            reflectionMergePartial<HasPermissionResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HasPermissionResponse): HasPermissionResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool hasPermission */ 1:
                    message.hasPermission = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HasPermissionResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool hasPermission = 1; */
        if (message.hasPermission !== false)
            writer.tag(1, WireType.Varint).bool(message.hasPermission);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message HasPermissionResponse
 */
export const HasPermissionResponse = new HasPermissionResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListResourceTypesQuery$Type extends MessageType<ListResourceTypesQuery> {
    constructor() {
        super("ListResourceTypesQuery", [
            { no: 1, name: "resourceType", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "creatorUserId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "startCreationTime", kind: "message", T: () => Timestamp },
            { no: 4, name: "endCreationTime", kind: "message", T: () => Timestamp },
            { no: 5, name: "limit", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<ListResourceTypesQuery>): ListResourceTypesQuery {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<ListResourceTypesQuery>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListResourceTypesQuery): ListResourceTypesQuery {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* optional uint64 creatorUserId */ 2:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                case /* optional google.protobuf.Timestamp startCreationTime */ 3:
                    message.startCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.startCreationTime);
                    break;
                case /* optional google.protobuf.Timestamp endCreationTime */ 4:
                    message.endCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.endCreationTime);
                    break;
                case /* optional uint64 limit */ 5:
                    message.limit = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListResourceTypesQuery, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string resourceType = 1; */
        if (message.resourceType !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* optional uint64 creatorUserId = 2; */
        if (message.creatorUserId !== undefined)
            writer.tag(2, WireType.Varint).uint64(message.creatorUserId);
        /* optional google.protobuf.Timestamp startCreationTime = 3; */
        if (message.startCreationTime)
            Timestamp.internalBinaryWrite(message.startCreationTime, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Timestamp endCreationTime = 4; */
        if (message.endCreationTime)
            Timestamp.internalBinaryWrite(message.endCreationTime, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional uint64 limit = 5; */
        if (message.limit !== undefined)
            writer.tag(5, WireType.Varint).uint64(message.limit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListResourceTypesQuery
 */
export const ListResourceTypesQuery = new ListResourceTypesQuery$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListResourceTypesResponse$Type extends MessageType<ListResourceTypesResponse> {
    constructor() {
        super("ListResourceTypesResponse", [
            { no: 1, name: "resourceTypes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ResourceType }
        ]);
    }
    create(value?: PartialMessage<ListResourceTypesResponse>): ListResourceTypesResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceTypes = [];
        if (value !== undefined)
            reflectionMergePartial<ListResourceTypesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListResourceTypesResponse): ListResourceTypesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ResourceType resourceTypes */ 1:
                    message.resourceTypes.push(ResourceType.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListResourceTypesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ResourceType resourceTypes = 1; */
        for (let i = 0; i < message.resourceTypes.length; i++)
            ResourceType.internalBinaryWrite(message.resourceTypes[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListResourceTypesResponse
 */
export const ListResourceTypesResponse = new ListResourceTypesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResourceType$Type extends MessageType<ResourceType> {
    constructor() {
        super("ResourceType", [
            { no: 1, name: "resourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "createdAt", kind: "message", T: () => Timestamp },
            { no: 3, name: "creatorUserId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<ResourceType>): ResourceType {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceType = "";
        message.creatorUserId = 0;
        if (value !== undefined)
            reflectionMergePartial<ResourceType>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ResourceType): ResourceType {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* google.protobuf.Timestamp createdAt */ 2:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* uint64 creatorUserId */ 3:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ResourceType, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resourceType = 1; */
        if (message.resourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* google.protobuf.Timestamp createdAt = 2; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* uint64 creatorUserId = 3; */
        if (message.creatorUserId !== 0)
            writer.tag(3, WireType.Varint).uint64(message.creatorUserId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ResourceType
 */
export const ResourceType = new ResourceType$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RegisterResourceTypeRequest$Type extends MessageType<RegisterResourceTypeRequest> {
    constructor() {
        super("RegisterResourceTypeRequest", [
            { no: 1, name: "resourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<RegisterResourceTypeRequest>): RegisterResourceTypeRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceType = "";
        if (value !== undefined)
            reflectionMergePartial<RegisterResourceTypeRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RegisterResourceTypeRequest): RegisterResourceTypeRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RegisterResourceTypeRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resourceType = 1; */
        if (message.resourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message RegisterResourceTypeRequest
 */
export const RegisterResourceTypeRequest = new RegisterResourceTypeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnregisterResourceTypeRequest$Type extends MessageType<UnregisterResourceTypeRequest> {
    constructor() {
        super("UnregisterResourceTypeRequest", [
            { no: 1, name: "resourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UnregisterResourceTypeRequest>): UnregisterResourceTypeRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceType = "";
        if (value !== undefined)
            reflectionMergePartial<UnregisterResourceTypeRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnregisterResourceTypeRequest): UnregisterResourceTypeRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnregisterResourceTypeRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resourceType = 1; */
        if (message.resourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message UnregisterResourceTypeRequest
 */
export const UnregisterResourceTypeRequest = new UnregisterResourceTypeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListResourcesQuery$Type extends MessageType<ListResourcesQuery> {
    constructor() {
        super("ListResourcesQuery", [
            { no: 1, name: "resourceType", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "resourceId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "creatorUserId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 4, name: "startCreationTime", kind: "message", T: () => Timestamp },
            { no: 5, name: "endCreationTime", kind: "message", T: () => Timestamp },
            { no: 6, name: "limit", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<ListResourcesQuery>): ListResourcesQuery {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<ListResourcesQuery>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListResourcesQuery): ListResourcesQuery {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* optional uint64 resourceId */ 2:
                    message.resourceId = reader.uint64().toNumber();
                    break;
                case /* optional uint64 creatorUserId */ 3:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                case /* optional google.protobuf.Timestamp startCreationTime */ 4:
                    message.startCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.startCreationTime);
                    break;
                case /* optional google.protobuf.Timestamp endCreationTime */ 5:
                    message.endCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.endCreationTime);
                    break;
                case /* optional uint64 limit */ 6:
                    message.limit = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListResourcesQuery, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string resourceType = 1; */
        if (message.resourceType !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* optional uint64 resourceId = 2; */
        if (message.resourceId !== undefined)
            writer.tag(2, WireType.Varint).uint64(message.resourceId);
        /* optional uint64 creatorUserId = 3; */
        if (message.creatorUserId !== undefined)
            writer.tag(3, WireType.Varint).uint64(message.creatorUserId);
        /* optional google.protobuf.Timestamp startCreationTime = 4; */
        if (message.startCreationTime)
            Timestamp.internalBinaryWrite(message.startCreationTime, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Timestamp endCreationTime = 5; */
        if (message.endCreationTime)
            Timestamp.internalBinaryWrite(message.endCreationTime, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional uint64 limit = 6; */
        if (message.limit !== undefined)
            writer.tag(6, WireType.Varint).uint64(message.limit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListResourcesQuery
 */
export const ListResourcesQuery = new ListResourcesQuery$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListResourcesResponse$Type extends MessageType<ListResourcesResponse> {
    constructor() {
        super("ListResourcesResponse", [
            { no: 1, name: "resources", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Resource }
        ]);
    }
    create(value?: PartialMessage<ListResourcesResponse>): ListResourcesResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resources = [];
        if (value !== undefined)
            reflectionMergePartial<ListResourcesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListResourcesResponse): ListResourcesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated Resource resources */ 1:
                    message.resources.push(Resource.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListResourcesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated Resource resources = 1; */
        for (let i = 0; i < message.resources.length; i++)
            Resource.internalBinaryWrite(message.resources[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListResourcesResponse
 */
export const ListResourcesResponse = new ListResourcesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Resource$Type extends MessageType<Resource> {
    constructor() {
        super("Resource", [
            { no: 1, name: "resourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "resourceId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "createdAt", kind: "message", T: () => Timestamp },
            { no: 4, name: "creatorUserId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<Resource>): Resource {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceType = "";
        message.resourceId = 0;
        message.creatorUserId = 0;
        if (value !== undefined)
            reflectionMergePartial<Resource>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Resource): Resource {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* uint64 resourceId */ 2:
                    message.resourceId = reader.uint64().toNumber();
                    break;
                case /* google.protobuf.Timestamp createdAt */ 3:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* uint64 creatorUserId */ 4:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Resource, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resourceType = 1; */
        if (message.resourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* uint64 resourceId = 2; */
        if (message.resourceId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.resourceId);
        /* google.protobuf.Timestamp createdAt = 3; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* uint64 creatorUserId = 4; */
        if (message.creatorUserId !== 0)
            writer.tag(4, WireType.Varint).uint64(message.creatorUserId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Resource
 */
export const Resource = new Resource$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RegisterResourceRequest$Type extends MessageType<RegisterResourceRequest> {
    constructor() {
        super("RegisterResourceRequest", [
            { no: 1, name: "resourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "resourceId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<RegisterResourceRequest>): RegisterResourceRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceType = "";
        message.resourceId = 0;
        if (value !== undefined)
            reflectionMergePartial<RegisterResourceRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RegisterResourceRequest): RegisterResourceRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* uint64 resourceId */ 2:
                    message.resourceId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RegisterResourceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resourceType = 1; */
        if (message.resourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* uint64 resourceId = 2; */
        if (message.resourceId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.resourceId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message RegisterResourceRequest
 */
export const RegisterResourceRequest = new RegisterResourceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnregisterResourceRequest$Type extends MessageType<UnregisterResourceRequest> {
    constructor() {
        super("UnregisterResourceRequest", [
            { no: 1, name: "resourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "resourceId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<UnregisterResourceRequest>): UnregisterResourceRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceType = "";
        message.resourceId = 0;
        if (value !== undefined)
            reflectionMergePartial<UnregisterResourceRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnregisterResourceRequest): UnregisterResourceRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* uint64 resourceId */ 2:
                    message.resourceId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnregisterResourceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resourceType = 1; */
        if (message.resourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* uint64 resourceId = 2; */
        if (message.resourceId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.resourceId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message UnregisterResourceRequest
 */
export const UnregisterResourceRequest = new UnregisterResourceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListResourceRelationsQuery$Type extends MessageType<ListResourceRelationsQuery> {
    constructor() {
        super("ListResourceRelationsQuery", [
            { no: 1, name: "childResourceType", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "childResourceId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "parentResourceType", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "parentResourceId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 5, name: "creatorUserId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 6, name: "startCreationTime", kind: "message", T: () => Timestamp },
            { no: 7, name: "endCreationTime", kind: "message", T: () => Timestamp },
            { no: 8, name: "limit", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<ListResourceRelationsQuery>): ListResourceRelationsQuery {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<ListResourceRelationsQuery>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListResourceRelationsQuery): ListResourceRelationsQuery {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string childResourceType */ 1:
                    message.childResourceType = reader.string();
                    break;
                case /* optional uint64 childResourceId */ 2:
                    message.childResourceId = reader.uint64().toNumber();
                    break;
                case /* optional string parentResourceType */ 3:
                    message.parentResourceType = reader.string();
                    break;
                case /* optional uint64 parentResourceId */ 4:
                    message.parentResourceId = reader.uint64().toNumber();
                    break;
                case /* optional uint64 creatorUserId */ 5:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                case /* optional google.protobuf.Timestamp startCreationTime */ 6:
                    message.startCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.startCreationTime);
                    break;
                case /* optional google.protobuf.Timestamp endCreationTime */ 7:
                    message.endCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.endCreationTime);
                    break;
                case /* optional uint64 limit */ 8:
                    message.limit = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListResourceRelationsQuery, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string childResourceType = 1; */
        if (message.childResourceType !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.childResourceType);
        /* optional uint64 childResourceId = 2; */
        if (message.childResourceId !== undefined)
            writer.tag(2, WireType.Varint).uint64(message.childResourceId);
        /* optional string parentResourceType = 3; */
        if (message.parentResourceType !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.parentResourceType);
        /* optional uint64 parentResourceId = 4; */
        if (message.parentResourceId !== undefined)
            writer.tag(4, WireType.Varint).uint64(message.parentResourceId);
        /* optional uint64 creatorUserId = 5; */
        if (message.creatorUserId !== undefined)
            writer.tag(5, WireType.Varint).uint64(message.creatorUserId);
        /* optional google.protobuf.Timestamp startCreationTime = 6; */
        if (message.startCreationTime)
            Timestamp.internalBinaryWrite(message.startCreationTime, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Timestamp endCreationTime = 7; */
        if (message.endCreationTime)
            Timestamp.internalBinaryWrite(message.endCreationTime, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional uint64 limit = 8; */
        if (message.limit !== undefined)
            writer.tag(8, WireType.Varint).uint64(message.limit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListResourceRelationsQuery
 */
export const ListResourceRelationsQuery = new ListResourceRelationsQuery$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListResourceRelationsResponse$Type extends MessageType<ListResourceRelationsResponse> {
    constructor() {
        super("ListResourceRelationsResponse", [
            { no: 1, name: "resourceRelations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ResourceRelation }
        ]);
    }
    create(value?: PartialMessage<ListResourceRelationsResponse>): ListResourceRelationsResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceRelations = [];
        if (value !== undefined)
            reflectionMergePartial<ListResourceRelationsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListResourceRelationsResponse): ListResourceRelationsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ResourceRelation resourceRelations */ 1:
                    message.resourceRelations.push(ResourceRelation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListResourceRelationsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ResourceRelation resourceRelations = 1; */
        for (let i = 0; i < message.resourceRelations.length; i++)
            ResourceRelation.internalBinaryWrite(message.resourceRelations[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListResourceRelationsResponse
 */
export const ListResourceRelationsResponse = new ListResourceRelationsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResourceRelation$Type extends MessageType<ResourceRelation> {
    constructor() {
        super("ResourceRelation", [
            { no: 1, name: "childResourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "childResourceId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "parentResourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "parentResourceId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 5, name: "createdAt", kind: "message", T: () => Timestamp },
            { no: 6, name: "creatorUserId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<ResourceRelation>): ResourceRelation {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.childResourceType = "";
        message.childResourceId = 0;
        message.parentResourceType = "";
        message.parentResourceId = 0;
        message.creatorUserId = 0;
        if (value !== undefined)
            reflectionMergePartial<ResourceRelation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ResourceRelation): ResourceRelation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string childResourceType */ 1:
                    message.childResourceType = reader.string();
                    break;
                case /* uint64 childResourceId */ 2:
                    message.childResourceId = reader.uint64().toNumber();
                    break;
                case /* string parentResourceType */ 3:
                    message.parentResourceType = reader.string();
                    break;
                case /* uint64 parentResourceId */ 4:
                    message.parentResourceId = reader.uint64().toNumber();
                    break;
                case /* google.protobuf.Timestamp createdAt */ 5:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* uint64 creatorUserId */ 6:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ResourceRelation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string childResourceType = 1; */
        if (message.childResourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.childResourceType);
        /* uint64 childResourceId = 2; */
        if (message.childResourceId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.childResourceId);
        /* string parentResourceType = 3; */
        if (message.parentResourceType !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.parentResourceType);
        /* uint64 parentResourceId = 4; */
        if (message.parentResourceId !== 0)
            writer.tag(4, WireType.Varint).uint64(message.parentResourceId);
        /* google.protobuf.Timestamp createdAt = 5; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* uint64 creatorUserId = 6; */
        if (message.creatorUserId !== 0)
            writer.tag(6, WireType.Varint).uint64(message.creatorUserId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ResourceRelation
 */
export const ResourceRelation = new ResourceRelation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AssignParentResourceRequest$Type extends MessageType<AssignParentResourceRequest> {
    constructor() {
        super("AssignParentResourceRequest", [
            { no: 1, name: "childResourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "childResourceId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "parentResourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "parentResourceId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<AssignParentResourceRequest>): AssignParentResourceRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.childResourceType = "";
        message.childResourceId = 0;
        message.parentResourceType = "";
        message.parentResourceId = 0;
        if (value !== undefined)
            reflectionMergePartial<AssignParentResourceRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AssignParentResourceRequest): AssignParentResourceRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string childResourceType */ 1:
                    message.childResourceType = reader.string();
                    break;
                case /* uint64 childResourceId */ 2:
                    message.childResourceId = reader.uint64().toNumber();
                    break;
                case /* string parentResourceType */ 3:
                    message.parentResourceType = reader.string();
                    break;
                case /* uint64 parentResourceId */ 4:
                    message.parentResourceId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AssignParentResourceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string childResourceType = 1; */
        if (message.childResourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.childResourceType);
        /* uint64 childResourceId = 2; */
        if (message.childResourceId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.childResourceId);
        /* string parentResourceType = 3; */
        if (message.parentResourceType !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.parentResourceType);
        /* uint64 parentResourceId = 4; */
        if (message.parentResourceId !== 0)
            writer.tag(4, WireType.Varint).uint64(message.parentResourceId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message AssignParentResourceRequest
 */
export const AssignParentResourceRequest = new AssignParentResourceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnassignParentResourceRequest$Type extends MessageType<UnassignParentResourceRequest> {
    constructor() {
        super("UnassignParentResourceRequest", [
            { no: 1, name: "childResourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "childResourceId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "parentResourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "parentResourceId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<UnassignParentResourceRequest>): UnassignParentResourceRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.childResourceType = "";
        message.childResourceId = 0;
        message.parentResourceType = "";
        message.parentResourceId = 0;
        if (value !== undefined)
            reflectionMergePartial<UnassignParentResourceRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnassignParentResourceRequest): UnassignParentResourceRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string childResourceType */ 1:
                    message.childResourceType = reader.string();
                    break;
                case /* uint64 childResourceId */ 2:
                    message.childResourceId = reader.uint64().toNumber();
                    break;
                case /* string parentResourceType */ 3:
                    message.parentResourceType = reader.string();
                    break;
                case /* uint64 parentResourceId */ 4:
                    message.parentResourceId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnassignParentResourceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string childResourceType = 1; */
        if (message.childResourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.childResourceType);
        /* uint64 childResourceId = 2; */
        if (message.childResourceId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.childResourceId);
        /* string parentResourceType = 3; */
        if (message.parentResourceType !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.parentResourceType);
        /* uint64 parentResourceId = 4; */
        if (message.parentResourceId !== 0)
            writer.tag(4, WireType.Varint).uint64(message.parentResourceId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message UnassignParentResourceRequest
 */
export const UnassignParentResourceRequest = new UnassignParentResourceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListOperationsQuery$Type extends MessageType<ListOperationsQuery> {
    constructor() {
        super("ListOperationsQuery", [
            { no: 1, name: "resourceType", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "operation", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "creatorUserId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 4, name: "startCreationTime", kind: "message", T: () => Timestamp },
            { no: 5, name: "endCreationTime", kind: "message", T: () => Timestamp },
            { no: 6, name: "limit", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<ListOperationsQuery>): ListOperationsQuery {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<ListOperationsQuery>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListOperationsQuery): ListOperationsQuery {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* optional string operation */ 2:
                    message.operation = reader.string();
                    break;
                case /* optional uint64 creatorUserId */ 3:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                case /* optional google.protobuf.Timestamp startCreationTime */ 4:
                    message.startCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.startCreationTime);
                    break;
                case /* optional google.protobuf.Timestamp endCreationTime */ 5:
                    message.endCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.endCreationTime);
                    break;
                case /* optional uint64 limit */ 6:
                    message.limit = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListOperationsQuery, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string resourceType = 1; */
        if (message.resourceType !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* optional string operation = 2; */
        if (message.operation !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.operation);
        /* optional uint64 creatorUserId = 3; */
        if (message.creatorUserId !== undefined)
            writer.tag(3, WireType.Varint).uint64(message.creatorUserId);
        /* optional google.protobuf.Timestamp startCreationTime = 4; */
        if (message.startCreationTime)
            Timestamp.internalBinaryWrite(message.startCreationTime, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Timestamp endCreationTime = 5; */
        if (message.endCreationTime)
            Timestamp.internalBinaryWrite(message.endCreationTime, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional uint64 limit = 6; */
        if (message.limit !== undefined)
            writer.tag(6, WireType.Varint).uint64(message.limit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListOperationsQuery
 */
export const ListOperationsQuery = new ListOperationsQuery$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListOperationsResponse$Type extends MessageType<ListOperationsResponse> {
    constructor() {
        super("ListOperationsResponse", [
            { no: 1, name: "operations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Operation }
        ]);
    }
    create(value?: PartialMessage<ListOperationsResponse>): ListOperationsResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.operations = [];
        if (value !== undefined)
            reflectionMergePartial<ListOperationsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListOperationsResponse): ListOperationsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated Operation operations */ 1:
                    message.operations.push(Operation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListOperationsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated Operation operations = 1; */
        for (let i = 0; i < message.operations.length; i++)
            Operation.internalBinaryWrite(message.operations[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListOperationsResponse
 */
export const ListOperationsResponse = new ListOperationsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Operation$Type extends MessageType<Operation> {
    constructor() {
        super("Operation", [
            { no: 1, name: "resourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "operation", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "createdAt", kind: "message", T: () => Timestamp },
            { no: 4, name: "creatorUserId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<Operation>): Operation {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceType = "";
        message.operation = "";
        message.creatorUserId = 0;
        if (value !== undefined)
            reflectionMergePartial<Operation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Operation): Operation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* string operation */ 2:
                    message.operation = reader.string();
                    break;
                case /* google.protobuf.Timestamp createdAt */ 3:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* uint64 creatorUserId */ 4:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Operation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resourceType = 1; */
        if (message.resourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* string operation = 2; */
        if (message.operation !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.operation);
        /* google.protobuf.Timestamp createdAt = 3; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* uint64 creatorUserId = 4; */
        if (message.creatorUserId !== 0)
            writer.tag(4, WireType.Varint).uint64(message.creatorUserId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Operation
 */
export const Operation = new Operation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RegisterOperationRequest$Type extends MessageType<RegisterOperationRequest> {
    constructor() {
        super("RegisterOperationRequest", [
            { no: 1, name: "resourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "operation", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<RegisterOperationRequest>): RegisterOperationRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceType = "";
        message.operation = "";
        if (value !== undefined)
            reflectionMergePartial<RegisterOperationRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RegisterOperationRequest): RegisterOperationRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* string operation */ 2:
                    message.operation = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RegisterOperationRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resourceType = 1; */
        if (message.resourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* string operation = 2; */
        if (message.operation !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.operation);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message RegisterOperationRequest
 */
export const RegisterOperationRequest = new RegisterOperationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnregisterOperationRequest$Type extends MessageType<UnregisterOperationRequest> {
    constructor() {
        super("UnregisterOperationRequest", [
            { no: 1, name: "resourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "operation", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UnregisterOperationRequest>): UnregisterOperationRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceType = "";
        message.operation = "";
        if (value !== undefined)
            reflectionMergePartial<UnregisterOperationRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnregisterOperationRequest): UnregisterOperationRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* string operation */ 2:
                    message.operation = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnregisterOperationRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resourceType = 1; */
        if (message.resourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* string operation = 2; */
        if (message.operation !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.operation);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message UnregisterOperationRequest
 */
export const UnregisterOperationRequest = new UnregisterOperationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListOperationRelationsQuery$Type extends MessageType<ListOperationRelationsQuery> {
    constructor() {
        super("ListOperationRelationsQuery", [
            { no: 1, name: "childResourceType", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "childOperation", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "parentResourceType", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "parentOperation", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "creatorUserId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 6, name: "startCreationTime", kind: "message", T: () => Timestamp },
            { no: 7, name: "endCreationTime", kind: "message", T: () => Timestamp },
            { no: 8, name: "limit", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<ListOperationRelationsQuery>): ListOperationRelationsQuery {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<ListOperationRelationsQuery>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListOperationRelationsQuery): ListOperationRelationsQuery {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string childResourceType */ 1:
                    message.childResourceType = reader.string();
                    break;
                case /* optional string childOperation */ 2:
                    message.childOperation = reader.string();
                    break;
                case /* optional string parentResourceType */ 3:
                    message.parentResourceType = reader.string();
                    break;
                case /* optional string parentOperation */ 4:
                    message.parentOperation = reader.string();
                    break;
                case /* optional uint64 creatorUserId */ 5:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                case /* optional google.protobuf.Timestamp startCreationTime */ 6:
                    message.startCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.startCreationTime);
                    break;
                case /* optional google.protobuf.Timestamp endCreationTime */ 7:
                    message.endCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.endCreationTime);
                    break;
                case /* optional uint64 limit */ 8:
                    message.limit = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListOperationRelationsQuery, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string childResourceType = 1; */
        if (message.childResourceType !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.childResourceType);
        /* optional string childOperation = 2; */
        if (message.childOperation !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.childOperation);
        /* optional string parentResourceType = 3; */
        if (message.parentResourceType !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.parentResourceType);
        /* optional string parentOperation = 4; */
        if (message.parentOperation !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.parentOperation);
        /* optional uint64 creatorUserId = 5; */
        if (message.creatorUserId !== undefined)
            writer.tag(5, WireType.Varint).uint64(message.creatorUserId);
        /* optional google.protobuf.Timestamp startCreationTime = 6; */
        if (message.startCreationTime)
            Timestamp.internalBinaryWrite(message.startCreationTime, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Timestamp endCreationTime = 7; */
        if (message.endCreationTime)
            Timestamp.internalBinaryWrite(message.endCreationTime, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional uint64 limit = 8; */
        if (message.limit !== undefined)
            writer.tag(8, WireType.Varint).uint64(message.limit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListOperationRelationsQuery
 */
export const ListOperationRelationsQuery = new ListOperationRelationsQuery$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListOperationRelationsResponse$Type extends MessageType<ListOperationRelationsResponse> {
    constructor() {
        super("ListOperationRelationsResponse", [
            { no: 1, name: "operationRelations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => OperationRelation }
        ]);
    }
    create(value?: PartialMessage<ListOperationRelationsResponse>): ListOperationRelationsResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.operationRelations = [];
        if (value !== undefined)
            reflectionMergePartial<ListOperationRelationsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListOperationRelationsResponse): ListOperationRelationsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated OperationRelation operationRelations */ 1:
                    message.operationRelations.push(OperationRelation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListOperationRelationsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated OperationRelation operationRelations = 1; */
        for (let i = 0; i < message.operationRelations.length; i++)
            OperationRelation.internalBinaryWrite(message.operationRelations[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListOperationRelationsResponse
 */
export const ListOperationRelationsResponse = new ListOperationRelationsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OperationRelation$Type extends MessageType<OperationRelation> {
    constructor() {
        super("OperationRelation", [
            { no: 1, name: "childResourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "childOperation", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "parentResourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "parentOperation", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "createdAt", kind: "message", T: () => Timestamp },
            { no: 6, name: "creatorUserId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<OperationRelation>): OperationRelation {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.childResourceType = "";
        message.childOperation = "";
        message.parentResourceType = "";
        message.parentOperation = "";
        message.creatorUserId = 0;
        if (value !== undefined)
            reflectionMergePartial<OperationRelation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OperationRelation): OperationRelation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string childResourceType */ 1:
                    message.childResourceType = reader.string();
                    break;
                case /* string childOperation */ 2:
                    message.childOperation = reader.string();
                    break;
                case /* string parentResourceType */ 3:
                    message.parentResourceType = reader.string();
                    break;
                case /* string parentOperation */ 4:
                    message.parentOperation = reader.string();
                    break;
                case /* google.protobuf.Timestamp createdAt */ 5:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* uint64 creatorUserId */ 6:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OperationRelation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string childResourceType = 1; */
        if (message.childResourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.childResourceType);
        /* string childOperation = 2; */
        if (message.childOperation !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.childOperation);
        /* string parentResourceType = 3; */
        if (message.parentResourceType !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.parentResourceType);
        /* string parentOperation = 4; */
        if (message.parentOperation !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.parentOperation);
        /* google.protobuf.Timestamp createdAt = 5; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* uint64 creatorUserId = 6; */
        if (message.creatorUserId !== 0)
            writer.tag(6, WireType.Varint).uint64(message.creatorUserId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message OperationRelation
 */
export const OperationRelation = new OperationRelation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AssignParentOperationRequest$Type extends MessageType<AssignParentOperationRequest> {
    constructor() {
        super("AssignParentOperationRequest", [
            { no: 1, name: "childResourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "childOperation", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "parentResourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "parentOperation", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<AssignParentOperationRequest>): AssignParentOperationRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.childResourceType = "";
        message.childOperation = "";
        message.parentResourceType = "";
        message.parentOperation = "";
        if (value !== undefined)
            reflectionMergePartial<AssignParentOperationRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AssignParentOperationRequest): AssignParentOperationRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string childResourceType */ 1:
                    message.childResourceType = reader.string();
                    break;
                case /* string childOperation */ 2:
                    message.childOperation = reader.string();
                    break;
                case /* string parentResourceType */ 3:
                    message.parentResourceType = reader.string();
                    break;
                case /* string parentOperation */ 4:
                    message.parentOperation = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AssignParentOperationRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string childResourceType = 1; */
        if (message.childResourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.childResourceType);
        /* string childOperation = 2; */
        if (message.childOperation !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.childOperation);
        /* string parentResourceType = 3; */
        if (message.parentResourceType !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.parentResourceType);
        /* string parentOperation = 4; */
        if (message.parentOperation !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.parentOperation);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message AssignParentOperationRequest
 */
export const AssignParentOperationRequest = new AssignParentOperationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnassignParentOperationRequest$Type extends MessageType<UnassignParentOperationRequest> {
    constructor() {
        super("UnassignParentOperationRequest", [
            { no: 1, name: "childResourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "childOperation", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "parentResourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "parentOperation", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UnassignParentOperationRequest>): UnassignParentOperationRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.childResourceType = "";
        message.childOperation = "";
        message.parentResourceType = "";
        message.parentOperation = "";
        if (value !== undefined)
            reflectionMergePartial<UnassignParentOperationRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnassignParentOperationRequest): UnassignParentOperationRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string childResourceType */ 1:
                    message.childResourceType = reader.string();
                    break;
                case /* string childOperation */ 2:
                    message.childOperation = reader.string();
                    break;
                case /* string parentResourceType */ 3:
                    message.parentResourceType = reader.string();
                    break;
                case /* string parentOperation */ 4:
                    message.parentOperation = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnassignParentOperationRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string childResourceType = 1; */
        if (message.childResourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.childResourceType);
        /* string childOperation = 2; */
        if (message.childOperation !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.childOperation);
        /* string parentResourceType = 3; */
        if (message.parentResourceType !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.parentResourceType);
        /* string parentOperation = 4; */
        if (message.parentOperation !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.parentOperation);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message UnassignParentOperationRequest
 */
export const UnassignParentOperationRequest = new UnassignParentOperationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListUserGroupsQuery$Type extends MessageType<ListUserGroupsQuery> {
    constructor() {
        super("ListUserGroupsQuery", [
            { no: 1, name: "id", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "nameContains", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "descriptionContains", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "creatorUserId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 5, name: "startCreationTime", kind: "message", T: () => Timestamp },
            { no: 6, name: "endCreationTime", kind: "message", T: () => Timestamp },
            { no: 7, name: "limit", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<ListUserGroupsQuery>): ListUserGroupsQuery {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<ListUserGroupsQuery>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListUserGroupsQuery): ListUserGroupsQuery {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 id */ 1:
                    message.id = reader.uint64().toNumber();
                    break;
                case /* optional string nameContains */ 2:
                    message.nameContains = reader.string();
                    break;
                case /* optional string descriptionContains */ 3:
                    message.descriptionContains = reader.string();
                    break;
                case /* optional uint64 creatorUserId */ 4:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                case /* optional google.protobuf.Timestamp startCreationTime */ 5:
                    message.startCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.startCreationTime);
                    break;
                case /* optional google.protobuf.Timestamp endCreationTime */ 6:
                    message.endCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.endCreationTime);
                    break;
                case /* optional uint64 limit */ 7:
                    message.limit = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListUserGroupsQuery, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 id = 1; */
        if (message.id !== undefined)
            writer.tag(1, WireType.Varint).uint64(message.id);
        /* optional string nameContains = 2; */
        if (message.nameContains !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.nameContains);
        /* optional string descriptionContains = 3; */
        if (message.descriptionContains !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.descriptionContains);
        /* optional uint64 creatorUserId = 4; */
        if (message.creatorUserId !== undefined)
            writer.tag(4, WireType.Varint).uint64(message.creatorUserId);
        /* optional google.protobuf.Timestamp startCreationTime = 5; */
        if (message.startCreationTime)
            Timestamp.internalBinaryWrite(message.startCreationTime, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Timestamp endCreationTime = 6; */
        if (message.endCreationTime)
            Timestamp.internalBinaryWrite(message.endCreationTime, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional uint64 limit = 7; */
        if (message.limit !== undefined)
            writer.tag(7, WireType.Varint).uint64(message.limit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListUserGroupsQuery
 */
export const ListUserGroupsQuery = new ListUserGroupsQuery$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListUserGroupsResponse$Type extends MessageType<ListUserGroupsResponse> {
    constructor() {
        super("ListUserGroupsResponse", [
            { no: 1, name: "userGroups", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UserGroup }
        ]);
    }
    create(value?: PartialMessage<ListUserGroupsResponse>): ListUserGroupsResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.userGroups = [];
        if (value !== undefined)
            reflectionMergePartial<ListUserGroupsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListUserGroupsResponse): ListUserGroupsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated UserGroup userGroups */ 1:
                    message.userGroups.push(UserGroup.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListUserGroupsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated UserGroup userGroups = 1; */
        for (let i = 0; i < message.userGroups.length; i++)
            UserGroup.internalBinaryWrite(message.userGroups[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListUserGroupsResponse
 */
export const ListUserGroupsResponse = new ListUserGroupsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserGroup$Type extends MessageType<UserGroup> {
    constructor() {
        super("UserGroup", [
            { no: 1, name: "groupId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "description", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "createdAt", kind: "message", T: () => Timestamp },
            { no: 5, name: "creatorUserId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 6, name: "updatedAt", kind: "message", T: () => Timestamp }
        ]);
    }
    create(value?: PartialMessage<UserGroup>): UserGroup {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.groupId = 0;
        message.name = "";
        message.creatorUserId = 0;
        if (value !== undefined)
            reflectionMergePartial<UserGroup>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserGroup): UserGroup {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 groupId */ 1:
                    message.groupId = reader.uint64().toNumber();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* optional string description */ 3:
                    message.description = reader.string();
                    break;
                case /* google.protobuf.Timestamp createdAt */ 4:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* uint64 creatorUserId */ 5:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                case /* optional google.protobuf.Timestamp updatedAt */ 6:
                    message.updatedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.updatedAt);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserGroup, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 groupId = 1; */
        if (message.groupId !== 0)
            writer.tag(1, WireType.Varint).uint64(message.groupId);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* optional string description = 3; */
        if (message.description !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.description);
        /* google.protobuf.Timestamp createdAt = 4; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* uint64 creatorUserId = 5; */
        if (message.creatorUserId !== 0)
            writer.tag(5, WireType.Varint).uint64(message.creatorUserId);
        /* optional google.protobuf.Timestamp updatedAt = 6; */
        if (message.updatedAt)
            Timestamp.internalBinaryWrite(message.updatedAt, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message UserGroup
 */
export const UserGroup = new UserGroup$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateUserGroupRequest$Type extends MessageType<CreateUserGroupRequest> {
    constructor() {
        super("CreateUserGroupRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "description", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<CreateUserGroupRequest>): CreateUserGroupRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.name = "";
        if (value !== undefined)
            reflectionMergePartial<CreateUserGroupRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateUserGroupRequest): CreateUserGroupRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* optional string description */ 2:
                    message.description = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CreateUserGroupRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* optional string description = 2; */
        if (message.description !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.description);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message CreateUserGroupRequest
 */
export const CreateUserGroupRequest = new CreateUserGroupRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateUserGroupResponse$Type extends MessageType<CreateUserGroupResponse> {
    constructor() {
        super("CreateUserGroupResponse", [
            { no: 1, name: "userGroup", kind: "message", T: () => UserGroup }
        ]);
    }
    create(value?: PartialMessage<CreateUserGroupResponse>): CreateUserGroupResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<CreateUserGroupResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateUserGroupResponse): CreateUserGroupResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* UserGroup userGroup */ 1:
                    message.userGroup = UserGroup.internalBinaryRead(reader, reader.uint32(), options, message.userGroup);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CreateUserGroupResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* UserGroup userGroup = 1; */
        if (message.userGroup)
            UserGroup.internalBinaryWrite(message.userGroup, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message CreateUserGroupResponse
 */
export const CreateUserGroupResponse = new CreateUserGroupResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateUserGroupRequest$Type extends MessageType<UpdateUserGroupRequest> {
    constructor() {
        super("UpdateUserGroupRequest", [
            { no: 1, name: "groupId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "description", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UpdateUserGroupRequest>): UpdateUserGroupRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.groupId = 0;
        if (value !== undefined)
            reflectionMergePartial<UpdateUserGroupRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdateUserGroupRequest): UpdateUserGroupRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 groupId */ 1:
                    message.groupId = reader.uint64().toNumber();
                    break;
                case /* optional string name */ 2:
                    message.name = reader.string();
                    break;
                case /* optional string description */ 3:
                    message.description = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UpdateUserGroupRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 groupId = 1; */
        if (message.groupId !== 0)
            writer.tag(1, WireType.Varint).uint64(message.groupId);
        /* optional string name = 2; */
        if (message.name !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* optional string description = 3; */
        if (message.description !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.description);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message UpdateUserGroupRequest
 */
export const UpdateUserGroupRequest = new UpdateUserGroupRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteUserGroupRequest$Type extends MessageType<DeleteUserGroupRequest> {
    constructor() {
        super("DeleteUserGroupRequest", [
            { no: 1, name: "groupId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<DeleteUserGroupRequest>): DeleteUserGroupRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.groupId = 0;
        if (value !== undefined)
            reflectionMergePartial<DeleteUserGroupRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeleteUserGroupRequest): DeleteUserGroupRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 groupId */ 1:
                    message.groupId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DeleteUserGroupRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 groupId = 1; */
        if (message.groupId !== 0)
            writer.tag(1, WireType.Varint).uint64(message.groupId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message DeleteUserGroupRequest
 */
export const DeleteUserGroupRequest = new DeleteUserGroupRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListUserGroupMembersQuery$Type extends MessageType<ListUserGroupMembersQuery> {
    constructor() {
        super("ListUserGroupMembersQuery", [
            { no: 1, name: "groupId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "userId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "creatorUserId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 4, name: "startCreationTime", kind: "message", T: () => Timestamp },
            { no: 5, name: "endCreationTime", kind: "message", T: () => Timestamp },
            { no: 6, name: "limit", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<ListUserGroupMembersQuery>): ListUserGroupMembersQuery {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<ListUserGroupMembersQuery>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListUserGroupMembersQuery): ListUserGroupMembersQuery {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 groupId */ 1:
                    message.groupId = reader.uint64().toNumber();
                    break;
                case /* optional uint64 userId */ 2:
                    message.userId = reader.uint64().toNumber();
                    break;
                case /* optional uint64 creatorUserId */ 3:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                case /* optional google.protobuf.Timestamp startCreationTime */ 4:
                    message.startCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.startCreationTime);
                    break;
                case /* optional google.protobuf.Timestamp endCreationTime */ 5:
                    message.endCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.endCreationTime);
                    break;
                case /* optional uint64 limit */ 6:
                    message.limit = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListUserGroupMembersQuery, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 groupId = 1; */
        if (message.groupId !== undefined)
            writer.tag(1, WireType.Varint).uint64(message.groupId);
        /* optional uint64 userId = 2; */
        if (message.userId !== undefined)
            writer.tag(2, WireType.Varint).uint64(message.userId);
        /* optional uint64 creatorUserId = 3; */
        if (message.creatorUserId !== undefined)
            writer.tag(3, WireType.Varint).uint64(message.creatorUserId);
        /* optional google.protobuf.Timestamp startCreationTime = 4; */
        if (message.startCreationTime)
            Timestamp.internalBinaryWrite(message.startCreationTime, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Timestamp endCreationTime = 5; */
        if (message.endCreationTime)
            Timestamp.internalBinaryWrite(message.endCreationTime, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional uint64 limit = 6; */
        if (message.limit !== undefined)
            writer.tag(6, WireType.Varint).uint64(message.limit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListUserGroupMembersQuery
 */
export const ListUserGroupMembersQuery = new ListUserGroupMembersQuery$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListUserGroupMembersResponse$Type extends MessageType<ListUserGroupMembersResponse> {
    constructor() {
        super("ListUserGroupMembersResponse", [
            { no: 1, name: "userGroupMembers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UserGroupMember }
        ]);
    }
    create(value?: PartialMessage<ListUserGroupMembersResponse>): ListUserGroupMembersResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.userGroupMembers = [];
        if (value !== undefined)
            reflectionMergePartial<ListUserGroupMembersResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListUserGroupMembersResponse): ListUserGroupMembersResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated UserGroupMember userGroupMembers */ 1:
                    message.userGroupMembers.push(UserGroupMember.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListUserGroupMembersResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated UserGroupMember userGroupMembers = 1; */
        for (let i = 0; i < message.userGroupMembers.length; i++)
            UserGroupMember.internalBinaryWrite(message.userGroupMembers[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListUserGroupMembersResponse
 */
export const ListUserGroupMembersResponse = new ListUserGroupMembersResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserGroupMember$Type extends MessageType<UserGroupMember> {
    constructor() {
        super("UserGroupMember", [
            { no: 1, name: "groupId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "userId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "createdAt", kind: "message", T: () => Timestamp },
            { no: 4, name: "creatorUserId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<UserGroupMember>): UserGroupMember {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.groupId = 0;
        message.userId = 0;
        message.creatorUserId = 0;
        if (value !== undefined)
            reflectionMergePartial<UserGroupMember>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserGroupMember): UserGroupMember {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 groupId */ 1:
                    message.groupId = reader.uint64().toNumber();
                    break;
                case /* uint64 userId */ 2:
                    message.userId = reader.uint64().toNumber();
                    break;
                case /* google.protobuf.Timestamp createdAt */ 3:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* uint64 creatorUserId */ 4:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserGroupMember, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 groupId = 1; */
        if (message.groupId !== 0)
            writer.tag(1, WireType.Varint).uint64(message.groupId);
        /* uint64 userId = 2; */
        if (message.userId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.userId);
        /* google.protobuf.Timestamp createdAt = 3; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* uint64 creatorUserId = 4; */
        if (message.creatorUserId !== 0)
            writer.tag(4, WireType.Varint).uint64(message.creatorUserId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message UserGroupMember
 */
export const UserGroupMember = new UserGroupMember$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddUserGroupMemberRequest$Type extends MessageType<AddUserGroupMemberRequest> {
    constructor() {
        super("AddUserGroupMemberRequest", [
            { no: 1, name: "groupId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "userId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<AddUserGroupMemberRequest>): AddUserGroupMemberRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.groupId = 0;
        message.userId = 0;
        if (value !== undefined)
            reflectionMergePartial<AddUserGroupMemberRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddUserGroupMemberRequest): AddUserGroupMemberRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 groupId */ 1:
                    message.groupId = reader.uint64().toNumber();
                    break;
                case /* uint64 userId */ 2:
                    message.userId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddUserGroupMemberRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 groupId = 1; */
        if (message.groupId !== 0)
            writer.tag(1, WireType.Varint).uint64(message.groupId);
        /* uint64 userId = 2; */
        if (message.userId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.userId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message AddUserGroupMemberRequest
 */
export const AddUserGroupMemberRequest = new AddUserGroupMemberRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveUserGroupMemberRequest$Type extends MessageType<RemoveUserGroupMemberRequest> {
    constructor() {
        super("RemoveUserGroupMemberRequest", [
            { no: 1, name: "groupId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "userId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<RemoveUserGroupMemberRequest>): RemoveUserGroupMemberRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.groupId = 0;
        message.userId = 0;
        if (value !== undefined)
            reflectionMergePartial<RemoveUserGroupMemberRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RemoveUserGroupMemberRequest): RemoveUserGroupMemberRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 groupId */ 1:
                    message.groupId = reader.uint64().toNumber();
                    break;
                case /* uint64 userId */ 2:
                    message.userId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RemoveUserGroupMemberRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 groupId = 1; */
        if (message.groupId !== 0)
            writer.tag(1, WireType.Varint).uint64(message.groupId);
        /* uint64 userId = 2; */
        if (message.userId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.userId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message RemoveUserGroupMemberRequest
 */
export const RemoveUserGroupMemberRequest = new RemoveUserGroupMemberRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListPermissionsQuery$Type extends MessageType<ListPermissionsQuery> {
    constructor() {
        super("ListPermissionsQuery", [
            { no: 1, name: "resourceType", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "resourceId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "operation", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "groupId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 5, name: "creatorUserId", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 6, name: "startCreationTime", kind: "message", T: () => Timestamp },
            { no: 7, name: "endCreationTime", kind: "message", T: () => Timestamp },
            { no: 8, name: "limit", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<ListPermissionsQuery>): ListPermissionsQuery {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<ListPermissionsQuery>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListPermissionsQuery): ListPermissionsQuery {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* optional uint64 resourceId */ 2:
                    message.resourceId = reader.uint64().toNumber();
                    break;
                case /* optional string operation */ 3:
                    message.operation = reader.string();
                    break;
                case /* optional uint64 groupId */ 4:
                    message.groupId = reader.uint64().toNumber();
                    break;
                case /* optional uint64 creatorUserId */ 5:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                case /* optional google.protobuf.Timestamp startCreationTime */ 6:
                    message.startCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.startCreationTime);
                    break;
                case /* optional google.protobuf.Timestamp endCreationTime */ 7:
                    message.endCreationTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.endCreationTime);
                    break;
                case /* optional uint64 limit */ 8:
                    message.limit = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListPermissionsQuery, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string resourceType = 1; */
        if (message.resourceType !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* optional uint64 resourceId = 2; */
        if (message.resourceId !== undefined)
            writer.tag(2, WireType.Varint).uint64(message.resourceId);
        /* optional string operation = 3; */
        if (message.operation !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.operation);
        /* optional uint64 groupId = 4; */
        if (message.groupId !== undefined)
            writer.tag(4, WireType.Varint).uint64(message.groupId);
        /* optional uint64 creatorUserId = 5; */
        if (message.creatorUserId !== undefined)
            writer.tag(5, WireType.Varint).uint64(message.creatorUserId);
        /* optional google.protobuf.Timestamp startCreationTime = 6; */
        if (message.startCreationTime)
            Timestamp.internalBinaryWrite(message.startCreationTime, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional google.protobuf.Timestamp endCreationTime = 7; */
        if (message.endCreationTime)
            Timestamp.internalBinaryWrite(message.endCreationTime, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional uint64 limit = 8; */
        if (message.limit !== undefined)
            writer.tag(8, WireType.Varint).uint64(message.limit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListPermissionsQuery
 */
export const ListPermissionsQuery = new ListPermissionsQuery$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListPermissionsResponse$Type extends MessageType<ListPermissionsResponse> {
    constructor() {
        super("ListPermissionsResponse", [
            { no: 1, name: "permissions", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Permission }
        ]);
    }
    create(value?: PartialMessage<ListPermissionsResponse>): ListPermissionsResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.permissions = [];
        if (value !== undefined)
            reflectionMergePartial<ListPermissionsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListPermissionsResponse): ListPermissionsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated Permission permissions */ 1:
                    message.permissions.push(Permission.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListPermissionsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated Permission permissions = 1; */
        for (let i = 0; i < message.permissions.length; i++)
            Permission.internalBinaryWrite(message.permissions[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ListPermissionsResponse
 */
export const ListPermissionsResponse = new ListPermissionsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Permission$Type extends MessageType<Permission> {
    constructor() {
        super("Permission", [
            { no: 1, name: "resourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "resourceId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "operation", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "groupId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 5, name: "createdAt", kind: "message", T: () => Timestamp },
            { no: 6, name: "creatorUserId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<Permission>): Permission {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceType = "";
        message.resourceId = 0;
        message.operation = "";
        message.groupId = 0;
        message.creatorUserId = 0;
        if (value !== undefined)
            reflectionMergePartial<Permission>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Permission): Permission {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* uint64 resourceId */ 2:
                    message.resourceId = reader.uint64().toNumber();
                    break;
                case /* string operation */ 3:
                    message.operation = reader.string();
                    break;
                case /* uint64 groupId */ 4:
                    message.groupId = reader.uint64().toNumber();
                    break;
                case /* google.protobuf.Timestamp createdAt */ 5:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* uint64 creatorUserId */ 6:
                    message.creatorUserId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Permission, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resourceType = 1; */
        if (message.resourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* uint64 resourceId = 2; */
        if (message.resourceId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.resourceId);
        /* string operation = 3; */
        if (message.operation !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.operation);
        /* uint64 groupId = 4; */
        if (message.groupId !== 0)
            writer.tag(4, WireType.Varint).uint64(message.groupId);
        /* google.protobuf.Timestamp createdAt = 5; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* uint64 creatorUserId = 6; */
        if (message.creatorUserId !== 0)
            writer.tag(6, WireType.Varint).uint64(message.creatorUserId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Permission
 */
export const Permission = new Permission$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddPermissionRequest$Type extends MessageType<AddPermissionRequest> {
    constructor() {
        super("AddPermissionRequest", [
            { no: 1, name: "resourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "resourceId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "operation", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "groupId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<AddPermissionRequest>): AddPermissionRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceType = "";
        message.resourceId = 0;
        message.operation = "";
        message.groupId = 0;
        if (value !== undefined)
            reflectionMergePartial<AddPermissionRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddPermissionRequest): AddPermissionRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* uint64 resourceId */ 2:
                    message.resourceId = reader.uint64().toNumber();
                    break;
                case /* string operation */ 3:
                    message.operation = reader.string();
                    break;
                case /* uint64 groupId */ 4:
                    message.groupId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddPermissionRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resourceType = 1; */
        if (message.resourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* uint64 resourceId = 2; */
        if (message.resourceId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.resourceId);
        /* string operation = 3; */
        if (message.operation !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.operation);
        /* uint64 groupId = 4; */
        if (message.groupId !== 0)
            writer.tag(4, WireType.Varint).uint64(message.groupId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message AddPermissionRequest
 */
export const AddPermissionRequest = new AddPermissionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemovePermissionRequest$Type extends MessageType<RemovePermissionRequest> {
    constructor() {
        super("RemovePermissionRequest", [
            { no: 1, name: "resourceType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "resourceId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "operation", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "groupId", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<RemovePermissionRequest>): RemovePermissionRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceType = "";
        message.resourceId = 0;
        message.operation = "";
        message.groupId = 0;
        if (value !== undefined)
            reflectionMergePartial<RemovePermissionRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RemovePermissionRequest): RemovePermissionRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resourceType */ 1:
                    message.resourceType = reader.string();
                    break;
                case /* uint64 resourceId */ 2:
                    message.resourceId = reader.uint64().toNumber();
                    break;
                case /* string operation */ 3:
                    message.operation = reader.string();
                    break;
                case /* uint64 groupId */ 4:
                    message.groupId = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RemovePermissionRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resourceType = 1; */
        if (message.resourceType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceType);
        /* uint64 resourceId = 2; */
        if (message.resourceId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.resourceId);
        /* string operation = 3; */
        if (message.operation !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.operation);
        /* uint64 groupId = 4; */
        if (message.groupId !== 0)
            writer.tag(4, WireType.Varint).uint64(message.groupId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message RemovePermissionRequest
 */
export const RemovePermissionRequest = new RemovePermissionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ApplyAuthorizationConfigRequest$Type extends MessageType<ApplyAuthorizationConfigRequest> {
    constructor() {
        super("ApplyAuthorizationConfigRequest", [
            { no: 1, name: "configContent", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ApplyAuthorizationConfigRequest>): ApplyAuthorizationConfigRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.configContent = "";
        if (value !== undefined)
            reflectionMergePartial<ApplyAuthorizationConfigRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ApplyAuthorizationConfigRequest): ApplyAuthorizationConfigRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string configContent */ 1:
                    message.configContent = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ApplyAuthorizationConfigRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string configContent = 1; */
        if (message.configContent !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.configContent);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApplyAuthorizationConfigRequest
 */
export const ApplyAuthorizationConfigRequest = new ApplyAuthorizationConfigRequest$Type();
/**
 * @generated ServiceType for protobuf service Authorization
 */
export const Authorization = new ServiceType("Authorization", [
    { name: "HasPermission", options: {}, I: HasPermissionRequest, O: HasPermissionResponse },
    { name: "ListResourceTypes", options: {}, I: ListResourceTypesQuery, O: ListResourceTypesResponse },
    { name: "RegisterResourceType", options: {}, I: RegisterResourceTypeRequest, O: Empty },
    { name: "UnregisterResourceType", options: {}, I: UnregisterResourceTypeRequest, O: Empty },
    { name: "ListResources", options: {}, I: ListResourcesQuery, O: ListResourcesResponse },
    { name: "RegisterResource", options: {}, I: RegisterResourceRequest, O: Empty },
    { name: "UnregisterResource", options: {}, I: UnregisterResourceRequest, O: Empty },
    { name: "ListResourceRelations", options: {}, I: ListResourceRelationsQuery, O: ListResourceRelationsResponse },
    { name: "AssignParentResource", options: {}, I: AssignParentResourceRequest, O: Empty },
    { name: "UnassignParentResource", options: {}, I: UnassignParentResourceRequest, O: Empty },
    { name: "ListOperations", options: {}, I: ListOperationsQuery, O: ListOperationsResponse },
    { name: "RegisterOperation", options: {}, I: RegisterOperationRequest, O: Empty },
    { name: "UnregisterOperation", options: {}, I: UnregisterOperationRequest, O: Empty },
    { name: "ListOperationRelations", options: {}, I: ListOperationRelationsQuery, O: ListOperationRelationsResponse },
    { name: "AssignParentOperation", options: {}, I: AssignParentOperationRequest, O: Empty },
    { name: "UnassignParentOperation", options: {}, I: UnassignParentOperationRequest, O: Empty },
    { name: "ListUserGroups", options: {}, I: ListUserGroupsQuery, O: ListUserGroupsResponse },
    { name: "CreateUserGroup", options: {}, I: CreateUserGroupRequest, O: CreateUserGroupResponse },
    { name: "UpdateUserGroup", options: {}, I: UpdateUserGroupRequest, O: Empty },
    { name: "DeleteUserGroup", options: {}, I: DeleteUserGroupRequest, O: Empty },
    { name: "ListUserGroupMembers", options: {}, I: ListUserGroupMembersQuery, O: ListUserGroupMembersResponse },
    { name: "AddUserGroupMember", options: {}, I: AddUserGroupMemberRequest, O: Empty },
    { name: "RemoveUserGroupMember", options: {}, I: RemoveUserGroupMemberRequest, O: Empty },
    { name: "ListPermissions", options: {}, I: ListPermissionsQuery, O: ListPermissionsResponse },
    { name: "AddPermission", options: {}, I: AddPermissionRequest, O: Empty },
    { name: "RemovePermission", options: {}, I: RemovePermissionRequest, O: Empty },
    { name: "ApplyAuthorizationConfig", options: {}, I: ApplyAuthorizationConfigRequest, O: Empty }
]);
