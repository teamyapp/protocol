/**
 * @fileoverview gRPC-Web generated client stub for 
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: team.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as team_pb from './team_pb'; // proto import: "team.proto"
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"


export class TeamClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateTeam = new grpcWeb.MethodDescriptor(
    '/Team/CreateTeam',
    grpcWeb.MethodType.UNARY,
    team_pb.CreateTeamRequest,
    team_pb.CreateTeamResponse,
    (request: team_pb.CreateTeamRequest) => {
      return request.serializeBinary();
    },
    team_pb.CreateTeamResponse.deserializeBinary
  );

  createTeam(
    request: team_pb.CreateTeamRequest,
    metadata?: grpcWeb.Metadata | null): Promise<team_pb.CreateTeamResponse>;

  createTeam(
    request: team_pb.CreateTeamRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: team_pb.CreateTeamResponse) => void): grpcWeb.ClientReadableStream<team_pb.CreateTeamResponse>;

  createTeam(
    request: team_pb.CreateTeamRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: team_pb.CreateTeamResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Team/CreateTeam',
        request,
        metadata || {},
        this.methodDescriptorCreateTeam,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Team/CreateTeam',
    request,
    metadata || {},
    this.methodDescriptorCreateTeam);
  }

  methodDescriptorUpdateTeam = new grpcWeb.MethodDescriptor(
    '/Team/UpdateTeam',
    grpcWeb.MethodType.UNARY,
    team_pb.UpdateTeamRequest,
    google_protobuf_empty_pb.Empty,
    (request: team_pb.UpdateTeamRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  updateTeam(
    request: team_pb.UpdateTeamRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  updateTeam(
    request: team_pb.UpdateTeamRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  updateTeam(
    request: team_pb.UpdateTeamRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Team/UpdateTeam',
        request,
        metadata || {},
        this.methodDescriptorUpdateTeam,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Team/UpdateTeam',
    request,
    metadata || {},
    this.methodDescriptorUpdateTeam);
  }

  methodDescriptorListTeamMembers = new grpcWeb.MethodDescriptor(
    '/Team/ListTeamMembers',
    grpcWeb.MethodType.UNARY,
    team_pb.ListTeamMembersRequest,
    team_pb.ListTeamMembersResponse,
    (request: team_pb.ListTeamMembersRequest) => {
      return request.serializeBinary();
    },
    team_pb.ListTeamMembersResponse.deserializeBinary
  );

  listTeamMembers(
    request: team_pb.ListTeamMembersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<team_pb.ListTeamMembersResponse>;

  listTeamMembers(
    request: team_pb.ListTeamMembersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: team_pb.ListTeamMembersResponse) => void): grpcWeb.ClientReadableStream<team_pb.ListTeamMembersResponse>;

  listTeamMembers(
    request: team_pb.ListTeamMembersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: team_pb.ListTeamMembersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Team/ListTeamMembers',
        request,
        metadata || {},
        this.methodDescriptorListTeamMembers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Team/ListTeamMembers',
    request,
    metadata || {},
    this.methodDescriptorListTeamMembers);
  }

  methodDescriptorAddMemberToTeam = new grpcWeb.MethodDescriptor(
    '/Team/AddMemberToTeam',
    grpcWeb.MethodType.UNARY,
    team_pb.AddMemberToTeamRequest,
    google_protobuf_empty_pb.Empty,
    (request: team_pb.AddMemberToTeamRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  addMemberToTeam(
    request: team_pb.AddMemberToTeamRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  addMemberToTeam(
    request: team_pb.AddMemberToTeamRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  addMemberToTeam(
    request: team_pb.AddMemberToTeamRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Team/AddMemberToTeam',
        request,
        metadata || {},
        this.methodDescriptorAddMemberToTeam,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Team/AddMemberToTeam',
    request,
    metadata || {},
    this.methodDescriptorAddMemberToTeam);
  }

  methodDescriptorRemoveMemberFromTeam = new grpcWeb.MethodDescriptor(
    '/Team/RemoveMemberFromTeam',
    grpcWeb.MethodType.UNARY,
    team_pb.RemoveMemberFromRequest,
    google_protobuf_empty_pb.Empty,
    (request: team_pb.RemoveMemberFromRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  removeMemberFromTeam(
    request: team_pb.RemoveMemberFromRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  removeMemberFromTeam(
    request: team_pb.RemoveMemberFromRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  removeMemberFromTeam(
    request: team_pb.RemoveMemberFromRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Team/RemoveMemberFromTeam',
        request,
        metadata || {},
        this.methodDescriptorRemoveMemberFromTeam,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Team/RemoveMemberFromTeam',
    request,
    metadata || {},
    this.methodDescriptorRemoveMemberFromTeam);
  }

  methodDescriptorListMemberGroups = new grpcWeb.MethodDescriptor(
    '/Team/ListMemberGroups',
    grpcWeb.MethodType.UNARY,
    team_pb.ListMemberGroupsRequest,
    team_pb.ListTeamMemberGroupsResponse,
    (request: team_pb.ListMemberGroupsRequest) => {
      return request.serializeBinary();
    },
    team_pb.ListTeamMemberGroupsResponse.deserializeBinary
  );

  listMemberGroups(
    request: team_pb.ListMemberGroupsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<team_pb.ListTeamMemberGroupsResponse>;

  listMemberGroups(
    request: team_pb.ListMemberGroupsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: team_pb.ListTeamMemberGroupsResponse) => void): grpcWeb.ClientReadableStream<team_pb.ListTeamMemberGroupsResponse>;

  listMemberGroups(
    request: team_pb.ListMemberGroupsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: team_pb.ListTeamMemberGroupsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Team/ListMemberGroups',
        request,
        metadata || {},
        this.methodDescriptorListMemberGroups,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Team/ListMemberGroups',
    request,
    metadata || {},
    this.methodDescriptorListMemberGroups);
  }

  methodDescriptorCreateMemberGroup = new grpcWeb.MethodDescriptor(
    '/Team/CreateMemberGroup',
    grpcWeb.MethodType.UNARY,
    team_pb.CreateTeamMemberGroupRequest,
    team_pb.CreateTeamMemberGroupResponse,
    (request: team_pb.CreateTeamMemberGroupRequest) => {
      return request.serializeBinary();
    },
    team_pb.CreateTeamMemberGroupResponse.deserializeBinary
  );

  createMemberGroup(
    request: team_pb.CreateTeamMemberGroupRequest,
    metadata?: grpcWeb.Metadata | null): Promise<team_pb.CreateTeamMemberGroupResponse>;

  createMemberGroup(
    request: team_pb.CreateTeamMemberGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: team_pb.CreateTeamMemberGroupResponse) => void): grpcWeb.ClientReadableStream<team_pb.CreateTeamMemberGroupResponse>;

  createMemberGroup(
    request: team_pb.CreateTeamMemberGroupRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: team_pb.CreateTeamMemberGroupResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Team/CreateMemberGroup',
        request,
        metadata || {},
        this.methodDescriptorCreateMemberGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Team/CreateMemberGroup',
    request,
    metadata || {},
    this.methodDescriptorCreateMemberGroup);
  }

  methodDescriptorUpdateMemberGroup = new grpcWeb.MethodDescriptor(
    '/Team/UpdateMemberGroup',
    grpcWeb.MethodType.UNARY,
    team_pb.UpdateTeamMemberGroupRequest,
    google_protobuf_empty_pb.Empty,
    (request: team_pb.UpdateTeamMemberGroupRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  updateMemberGroup(
    request: team_pb.UpdateTeamMemberGroupRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  updateMemberGroup(
    request: team_pb.UpdateTeamMemberGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  updateMemberGroup(
    request: team_pb.UpdateTeamMemberGroupRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Team/UpdateMemberGroup',
        request,
        metadata || {},
        this.methodDescriptorUpdateMemberGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Team/UpdateMemberGroup',
    request,
    metadata || {},
    this.methodDescriptorUpdateMemberGroup);
  }

  methodDescriptorDeleteMemberGroup = new grpcWeb.MethodDescriptor(
    '/Team/DeleteMemberGroup',
    grpcWeb.MethodType.UNARY,
    team_pb.DeleteTeamMemberGroupRequest,
    google_protobuf_empty_pb.Empty,
    (request: team_pb.DeleteTeamMemberGroupRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteMemberGroup(
    request: team_pb.DeleteTeamMemberGroupRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteMemberGroup(
    request: team_pb.DeleteTeamMemberGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteMemberGroup(
    request: team_pb.DeleteTeamMemberGroupRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Team/DeleteMemberGroup',
        request,
        metadata || {},
        this.methodDescriptorDeleteMemberGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Team/DeleteMemberGroup',
    request,
    metadata || {},
    this.methodDescriptorDeleteMemberGroup);
  }

  methodDescriptorAddMemberToGroup = new grpcWeb.MethodDescriptor(
    '/Team/AddMemberToGroup',
    grpcWeb.MethodType.UNARY,
    team_pb.AddTeamMemberToGroupRequest,
    google_protobuf_empty_pb.Empty,
    (request: team_pb.AddTeamMemberToGroupRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  addMemberToGroup(
    request: team_pb.AddTeamMemberToGroupRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  addMemberToGroup(
    request: team_pb.AddTeamMemberToGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  addMemberToGroup(
    request: team_pb.AddTeamMemberToGroupRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Team/AddMemberToGroup',
        request,
        metadata || {},
        this.methodDescriptorAddMemberToGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Team/AddMemberToGroup',
    request,
    metadata || {},
    this.methodDescriptorAddMemberToGroup);
  }

  methodDescriptorRemoveMemberFromGroup = new grpcWeb.MethodDescriptor(
    '/Team/RemoveMemberFromGroup',
    grpcWeb.MethodType.UNARY,
    team_pb.RemoveTeamMemberFromGroupRequest,
    google_protobuf_empty_pb.Empty,
    (request: team_pb.RemoveTeamMemberFromGroupRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  removeMemberFromGroup(
    request: team_pb.RemoveTeamMemberFromGroupRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  removeMemberFromGroup(
    request: team_pb.RemoveTeamMemberFromGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  removeMemberFromGroup(
    request: team_pb.RemoveTeamMemberFromGroupRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Team/RemoveMemberFromGroup',
        request,
        metadata || {},
        this.methodDescriptorRemoveMemberFromGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Team/RemoveMemberFromGroup',
    request,
    metadata || {},
    this.methodDescriptorRemoveMemberFromGroup);
  }

}

