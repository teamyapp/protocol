/**
 * @fileoverview gRPC-Web generated client stub for 
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: task.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as task_pb from './task_pb'; // proto import: "task.proto"
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"


export class TaskClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetTask = new grpcWeb.MethodDescriptor(
    '/Task/GetTask',
    grpcWeb.MethodType.UNARY,
    task_pb.GetTaskRequest,
    task_pb.TaskMsg,
    (request: task_pb.GetTaskRequest) => {
      return request.serializeBinary();
    },
    task_pb.TaskMsg.deserializeBinary
  );

  getTask(
    request: task_pb.GetTaskRequest,
    metadata?: grpcWeb.Metadata | null): Promise<task_pb.TaskMsg>;

  getTask(
    request: task_pb.GetTaskRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: task_pb.TaskMsg) => void): grpcWeb.ClientReadableStream<task_pb.TaskMsg>;

  getTask(
    request: task_pb.GetTaskRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: task_pb.TaskMsg) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Task/GetTask',
        request,
        metadata || {},
        this.methodDescriptorGetTask,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Task/GetTask',
    request,
    metadata || {},
    this.methodDescriptorGetTask);
  }

  methodDescriptorGetAwaitForTasks = new grpcWeb.MethodDescriptor(
    '/Task/GetAwaitForTasks',
    grpcWeb.MethodType.UNARY,
    task_pb.GetAwaitForTasksRequest,
    task_pb.GetAwaitForTasksResponse,
    (request: task_pb.GetAwaitForTasksRequest) => {
      return request.serializeBinary();
    },
    task_pb.GetAwaitForTasksResponse.deserializeBinary
  );

  getAwaitForTasks(
    request: task_pb.GetAwaitForTasksRequest,
    metadata?: grpcWeb.Metadata | null): Promise<task_pb.GetAwaitForTasksResponse>;

  getAwaitForTasks(
    request: task_pb.GetAwaitForTasksRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: task_pb.GetAwaitForTasksResponse) => void): grpcWeb.ClientReadableStream<task_pb.GetAwaitForTasksResponse>;

  getAwaitForTasks(
    request: task_pb.GetAwaitForTasksRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: task_pb.GetAwaitForTasksResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Task/GetAwaitForTasks',
        request,
        metadata || {},
        this.methodDescriptorGetAwaitForTasks,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Task/GetAwaitForTasks',
    request,
    metadata || {},
    this.methodDescriptorGetAwaitForTasks);
  }

  methodDescriptorCreateTask = new grpcWeb.MethodDescriptor(
    '/Task/CreateTask',
    grpcWeb.MethodType.UNARY,
    task_pb.CreateTaskRequest,
    task_pb.CreateTaskResponse,
    (request: task_pb.CreateTaskRequest) => {
      return request.serializeBinary();
    },
    task_pb.CreateTaskResponse.deserializeBinary
  );

  createTask(
    request: task_pb.CreateTaskRequest,
    metadata?: grpcWeb.Metadata | null): Promise<task_pb.CreateTaskResponse>;

  createTask(
    request: task_pb.CreateTaskRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: task_pb.CreateTaskResponse) => void): grpcWeb.ClientReadableStream<task_pb.CreateTaskResponse>;

  createTask(
    request: task_pb.CreateTaskRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: task_pb.CreateTaskResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Task/CreateTask',
        request,
        metadata || {},
        this.methodDescriptorCreateTask,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Task/CreateTask',
    request,
    metadata || {},
    this.methodDescriptorCreateTask);
  }

  methodDescriptorUpdateTask = new grpcWeb.MethodDescriptor(
    '/Task/UpdateTask',
    grpcWeb.MethodType.UNARY,
    task_pb.UpdateTaskRequest,
    google_protobuf_empty_pb.Empty,
    (request: task_pb.UpdateTaskRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  updateTask(
    request: task_pb.UpdateTaskRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  updateTask(
    request: task_pb.UpdateTaskRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  updateTask(
    request: task_pb.UpdateTaskRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Task/UpdateTask',
        request,
        metadata || {},
        this.methodDescriptorUpdateTask,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Task/UpdateTask',
    request,
    metadata || {},
    this.methodDescriptorUpdateTask);
  }

  methodDescriptorDeleteTask = new grpcWeb.MethodDescriptor(
    '/Task/DeleteTask',
    grpcWeb.MethodType.UNARY,
    task_pb.DeleteTaskRequest,
    google_protobuf_empty_pb.Empty,
    (request: task_pb.DeleteTaskRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteTask(
    request: task_pb.DeleteTaskRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteTask(
    request: task_pb.DeleteTaskRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteTask(
    request: task_pb.DeleteTaskRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Task/DeleteTask',
        request,
        metadata || {},
        this.methodDescriptorDeleteTask,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Task/DeleteTask',
    request,
    metadata || {},
    this.methodDescriptorDeleteTask);
  }

  methodDescriptorMoveTaskToUpcoming = new grpcWeb.MethodDescriptor(
    '/Task/MoveTaskToUpcoming',
    grpcWeb.MethodType.UNARY,
    task_pb.MoveTaskToUpcomingRequest,
    google_protobuf_empty_pb.Empty,
    (request: task_pb.MoveTaskToUpcomingRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  moveTaskToUpcoming(
    request: task_pb.MoveTaskToUpcomingRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  moveTaskToUpcoming(
    request: task_pb.MoveTaskToUpcomingRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  moveTaskToUpcoming(
    request: task_pb.MoveTaskToUpcomingRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Task/MoveTaskToUpcoming',
        request,
        metadata || {},
        this.methodDescriptorMoveTaskToUpcoming,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Task/MoveTaskToUpcoming',
    request,
    metadata || {},
    this.methodDescriptorMoveTaskToUpcoming);
  }

  methodDescriptorMoveTaskToInProgress = new grpcWeb.MethodDescriptor(
    '/Task/MoveTaskToInProgress',
    grpcWeb.MethodType.UNARY,
    task_pb.MoveTaskToInProgressRequest,
    google_protobuf_empty_pb.Empty,
    (request: task_pb.MoveTaskToInProgressRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  moveTaskToInProgress(
    request: task_pb.MoveTaskToInProgressRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  moveTaskToInProgress(
    request: task_pb.MoveTaskToInProgressRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  moveTaskToInProgress(
    request: task_pb.MoveTaskToInProgressRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Task/MoveTaskToInProgress',
        request,
        metadata || {},
        this.methodDescriptorMoveTaskToInProgress,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Task/MoveTaskToInProgress',
    request,
    metadata || {},
    this.methodDescriptorMoveTaskToInProgress);
  }

  methodDescriptorMoveTaskToDelivered = new grpcWeb.MethodDescriptor(
    '/Task/MoveTaskToDelivered',
    grpcWeb.MethodType.UNARY,
    task_pb.MoveTaskToDeliveredRequest,
    google_protobuf_empty_pb.Empty,
    (request: task_pb.MoveTaskToDeliveredRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  moveTaskToDelivered(
    request: task_pb.MoveTaskToDeliveredRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  moveTaskToDelivered(
    request: task_pb.MoveTaskToDeliveredRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  moveTaskToDelivered(
    request: task_pb.MoveTaskToDeliveredRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Task/MoveTaskToDelivered',
        request,
        metadata || {},
        this.methodDescriptorMoveTaskToDelivered,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Task/MoveTaskToDelivered',
    request,
    metadata || {},
    this.methodDescriptorMoveTaskToDelivered);
  }

  methodDescriptorMoveTaskToBlocked = new grpcWeb.MethodDescriptor(
    '/Task/MoveTaskToBlocked',
    grpcWeb.MethodType.UNARY,
    task_pb.MoveTaskToBlockedRequest,
    google_protobuf_empty_pb.Empty,
    (request: task_pb.MoveTaskToBlockedRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  moveTaskToBlocked(
    request: task_pb.MoveTaskToBlockedRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  moveTaskToBlocked(
    request: task_pb.MoveTaskToBlockedRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  moveTaskToBlocked(
    request: task_pb.MoveTaskToBlockedRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Task/MoveTaskToBlocked',
        request,
        metadata || {},
        this.methodDescriptorMoveTaskToBlocked,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Task/MoveTaskToBlocked',
    request,
    metadata || {},
    this.methodDescriptorMoveTaskToBlocked);
  }

  methodDescriptorAddAwaitForTask = new grpcWeb.MethodDescriptor(
    '/Task/AddAwaitForTask',
    grpcWeb.MethodType.UNARY,
    task_pb.AddAwaitForTaskRequest,
    google_protobuf_empty_pb.Empty,
    (request: task_pb.AddAwaitForTaskRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  addAwaitForTask(
    request: task_pb.AddAwaitForTaskRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  addAwaitForTask(
    request: task_pb.AddAwaitForTaskRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  addAwaitForTask(
    request: task_pb.AddAwaitForTaskRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Task/AddAwaitForTask',
        request,
        metadata || {},
        this.methodDescriptorAddAwaitForTask,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Task/AddAwaitForTask',
    request,
    metadata || {},
    this.methodDescriptorAddAwaitForTask);
  }

  methodDescriptorRemoveAwaitForTask = new grpcWeb.MethodDescriptor(
    '/Task/RemoveAwaitForTask',
    grpcWeb.MethodType.UNARY,
    task_pb.RemoveAwaitForTaskRequest,
    google_protobuf_empty_pb.Empty,
    (request: task_pb.RemoveAwaitForTaskRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  removeAwaitForTask(
    request: task_pb.RemoveAwaitForTaskRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  removeAwaitForTask(
    request: task_pb.RemoveAwaitForTaskRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  removeAwaitForTask(
    request: task_pb.RemoveAwaitForTaskRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Task/RemoveAwaitForTask',
        request,
        metadata || {},
        this.methodDescriptorRemoveAwaitForTask,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Task/RemoveAwaitForTask',
    request,
    metadata || {},
    this.methodDescriptorRemoveAwaitForTask);
  }

}

