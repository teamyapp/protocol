syntax = "proto3";
option go_package = "github.com/teamyapp/protocol/pb/pbgo/pbteamy";
import "google/protobuf/empty.proto";
import "teamy/message/sprint.proto";
import "google/protobuf/timestamp.proto";

service SprintService {
	rpc GetSprint(GetSprintRequest) returns (GetSprintResponse);
	rpc ListSprints(ListSprintsRequest) returns (ListSprintsResponse);
	rpc CreateSprint(CreateSprintRequest) returns (CreateSprintResponse);
	rpc DeleteSprint(DeleteSprintRequest) returns (google.protobuf.Empty);
	rpc GetActiveSprint(GetActiveSprintRequest) returns (GetSprintResponse);
	rpc AddTaskToSprint(AddTaskToSprintRequest) returns (google.protobuf.Empty);
	rpc RemoveTaskFromSprint(RemoveTaskToSprintRequest) returns (google.protobuf.Empty);
	rpc AddTeamMemberToSprint(AddTeamMemberToSprintRequest) returns (google.protobuf.Empty);
	rpc RemoveTeamMemberFromSprint(RemoveTeamMemberFromSprintRequest) returns (google.protobuf.Empty);
	rpc MoveTasksToSprint(MoveTasksToSprintRequest) returns (google.protobuf.Empty);
	rpc CopyTasksToSprint(CopyTasksToSprintRequest) returns (google.protobuf.Empty);
}

message GetSprintRequest {
	uint64 sprintId = 1;
}

message ListSprintsRequest {
	optional google.protobuf.Timestamp startAtAndAfter = 1;
	optional google.protobuf.Timestamp sortByStartAt = 2;
	optional int32 countLimit = 3;
}

message ListSprintsResponse {
	repeated Sprint sprints = 1;
}

message CreateSprintRequest {
	google.protobuf.Timestamp startDate = 1;
	google.protobuf.Timestamp endDate = 2;
}

message CreateSprintResponse {
	Sprint sprint = 1;
}

message GetSprintResponse {
	Sprint sprint = 1;
}

message GetActiveSprintRequest {
	uint64 teamId = 1;
}

message AddTaskToSprintRequest {
	uint64 taskId = 1;
	uint64 sprintId = 2;
}

message RemoveTaskToSprintRequest {
	uint64 taskId = 1;
	uint64 sprintId = 2;
}

message DeleteSprintRequest {
	uint64 sprintId = 1;
}


message AddTeamMemberToSprintRequest {
	uint64 sprintId = 1;
	uint64 teamId = 2;
	uint64 userId = 3;
}

message RemoveTeamMemberFromSprintRequest {
	uint64 sprintId = 1;
	uint64 teamId = 2;
	uint64 userId = 3;
}

message MoveTasksToSprintRequest {
	uint64 fromSprintId = 1;
	uint64 toSprintId = 2;
	repeated uint64 taskIds = 3;
}

message CopyTasksToSprintRequest {
	uint64 toSprintId = 1;
	repeated uint64 taskIds = 2;
}